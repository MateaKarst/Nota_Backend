{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/lib/supabase.ts"],"sourcesContent":["// src/lib/supabase.ts\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nexport const supabase = createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n);\r\n\r\nexport const supabaseAdmin = createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;AAEO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD;AAK5B,MAAM,gBAAgB,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,gFAEpC,QAAQ,GAAG,CAAC,yBAAyB","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/utils/cors.ts"],"sourcesContent":["// src/utils/cors.ts\r\nimport { NextResponse } from 'next/server'\r\n\r\nconst allowedOrigins = [\r\n    // localhost browser\r\n    'http://localhost:3000',\r\n    'http://localhost:3001',\r\n    'http://localhost:3002',\r\n\r\n    // vio n mk network?\r\n    'http://192.168.1.38:3000',\r\n    'http://192.168.1.38:3001',\r\n    'http://192.168.1.38:3002',\r\n\r\n    // app sites\r\n    'https://nota-community.netlify.app',\r\n    'https://nota-backend-delta.vercel.app'\r\n]\r\n\r\nexport function handlePreflight(request: Request): NextResponse {\r\n    const origin = request.headers.get('origin') || '';\r\n    const headers: Record<string, string> = {\r\n        'Access-Control-Allow-Methods': 'GET, PATCH, POST, PUT, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization, x-refresh-token, x-user-id',\r\n        'Access-Control-Allow-Credentials': 'true',\r\n    };\r\n\r\n    if (allowedOrigins.includes(origin)) {\r\n        headers['Access-Control-Allow-Origin'] = origin;\r\n    }\r\n\r\n    return new NextResponse(null, {\r\n        status: 204,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport function addCorsHeaders(\r\n    request: Request,\r\n    response: NextResponse\r\n): NextResponse {\r\n    const origin = request.headers.get('origin') || ''\r\n    if (allowedOrigins.includes(origin)) {\r\n        response.headers.set('Access-Control-Allow-Origin', origin)\r\n        response.headers.set('Access-Control-Allow-Credentials', 'true')\r\n    }\r\n    return response\r\n}"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;;AAEA,MAAM,iBAAiB;IACnB,oBAAoB;IACpB;IACA;IACA;IAEA,oBAAoB;IACpB;IACA;IACA;IAEA,YAAY;IACZ;IACA;CACH;AAEM,SAAS,gBAAgB,OAAgB;IAC5C,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAChD,MAAM,UAAkC;QACpC,gCAAgC;QAChC,gCAAgC;QAChC,oCAAoC;IACxC;IAEA,IAAI,eAAe,QAAQ,CAAC,SAAS;QACjC,OAAO,CAAC,8BAA8B,GAAG;IAC7C;IAEA,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,MAAM;QAC1B,QAAQ;QACR;IACJ;AACJ;AAEO,SAAS,eACZ,OAAgB,EAChB,QAAsB;IAEtB,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAChD,IAAI,eAAe,QAAQ,CAAC,SAAS;QACjC,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B;QACpD,SAAS,OAAO,CAAC,GAAG,CAAC,oCAAoC;IAC7D;IACA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/app/api/songs/%5Bid%5D/route.ts"],"sourcesContent":["// src/app/api/songs/[id]/route.ts\r\nimport { NextResponse, NextRequest } from \"next/server\";\r\nimport { supabaseAdmin } from \"@/lib/supabase\";\r\nimport { addCorsHeaders, handlePreflight } from \"@/utils/cors\";\r\n\r\nexport async function OPTIONS(request: NextRequest) {\r\n    return handlePreflight(request);\r\n}\r\n\r\nexport async function DELETE(\r\n    request: NextRequest,\r\n    { params }: { params: Promise<{ id: string }> }\r\n) {\r\n    const songId = (await params).id;\r\n\r\n    // First delete tracks associated with the song\r\n    const { error: tracksDeleteError } = await supabaseAdmin\r\n        .from(\"tracks\")\r\n        .delete()\r\n        .eq(\"song_id\", songId);\r\n\r\n    if (tracksDeleteError) {\r\n        const res = NextResponse.json(\r\n            { message: \"Error deleting tracks\", error: tracksDeleteError.message },\r\n            { status: 500 }\r\n        );\r\n        return addCorsHeaders(request, res); // ✅ Fix: pass request here\r\n    }\r\n\r\n    // Then delete the song\r\n    const { error: songDeleteError } = await supabaseAdmin\r\n        .from(\"songs\")\r\n        .delete()\r\n        .eq(\"id\", songId);\r\n\r\n    if (songDeleteError) {\r\n        const res = NextResponse.json(\r\n            { message: \"Error deleting song\", error: songDeleteError.message },\r\n            { status: 500 }\r\n        );\r\n        return addCorsHeaders(request, res); // ✅ Fix: pass request here\r\n    }\r\n\r\n    const res = NextResponse.json(\r\n        { message: \"Song and its tracks deleted\" },\r\n        { status: 200 }\r\n    );\r\n    return addCorsHeaders(request, res); // ✅ Fix: pass request here\r\n}\r\n\r\n\r\nexport async function GET(\r\n    request: NextRequest,\r\n    { params }: { params: Promise<{ id: string }> }\r\n) {\r\n    const songId = (await params).id;\r\n\r\n    const { data: song, error: songError } = await supabaseAdmin\r\n        .from(\"songs\")\r\n        .select(\"*\")\r\n        .eq(\"id\", songId)\r\n        .single();\r\n\r\n    if (songError) {\r\n        const res = NextResponse.json(\r\n            { message: \"Error fetching song\", error: songError.message },\r\n            { status: 500 }\r\n        );\r\n        return addCorsHeaders(request, res);\r\n    }\r\n\r\n    const { data: tracks, error: tracksError } = await supabaseAdmin\r\n        .from(\"tracks\")\r\n        .select(\"*\")\r\n        .eq(\"song_id\", songId);\r\n\r\n    if (tracksError) {\r\n        const res = NextResponse.json(\r\n            { message: \"Error fetching tracks\", error: tracksError.message },\r\n            { status: 500 }\r\n        );\r\n        return addCorsHeaders(request, res);\r\n    }\r\n\r\n    const res = NextResponse.json({ ...song, tracks }, { status: 200 });\r\n    return addCorsHeaders(request, res);\r\n}\r\n\r\ntype SongUpdateData = {\r\n    title?: string;\r\n    description?: string;\r\n    cover_image?: string;\r\n    compiled_path?: string;\r\n};\r\n\r\nexport async function PATCH(\r\n    request: NextRequest,\r\n    { params }: { params: Promise<{ id: string }> }\r\n) {\r\n    const songId = (await params).id;\r\n\r\n    let updateData: SongUpdateData = {};\r\n\r\n    const contentType = request.headers.get(\"content-type\") || \"\";\r\n\r\n    if (contentType.includes(\"application/json\")) {\r\n        const body = await request.json();\r\n        updateData = body;\r\n    } else if (contentType.includes(\"multipart/form-data\")) {\r\n        const form = await request.formData();\r\n        const file = form.get(\"file\") as File | null;\r\n        if (file) {\r\n            const filename = `${crypto.randomUUID()}-${file.name}`;\r\n            const { error: uploadError } = await supabaseAdmin.storage\r\n                .from(\"songs\")\r\n                .upload(filename, file, { contentType: file.type, upsert: true });\r\n\r\n            if (uploadError) {\r\n                const res = NextResponse.json(\r\n                    { message: \"File upload error\", error: uploadError.message },\r\n                    { status: 500 }\r\n                );\r\n                return addCorsHeaders(request, res);\r\n            }\r\n\r\n            const publicUrlData = supabaseAdmin.storage.from(\"songs\").getPublicUrl(filename);\r\n            const publicUrl = publicUrlData.data.publicUrl;\r\n            updateData.compiled_path = publicUrl;\r\n        }\r\n\r\n        const fields: (keyof SongUpdateData)[] = [\"title\", \"description\", \"cover_image\"];\r\n        fields.forEach((key) => {\r\n            const val = form.get(key);\r\n            if (typeof val === \"string\") {\r\n                updateData[key] = val;\r\n            }\r\n        });\r\n    }\r\n\r\n    if (Object.keys(updateData).length === 0) {\r\n        const res = NextResponse.json({ message: \"No data provided for update\" }, { status: 400 });\r\n        return addCorsHeaders(request, res);\r\n    }\r\n\r\n    const { data, error: updateError } = await supabaseAdmin\r\n        .from(\"songs\")\r\n        .update(updateData)\r\n        .eq(\"id\", songId)\r\n        .select()\r\n        .single();\r\n\r\n    if (updateError) {\r\n        const res = NextResponse.json(\r\n            { message: \"Error updating song\", error: updateError.message },\r\n            { status: 500 }\r\n        );\r\n        return addCorsHeaders(request, res);\r\n    }\r\n\r\n    const res = NextResponse.json({ message: \"Song updated\", data }, { status: 200 });\r\n    return addCorsHeaders(request, res);\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}