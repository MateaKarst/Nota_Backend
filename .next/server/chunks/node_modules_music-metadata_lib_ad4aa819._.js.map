{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/matroska/types.js"],"sourcesContent":["export const TargetType = {\n    10: 'shot',\n    20: 'scene',\n    30: 'track',\n    40: 'part',\n    50: 'album',\n    60: 'edition',\n    70: 'collection'\n};\nexport const TrackType = {\n    video: 0x01,\n    audio: 0x02,\n    complex: 0x03,\n    logo: 0x04,\n    subtitle: 0x11,\n    button: 0x12,\n    control: 0x20\n};\nexport const TrackTypeValueToKeyMap = {\n    [TrackType.video]: 'video',\n    [TrackType.audio]: 'audio',\n    [TrackType.complex]: 'complex',\n    [TrackType.logo]: 'logo',\n    [TrackType.subtitle]: 'subtitle',\n    [TrackType.button]: 'button',\n    [TrackType.control]: 'control'\n};\n//# sourceMappingURL=types.js.map"],"names":[],"mappings":";;;;;AAAO,MAAM,aAAa;IACtB,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACR;AACO,MAAM,YAAY;IACrB,OAAO;IACP,OAAO;IACP,SAAS;IACT,MAAM;IACN,UAAU;IACV,QAAQ;IACR,SAAS;AACb;AACO,MAAM,yBAAyB;IAClC,CAAC,UAAU,KAAK,CAAC,EAAE;IACnB,CAAC,UAAU,KAAK,CAAC,EAAE;IACnB,CAAC,UAAU,OAAO,CAAC,EAAE;IACrB,CAAC,UAAU,IAAI,CAAC,EAAE;IAClB,CAAC,UAAU,QAAQ,CAAC,EAAE;IACtB,CAAC,UAAU,MAAM,CAAC,EAAE;IACpB,CAAC,UAAU,OAAO,CAAC,EAAE;AACzB,GACA,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/GenericTagTypes.js"],"sourcesContent":["const defaultTagInfo = {\n    multiple: false,\n};\nconst commonTags = {\n    year: defaultTagInfo,\n    track: defaultTagInfo,\n    disk: defaultTagInfo,\n    title: defaultTagInfo,\n    artist: defaultTagInfo,\n    artists: { multiple: true, unique: true },\n    albumartist: defaultTagInfo,\n    album: defaultTagInfo,\n    date: defaultTagInfo,\n    originaldate: defaultTagInfo,\n    originalyear: defaultTagInfo,\n    releasedate: defaultTagInfo,\n    comment: { multiple: true, unique: false },\n    genre: { multiple: true, unique: true },\n    picture: { multiple: true, unique: true },\n    composer: { multiple: true, unique: true },\n    lyrics: { multiple: true, unique: false },\n    albumsort: { multiple: false, unique: true },\n    titlesort: { multiple: false, unique: true },\n    work: { multiple: false, unique: true },\n    artistsort: { multiple: false, unique: true },\n    albumartistsort: { multiple: false, unique: true },\n    composersort: { multiple: false, unique: true },\n    lyricist: { multiple: true, unique: true },\n    writer: { multiple: true, unique: true },\n    conductor: { multiple: true, unique: true },\n    remixer: { multiple: true, unique: true },\n    arranger: { multiple: true, unique: true },\n    engineer: { multiple: true, unique: true },\n    producer: { multiple: true, unique: true },\n    technician: { multiple: true, unique: true },\n    djmixer: { multiple: true, unique: true },\n    mixer: { multiple: true, unique: true },\n    label: { multiple: true, unique: true },\n    grouping: defaultTagInfo,\n    subtitle: { multiple: true },\n    discsubtitle: defaultTagInfo,\n    totaltracks: defaultTagInfo,\n    totaldiscs: defaultTagInfo,\n    compilation: defaultTagInfo,\n    rating: { multiple: true },\n    bpm: defaultTagInfo,\n    mood: defaultTagInfo,\n    media: defaultTagInfo,\n    catalognumber: { multiple: true, unique: true },\n    tvShow: defaultTagInfo,\n    tvShowSort: defaultTagInfo,\n    tvSeason: defaultTagInfo,\n    tvEpisode: defaultTagInfo,\n    tvEpisodeId: defaultTagInfo,\n    tvNetwork: defaultTagInfo,\n    podcast: defaultTagInfo,\n    podcasturl: defaultTagInfo,\n    releasestatus: defaultTagInfo,\n    releasetype: { multiple: true },\n    releasecountry: defaultTagInfo,\n    script: defaultTagInfo,\n    language: defaultTagInfo,\n    copyright: defaultTagInfo,\n    license: defaultTagInfo,\n    encodedby: defaultTagInfo,\n    encodersettings: defaultTagInfo,\n    gapless: defaultTagInfo,\n    barcode: defaultTagInfo,\n    isrc: { multiple: true },\n    asin: defaultTagInfo,\n    musicbrainz_recordingid: defaultTagInfo,\n    musicbrainz_trackid: defaultTagInfo,\n    musicbrainz_albumid: defaultTagInfo,\n    musicbrainz_artistid: { multiple: true },\n    musicbrainz_albumartistid: { multiple: true },\n    musicbrainz_releasegroupid: defaultTagInfo,\n    musicbrainz_workid: defaultTagInfo,\n    musicbrainz_trmid: defaultTagInfo,\n    musicbrainz_discid: defaultTagInfo,\n    acoustid_id: defaultTagInfo,\n    acoustid_fingerprint: defaultTagInfo,\n    musicip_puid: defaultTagInfo,\n    musicip_fingerprint: defaultTagInfo,\n    website: defaultTagInfo,\n    'performer:instrument': { multiple: true, unique: true },\n    averageLevel: defaultTagInfo,\n    peakLevel: defaultTagInfo,\n    notes: { multiple: true, unique: false },\n    key: defaultTagInfo,\n    originalalbum: defaultTagInfo,\n    originalartist: defaultTagInfo,\n    discogs_artist_id: { multiple: true, unique: true },\n    discogs_release_id: defaultTagInfo,\n    discogs_label_id: defaultTagInfo,\n    discogs_master_release_id: defaultTagInfo,\n    discogs_votes: defaultTagInfo,\n    discogs_rating: defaultTagInfo,\n    replaygain_track_peak: defaultTagInfo,\n    replaygain_track_gain: defaultTagInfo,\n    replaygain_album_peak: defaultTagInfo,\n    replaygain_album_gain: defaultTagInfo,\n    replaygain_track_minmax: defaultTagInfo,\n    replaygain_album_minmax: defaultTagInfo,\n    replaygain_undo: defaultTagInfo,\n    description: { multiple: true },\n    longDescription: defaultTagInfo,\n    category: { multiple: true },\n    hdVideo: defaultTagInfo,\n    keywords: { multiple: true },\n    movement: defaultTagInfo,\n    movementIndex: defaultTagInfo,\n    movementTotal: defaultTagInfo,\n    podcastId: defaultTagInfo,\n    showMovement: defaultTagInfo,\n    stik: defaultTagInfo\n};\nexport const commonTagsKeys = /* @__PURE__ */ Object.keys(commonTags);\n/**\n * @param alias Name of common tag\n * @returns {boolean|*} true if given alias is mapped as a singleton', otherwise false\n */\nexport function isSingleton(alias) {\n    return commonTags[alias] && !commonTags[alias].multiple;\n}\n/**\n * @param alias Common (generic) tag\n * @returns {boolean|*} true if given alias is a singleton or explicitly marked as unique\n */\nexport function isUnique(alias) {\n    return !commonTags[alias].multiple || commonTags[alias].unique || false;\n}\n//# sourceMappingURL=GenericTagTypes.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/GenericTagMapper.js"],"sourcesContent":["export class CommonTagMapper {\n    static toIntOrNull(str) {\n        const cleaned = Number.parseInt(str, 10);\n        return Number.isNaN(cleaned) ? null : cleaned;\n    }\n    // TODO: a string of 1of1 would fail to be converted\n    // converts 1/10 to no : 1, of : 10\n    // or 1 to no : 1, of : 0\n    static normalizeTrack(origVal) {\n        const split = origVal.toString().split('/');\n        return {\n            no: Number.parseInt(split[0], 10) || null,\n            of: Number.parseInt(split[1], 10) || null\n        };\n    }\n    constructor(tagTypes, tagMap) {\n        this.tagTypes = tagTypes;\n        this.tagMap = tagMap;\n    }\n    /**\n     * Process and set common tags\n     * write common tags to\n     * @param tag Native tag\n     * @param warnings Register warnings\n     * @return common name\n     */\n    mapGenericTag(tag, warnings) {\n        tag = { id: tag.id, value: tag.value }; // clone object\n        this.postMap(tag, warnings);\n        // Convert native tag event to generic 'alias' tag\n        const id = this.getCommonName(tag.id);\n        return id ? { id, value: tag.value } : null;\n    }\n    /**\n     * Convert native tag key to common tag key\n     * @param tag Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag];\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag Tag e.g. {\"©alb\", \"Buena Vista Social Club\")\n     * @param warnings Used to register warnings\n     */\n    postMap(tag, warnings) {\n        return;\n    }\n}\nCommonTagMapper.maxRatingScore = 1;\n//# sourceMappingURL=GenericTagMapper.js.map"],"names":[],"mappings":";;;AAAO,MAAM;IACT,OAAO,YAAY,GAAG,EAAE;QACpB,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK;QACrC,OAAO,OAAO,KAAK,CAAC,WAAW,OAAO;IAC1C;IACA,oDAAoD;IACpD,mCAAmC;IACnC,yBAAyB;IACzB,OAAO,eAAe,OAAO,EAAE;QAC3B,MAAM,QAAQ,QAAQ,QAAQ,GAAG,KAAK,CAAC;QACvC,OAAO;YACH,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO;YACrC,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO;QACzC;IACJ;IACA,YAAY,QAAQ,EAAE,MAAM,CAAE;QAC1B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,MAAM,GAAG;IAClB;IACA;;;;;;KAMC,GACD,cAAc,GAAG,EAAE,QAAQ,EAAE;QACzB,MAAM;YAAE,IAAI,IAAI,EAAE;YAAE,OAAO,IAAI,KAAK;QAAC,GAAG,eAAe;QACvD,IAAI,CAAC,OAAO,CAAC,KAAK;QAClB,kDAAkD;QAClD,MAAM,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;QACpC,OAAO,KAAK;YAAE;YAAI,OAAO,IAAI,KAAK;QAAC,IAAI;IAC3C;IACA;;;;KAIC,GACD,cAAc,GAAG,EAAE;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;IAC3B;IACA;;;;KAIC,GACD,QAAQ,GAAG,EAAE,QAAQ,EAAE;QACnB;IACJ;AACJ;AACA,gBAAgB,cAAc,GAAG,GACjC,4CAA4C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/id3v1/ID3v1TagMap.js"],"sourcesContent":["import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst id3v1TagMap = {\n    title: 'title',\n    artist: 'artist',\n    album: 'album',\n    year: 'year',\n    comment: 'comment',\n    track: 'track',\n    genre: 'genre'\n};\nexport class ID3v1TagMapper extends CommonTagMapper {\n    constructor() {\n        super(['ID3v1'], id3v1TagMap);\n    }\n}\n//# sourceMappingURL=ID3v1TagMap.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;CAEC,GACD,MAAM,cAAc;IAChB,OAAO;IACP,QAAQ;IACR,OAAO;IACP,MAAM;IACN,SAAS;IACT,OAAO;IACP,OAAO;AACX;AACO,MAAM,uBAAuB,wKAAA,CAAA,kBAAe;IAC/C,aAAc;QACV,KAAK,CAAC;YAAC;SAAQ,EAAE;IACrB;AACJ,EACA,uCAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/CaseInsensitiveTagMap.js"],"sourcesContent":["import { CommonTagMapper } from './GenericTagMapper.js';\nexport class CaseInsensitiveTagMap extends CommonTagMapper {\n    constructor(tagTypes, tagMap) {\n        const upperCaseMap = {};\n        for (const tag of Object.keys(tagMap)) {\n            upperCaseMap[tag.toUpperCase()] = tagMap[tag];\n        }\n        super(tagTypes, upperCaseMap);\n    }\n    /**\n     * @tag  Native header tag\n     * @return common tag name (alias)\n     */\n    getCommonName(tag) {\n        return this.tagMap[tag.toUpperCase()];\n    }\n}\n//# sourceMappingURL=CaseInsensitiveTagMap.js.map"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,8BAA8B,wKAAA,CAAA,kBAAe;IACtD,YAAY,QAAQ,EAAE,MAAM,CAAE;QAC1B,MAAM,eAAe,CAAC;QACtB,KAAK,MAAM,OAAO,OAAO,IAAI,CAAC,QAAS;YACnC,YAAY,CAAC,IAAI,WAAW,GAAG,GAAG,MAAM,CAAC,IAAI;QACjD;QACA,KAAK,CAAC,UAAU;IACpB;IACA;;;KAGC,GACD,cAAc,GAAG,EAAE;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,WAAW,GAAG;IACzC;AACJ,EACA,iDAAiD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ParseError.js"],"sourcesContent":["export const makeParseError = (name) => {\n    return class ParseError extends Error {\n        constructor(message) {\n            super(message);\n            this.name = name;\n        }\n    };\n};\n// Concrete error class representing a file type determination failure.\nexport class CouldNotDetermineFileTypeError extends makeParseError('CouldNotDetermineFileTypeError') {\n}\n// Concrete error class representing an unsupported file type.\nexport class UnsupportedFileTypeError extends makeParseError('UnsupportedFileTypeError') {\n}\n// Concrete error class representing unexpected file content.\nclass UnexpectedFileContentError extends makeParseError('UnexpectedFileContentError') {\n    constructor(fileType, message) {\n        super(message);\n        this.fileType = fileType;\n    }\n    // Override toString to include file type information.\n    toString() {\n        return `${this.name} (FileType: ${this.fileType}): ${this.message}`;\n    }\n}\n// Concrete error class representing a field decoding error.\nexport class FieldDecodingError extends makeParseError('FieldDecodingError') {\n}\nexport class InternalParserError extends makeParseError('InternalParserError') {\n}\n// Factory function to create a specific type of UnexpectedFileContentError.\nexport const makeUnexpectedFileContentError = (fileType) => {\n    return class extends UnexpectedFileContentError {\n        constructor(message) {\n            super(fileType, message);\n        }\n    };\n};\n//# sourceMappingURL=ParseError.js.map"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,iBAAiB,CAAC;IAC3B,OAAO,MAAM,mBAAmB;QAC5B,YAAY,OAAO,CAAE;YACjB,KAAK,CAAC;YACN,IAAI,CAAC,IAAI,GAAG;QAChB;IACJ;AACJ;AAEO,MAAM,uCAAuC,eAAe;AACnE;AAEO,MAAM,iCAAiC,eAAe;AAC7D;AACA,6DAA6D;AAC7D,MAAM,mCAAmC,eAAe;IACpD,YAAY,QAAQ,EAAE,OAAO,CAAE;QAC3B,KAAK,CAAC;QACN,IAAI,CAAC,QAAQ,GAAG;IACpB;IACA,sDAAsD;IACtD,WAAW;QACP,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,EAAE;IACvE;AACJ;AAEO,MAAM,2BAA2B,eAAe;AACvD;AACO,MAAM,4BAA4B,eAAe;AACxD;AAEO,MAAM,iCAAiC,CAAC;IAC3C,OAAO,cAAc;QACjB,YAAY,OAAO,CAAE;YACjB,KAAK,CAAC,UAAU;QACpB;IACJ;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/Util.js"],"sourcesContent":["import { StringType } from 'token-types';\nimport { FieldDecodingError } from '../ParseError.js';\nexport function getBit(buf, off, bit) {\n    return (buf[off] & (1 << bit)) !== 0;\n}\n/**\n * Found delimiting zero in uint8Array\n * @param uint8Array Uint8Array to find the zero delimiter in\n * @param start Offset in uint8Array\n * @param end Last position to parse in uint8Array\n * @param encoding The string encoding used\n * @return Absolute position on uint8Array where zero found\n */\nexport function findZero(uint8Array, start, end, encoding) {\n    let i = start;\n    if (encoding === 'utf-16le') {\n        while (uint8Array[i] !== 0 || uint8Array[i + 1] !== 0) {\n            if (i >= end)\n                return end;\n            i += 2;\n        }\n        return i;\n    }\n    while (uint8Array[i] !== 0) {\n        if (i >= end)\n            return end;\n        i++;\n    }\n    return i;\n}\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\nfunction swapBytes(uint8Array) {\n    const l = uint8Array.length;\n    if ((l & 1) !== 0)\n        throw new FieldDecodingError('Buffer length must be even');\n    for (let i = 0; i < l; i += 2) {\n        const a = uint8Array[i];\n        uint8Array[i] = uint8Array[i + 1];\n        uint8Array[i + 1] = a;\n    }\n    return uint8Array;\n}\n/**\n * Decode string\n */\nexport function decodeString(uint8Array, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (uint8Array[0] === 0xFF && uint8Array[1] === 0xFE) { // little endian\n        return decodeString(uint8Array.subarray(2), encoding);\n    }\n    if (encoding === 'utf-16le' && uint8Array[0] === 0xFE && uint8Array[1] === 0xFF) {\n        // BOM, indicating big endian decoding\n        if ((uint8Array.length & 1) !== 0)\n            throw new FieldDecodingError('Expected even number of octets for 16-bit unicode string');\n        return decodeString(swapBytes(uint8Array), encoding);\n    }\n    return new StringType(uint8Array.length, encoding).get(uint8Array, 0);\n}\nexport function stripNulls(str) {\n    str = str.replace(/^\\x00+/g, '');\n    str = str.replace(/\\x00+$/g, '');\n    return str;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return Decoded bit aligned number\n */\nexport function getBitAllignedNumber(source, byteOffset, bitOffset, len) {\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = source[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    }\n    else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(source, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param source Byte Uint8Array\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is the least significant bit\n * @return True if bit is set\n */\nexport function isBitSet(source, byteOffset, bitOffset) {\n    return getBitAllignedNumber(source, byteOffset, bitOffset, 1) === 1;\n}\nexport function a2hex(str) {\n    const arr = [];\n    for (let i = 0, l = str.length; i < l; i++) {\n        const hex = Number(str.charCodeAt(i)).toString(16);\n        arr.push(hex.length === 1 ? `0${hex}` : hex);\n    }\n    return arr.join(' ');\n}\n/**\n * Convert power ratio to DB\n * ratio: [0..1]\n */\nexport function ratioToDb(ratio) {\n    return 10 * Math.log10(ratio);\n}\n/**\n * Convert dB to ratio\n * db Decibels\n */\nexport function dbToRatio(dB) {\n    return 10 ** (dB / 10);\n}\n/**\n * Convert replay gain to ratio and Decibel\n * @param value string holding a ratio like '0.034' or '-7.54 dB'\n */\nexport function toRatio(value) {\n    const ps = value.split(' ').map(p => p.trim().toLowerCase());\n    // @ts-ignore\n    if (ps.length >= 1) {\n        const v = Number.parseFloat(ps[0]);\n        return ps.length === 2 && ps[1] === 'db' ? {\n            dB: v,\n            ratio: dbToRatio(v)\n        } : {\n            dB: ratioToDb(v),\n            ratio: v\n        };\n    }\n}\n//# sourceMappingURL=Util.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/id3v2/ID3v24TagMapper.js"],"sourcesContent":["import { UINT32_LE } from 'token-types';\nimport { CommonTagMapper } from '../common/GenericTagMapper.js';\nimport { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\nimport { decodeString } from '../common/Util.js';\n/**\n * ID3v2.3/ID3v2.4 tag mappings\n */\nconst id3v24TagMap = {\n    // id3v2.3\n    TIT2: 'title',\n    TPE1: 'artist',\n    'TXXX:Artists': 'artists',\n    TPE2: 'albumartist',\n    TALB: 'album',\n    TDRV: 'date', // [ 'date', 'year' ] ToDo: improve 'year' mapping\n    /**\n     * Original release year\n     */\n    TORY: 'originalyear',\n    TPOS: 'disk',\n    TCON: 'genre',\n    APIC: 'picture',\n    TCOM: 'composer',\n    USLT: 'lyrics',\n    TSOA: 'albumsort',\n    TSOT: 'titlesort',\n    TOAL: 'originalalbum',\n    TSOP: 'artistsort',\n    TSO2: 'albumartistsort',\n    TSOC: 'composersort',\n    TEXT: 'lyricist',\n    'TXXX:Writer': 'writer',\n    TPE3: 'conductor',\n    // 'IPLS:instrument': 'performer:instrument', // ToDo\n    TPE4: 'remixer',\n    'IPLS:arranger': 'arranger',\n    'IPLS:engineer': 'engineer',\n    'IPLS:producer': 'producer',\n    'IPLS:DJ-mix': 'djmixer',\n    'IPLS:mix': 'mixer',\n    TPUB: 'label',\n    TIT1: 'grouping',\n    TIT3: 'subtitle',\n    TRCK: 'track',\n    TCMP: 'compilation',\n    POPM: 'rating',\n    TBPM: 'bpm',\n    TMED: 'media',\n    'TXXX:CATALOGNUMBER': 'catalognumber',\n    'TXXX:MusicBrainz Album Status': 'releasestatus',\n    'TXXX:MusicBrainz Album Type': 'releasetype',\n    /**\n     * Release country as documented: https://picard.musicbrainz.org/docs/mappings/#cite_note-0\n     */\n    'TXXX:MusicBrainz Album Release Country': 'releasecountry',\n    /**\n     * Release country as implemented // ToDo: report\n     */\n    'TXXX:RELEASECOUNTRY': 'releasecountry',\n    'TXXX:SCRIPT': 'script',\n    TLAN: 'language',\n    TCOP: 'copyright',\n    WCOP: 'license',\n    TENC: 'encodedby',\n    TSSE: 'encodersettings',\n    'TXXX:BARCODE': 'barcode',\n    'TXXX:ISRC': 'isrc',\n    TSRC: 'isrc',\n    'TXXX:ASIN': 'asin',\n    'TXXX:originalyear': 'originalyear',\n    'UFID:http://musicbrainz.org': 'musicbrainz_recordingid',\n    'TXXX:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    'TXXX:MusicBrainz Album Id': 'musicbrainz_albumid',\n    'TXXX:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    'TXXX:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    'TXXX:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    'TXXX:MusicBrainz Work Id': 'musicbrainz_workid',\n    'TXXX:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    'TXXX:MusicBrainz Disc Id': 'musicbrainz_discid',\n    'TXXX:ACOUSTID_ID': 'acoustid_id',\n    'TXXX:Acoustid Id': 'acoustid_id',\n    'TXXX:Acoustid Fingerprint': 'acoustid_fingerprint',\n    'TXXX:MusicIP PUID': 'musicip_puid',\n    'TXXX:MusicMagic Fingerprint': 'musicip_fingerprint',\n    WOAR: 'website',\n    // id3v2.4\n    // ToDo: In same sequence as defined at http://id3.org/id3v2.4.0-frames\n    TDRC: 'date', // date YYYY-MM-DD\n    TYER: 'year',\n    TDOR: 'originaldate',\n    // 'TMCL:instrument': 'performer:instrument',\n    'TIPL:arranger': 'arranger',\n    'TIPL:engineer': 'engineer',\n    'TIPL:producer': 'producer',\n    'TIPL:DJ-mix': 'djmixer',\n    'TIPL:mix': 'mixer',\n    TMOO: 'mood',\n    // additional mappings:\n    SYLT: 'lyrics',\n    TSST: 'discsubtitle',\n    TKEY: 'key',\n    COMM: 'comment',\n    TOPE: 'originalartist',\n    // Windows Media Player\n    'PRIV:AverageLevel': 'averageLevel',\n    'PRIV:PeakLevel': 'peakLevel',\n    // Discogs\n    'TXXX:DISCOGS_ARTIST_ID': 'discogs_artist_id',\n    'TXXX:DISCOGS_ARTISTS': 'artists',\n    'TXXX:DISCOGS_ARTIST_NAME': 'artists',\n    'TXXX:DISCOGS_ALBUM_ARTISTS': 'albumartist',\n    'TXXX:DISCOGS_CATALOG': 'catalognumber',\n    'TXXX:DISCOGS_COUNTRY': 'releasecountry',\n    'TXXX:DISCOGS_DATE': 'originaldate',\n    'TXXX:DISCOGS_LABEL': 'label',\n    'TXXX:DISCOGS_LABEL_ID': 'discogs_label_id',\n    'TXXX:DISCOGS_MASTER_RELEASE_ID': 'discogs_master_release_id',\n    'TXXX:DISCOGS_RATING': 'discogs_rating',\n    'TXXX:DISCOGS_RELEASED': 'date',\n    'TXXX:DISCOGS_RELEASE_ID': 'discogs_release_id',\n    'TXXX:DISCOGS_VOTES': 'discogs_votes',\n    'TXXX:CATALOGID': 'catalognumber',\n    'TXXX:STYLE': 'genre',\n    'TXXX:REPLAYGAIN_TRACK_PEAK': 'replaygain_track_peak',\n    'TXXX:REPLAYGAIN_TRACK_GAIN': 'replaygain_track_gain',\n    'TXXX:REPLAYGAIN_ALBUM_PEAK': 'replaygain_album_peak',\n    'TXXX:REPLAYGAIN_ALBUM_GAIN': 'replaygain_album_gain',\n    'TXXX:MP3GAIN_MINMAX': 'replaygain_track_minmax',\n    'TXXX:MP3GAIN_ALBUM_MINMAX': 'replaygain_album_minmax',\n    'TXXX:MP3GAIN_UNDO': 'replaygain_undo',\n    MVNM: 'movement',\n    MVIN: 'movementIndex',\n    PCST: 'podcast',\n    TCAT: 'category',\n    TDES: 'description',\n    TDRL: 'releasedate',\n    TGID: 'podcastId',\n    TKWD: 'keywords',\n    WFED: 'podcasturl',\n    GRP1: 'grouping'\n};\nexport class ID3v24TagMapper extends CaseInsensitiveTagMap {\n    static toRating(popm) {\n        return {\n            source: popm.email,\n            rating: popm.rating > 0 ? (popm.rating - 1) / 254 * CommonTagMapper.maxRatingScore : undefined\n        };\n    }\n    constructor() {\n        super(['ID3v2.3', 'ID3v2.4'], id3v24TagMap);\n    }\n    /**\n     * Handle post mapping exceptions / correction\n     * @param tag to post map\n     * @param warnings Wil be used to register (collect) warnings\n     */\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'UFID':\n                {\n                    // decode MusicBrainz Recording Id\n                    const idTag = tag.value;\n                    if (idTag.owner_identifier === 'http://musicbrainz.org') {\n                        tag.id += `:${idTag.owner_identifier}`;\n                        tag.value = decodeString(idTag.identifier, 'latin1'); // latin1 == iso-8859-1\n                    }\n                }\n                break;\n            case 'PRIV':\n                {\n                    const customTag = tag.value;\n                    switch (customTag.owner_identifier) {\n                        // decode Windows Media Player\n                        case 'AverageLevel':\n                        case 'PeakValue':\n                            tag.id += `:${customTag.owner_identifier}`;\n                            tag.value = customTag.data.length === 4 ? UINT32_LE.get(customTag.data, 0) : null;\n                            if (tag.value === null) {\n                                warnings.addWarning('Failed to parse PRIV:PeakValue');\n                            }\n                            break;\n                        default:\n                            warnings.addWarning(`Unknown PRIV owner-identifier: ${customTag.data}`);\n                    }\n                }\n                break;\n            case 'POPM':\n                tag.value = ID3v24TagMapper.toRating(tag.value);\n                break;\n            default:\n                break;\n        }\n    }\n}\n//# sourceMappingURL=ID3v24TagMapper.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/AsfTagMapper.js"],"sourcesContent":["import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ASF Metadata tag mappings.\n * See http://msdn.microsoft.com/en-us/library/ms867702.aspx\n */\nconst asfTagMap = {\n    Title: 'title',\n    Author: 'artist',\n    'WM/AlbumArtist': 'albumartist',\n    'WM/AlbumTitle': 'album',\n    'WM/Year': 'date', // changed to 'year' to 'date' based on Picard mappings; ToDo: check me\n    'WM/OriginalReleaseTime': 'originaldate',\n    'WM/OriginalReleaseYear': 'originalyear',\n    Description: 'comment',\n    'WM/TrackNumber': 'track',\n    'WM/PartOfSet': 'disk',\n    'WM/Genre': 'genre',\n    'WM/Composer': 'composer',\n    'WM/Lyrics': 'lyrics',\n    'WM/AlbumSortOrder': 'albumsort',\n    'WM/TitleSortOrder': 'titlesort',\n    'WM/ArtistSortOrder': 'artistsort',\n    'WM/AlbumArtistSortOrder': 'albumartistsort',\n    'WM/ComposerSortOrder': 'composersort',\n    'WM/Writer': 'lyricist',\n    'WM/Conductor': 'conductor',\n    'WM/ModifiedBy': 'remixer',\n    'WM/Engineer': 'engineer',\n    'WM/Producer': 'producer',\n    'WM/DJMixer': 'djmixer',\n    'WM/Mixer': 'mixer',\n    'WM/Publisher': 'label',\n    'WM/ContentGroupDescription': 'grouping',\n    'WM/SubTitle': 'subtitle',\n    'WM/SetSubTitle': 'discsubtitle',\n    // 'WM/PartOfSet': 'totaldiscs',\n    'WM/IsCompilation': 'compilation',\n    'WM/SharedUserRating': 'rating',\n    'WM/BeatsPerMinute': 'bpm',\n    'WM/Mood': 'mood',\n    'WM/Media': 'media',\n    'WM/CatalogNo': 'catalognumber',\n    'MusicBrainz/Album Status': 'releasestatus',\n    'MusicBrainz/Album Type': 'releasetype',\n    'MusicBrainz/Album Release Country': 'releasecountry',\n    'WM/Script': 'script',\n    'WM/Language': 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    'WM/EncodedBy': 'encodedby',\n    'WM/EncodingSettings': 'encodersettings',\n    'WM/Barcode': 'barcode',\n    'WM/ISRC': 'isrc',\n    'MusicBrainz/Track Id': 'musicbrainz_recordingid',\n    'MusicBrainz/Release Track Id': 'musicbrainz_trackid',\n    'MusicBrainz/Album Id': 'musicbrainz_albumid',\n    'MusicBrainz/Artist Id': 'musicbrainz_artistid',\n    'MusicBrainz/Album Artist Id': 'musicbrainz_albumartistid',\n    'MusicBrainz/Release Group Id': 'musicbrainz_releasegroupid',\n    'MusicBrainz/Work Id': 'musicbrainz_workid',\n    'MusicBrainz/TRM Id': 'musicbrainz_trmid',\n    'MusicBrainz/Disc Id': 'musicbrainz_discid',\n    'Acoustid/Id': 'acoustid_id',\n    'Acoustid/Fingerprint': 'acoustid_fingerprint',\n    'MusicIP/PUID': 'musicip_puid',\n    'WM/ARTISTS': 'artists',\n    'WM/InitialKey': 'key',\n    ASIN: 'asin',\n    'WM/Work': 'work',\n    'WM/AuthorURL': 'website',\n    'WM/Picture': 'picture'\n};\nexport class AsfTagMapper extends CommonTagMapper {\n    static toRating(rating) {\n        return {\n            rating: Number.parseFloat(rating + 1) / 5\n        };\n    }\n    constructor() {\n        super(['asf'], asfTagMap);\n    }\n    postMap(tag) {\n        switch (tag.id) {\n            case 'WM/SharedUserRating': {\n                const keys = tag.id.split(':');\n                tag.value = AsfTagMapper.toRating(tag.value);\n                tag.id = keys[0];\n                break;\n            }\n        }\n    }\n}\n//# sourceMappingURL=AsfTagMapper.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;;CAGC,GACD,MAAM,YAAY;IACd,OAAO;IACP,QAAQ;IACR,kBAAkB;IAClB,iBAAiB;IACjB,WAAW;IACX,0BAA0B;IAC1B,0BAA0B;IAC1B,aAAa;IACb,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,qBAAqB;IACrB,qBAAqB;IACrB,sBAAsB;IACtB,2BAA2B;IAC3B,wBAAwB;IACxB,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,8BAA8B;IAC9B,eAAe;IACf,kBAAkB;IAClB,gCAAgC;IAChC,oBAAoB;IACpB,uBAAuB;IACvB,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,gBAAgB;IAChB,4BAA4B;IAC5B,0BAA0B;IAC1B,qCAAqC;IACrC,aAAa;IACb,eAAe;IACf,WAAW;IACX,SAAS;IACT,gBAAgB;IAChB,uBAAuB;IACvB,cAAc;IACd,WAAW;IACX,wBAAwB;IACxB,gCAAgC;IAChC,wBAAwB;IACxB,yBAAyB;IACzB,+BAA+B;IAC/B,gCAAgC;IAChC,uBAAuB;IACvB,sBAAsB;IACtB,uBAAuB;IACvB,eAAe;IACf,wBAAwB;IACxB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,MAAM;IACN,WAAW;IACX,gBAAgB;IAChB,cAAc;AAClB;AACO,MAAM,qBAAqB,wKAAA,CAAA,kBAAe;IAC7C,OAAO,SAAS,MAAM,EAAE;QACpB,OAAO;YACH,QAAQ,OAAO,UAAU,CAAC,SAAS,KAAK;QAC5C;IACJ;IACA,aAAc;QACV,KAAK,CAAC;YAAC;SAAM,EAAE;IACnB;IACA,QAAQ,GAAG,EAAE;QACT,OAAQ,IAAI,EAAE;YACV,KAAK;gBAAuB;oBACxB,MAAM,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC;oBAC1B,IAAI,KAAK,GAAG,aAAa,QAAQ,CAAC,IAAI,KAAK;oBAC3C,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;oBAChB;gBACJ;QACJ;IACJ;AACJ,EACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 872, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/id3v2/ID3v22TagMapper.js"],"sourcesContent":["import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nexport const id3v22TagMap = {\n    TT2: 'title',\n    TP1: 'artist',\n    TP2: 'albumartist',\n    TAL: 'album',\n    TYE: 'year',\n    COM: 'comment',\n    TRK: 'track',\n    TPA: 'disk',\n    TCO: 'genre',\n    PIC: 'picture',\n    TCM: 'composer',\n    TOR: 'originaldate',\n    TOT: 'originalalbum',\n    TXT: 'lyricist',\n    TP3: 'conductor',\n    TPB: 'label',\n    TT1: 'grouping',\n    TT3: 'subtitle',\n    TLA: 'language',\n    TCR: 'copyright',\n    WCP: 'license',\n    TEN: 'encodedby',\n    TSS: 'encodersettings',\n    WAR: 'website',\n    PCS: 'podcast',\n    TCP: \"compilation\",\n    TDR: 'date',\n    TS2: 'albumartistsort',\n    TSA: 'albumsort',\n    TSC: 'composersort',\n    TSP: 'artistsort',\n    TST: 'titlesort',\n    WFD: 'podcasturl',\n    TBP: 'bpm'\n};\nexport class ID3v22TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['ID3v2.2'], id3v22TagMap);\n    }\n}\n//# sourceMappingURL=ID3v22TagMapper.js.map"],"names":[],"mappings":";;;;AAAA;;AAIO,MAAM,eAAe;IACxB,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACT;AACO,MAAM,wBAAwB,6KAAA,CAAA,wBAAqB;IACtD,aAAc;QACV,KAAK,CAAC;YAAC;SAAU,EAAE;IACvB;AACJ,EACA,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/apev2/APEv2TagMapper.js"],"sourcesContent":["import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * ID3v2.2 tag mappings\n */\nconst apev2TagMap = {\n    Title: 'title',\n    Artist: 'artist',\n    Artists: 'artists',\n    'Album Artist': 'albumartist',\n    Album: 'album',\n    Year: 'date',\n    Originalyear: 'originalyear',\n    Originaldate: 'originaldate',\n    Releasedate: 'releasedate',\n    Comment: 'comment',\n    Track: 'track',\n    Disc: 'disk',\n    DISCNUMBER: 'disk', // ToDo: backwards compatibility', valid tag?\n    Genre: 'genre',\n    'Cover Art (Front)': 'picture',\n    'Cover Art (Back)': 'picture',\n    Composer: 'composer',\n    Lyrics: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    Lyricist: 'lyricist',\n    Writer: 'writer',\n    Conductor: 'conductor',\n    // 'Performer=artist (instrument)': 'performer:instrument',\n    MixArtist: 'remixer',\n    Arranger: 'arranger',\n    Engineer: 'engineer',\n    Producer: 'producer',\n    DJMixer: 'djmixer',\n    Mixer: 'mixer',\n    Label: 'label',\n    Grouping: 'grouping',\n    Subtitle: 'subtitle',\n    DiscSubtitle: 'discsubtitle',\n    Compilation: 'compilation',\n    BPM: 'bpm',\n    Mood: 'mood',\n    Media: 'media',\n    CatalogNumber: 'catalognumber',\n    MUSICBRAINZ_ALBUMSTATUS: 'releasestatus',\n    MUSICBRAINZ_ALBUMTYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    Script: 'script',\n    Language: 'language',\n    Copyright: 'copyright',\n    LICENSE: 'license',\n    EncodedBy: 'encodedby',\n    EncoderSettings: 'encodersettings',\n    Barcode: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    musicbrainz_trackid: 'musicbrainz_recordingid',\n    musicbrainz_releasetrackid: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    Acoustid_Id: 'acoustid_id',\n    ACOUSTID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    Weblink: 'website',\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    MP3GAIN_MINMAX: 'replaygain_track_minmax',\n    MP3GAIN_UNDO: 'replaygain_undo'\n};\nexport class APEv2TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['APEv2'], apev2TagMap);\n    }\n}\n//# sourceMappingURL=APEv2TagMapper.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;CAEC,GACD,MAAM,cAAc;IAChB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,gBAAgB;IAChB,OAAO;IACP,MAAM;IACN,cAAc;IACd,cAAc;IACd,aAAa;IACb,SAAS;IACT,OAAO;IACP,MAAM;IACN,YAAY;IACZ,OAAO;IACP,qBAAqB;IACrB,oBAAoB;IACpB,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,MAAM;IACN,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,UAAU;IACV,QAAQ;IACR,WAAW;IACX,2DAA2D;IAC3D,WAAW;IACX,UAAU;IACV,UAAU;IACV,UAAU;IACV,SAAS;IACT,OAAO;IACP,OAAO;IACP,UAAU;IACV,UAAU;IACV,cAAc;IACd,aAAa;IACb,KAAK;IACL,MAAM;IACN,OAAO;IACP,eAAe;IACf,yBAAyB;IACzB,uBAAuB;IACvB,gBAAgB;IAChB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,SAAS;IACT,WAAW;IACX,iBAAiB;IACjB,SAAS;IACT,MAAM;IACN,MAAM;IACN,qBAAqB;IACrB,4BAA4B;IAC5B,qBAAqB;IACrB,sBAAsB;IACtB,2BAA2B;IAC3B,4BAA4B;IAC5B,oBAAoB;IACpB,mBAAmB;IACnB,oBAAoB;IACpB,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,SAAS;IACT,uBAAuB;IACvB,uBAAuB;IACvB,gBAAgB;IAChB,cAAc;AAClB;AACO,MAAM,uBAAuB,6KAAA,CAAA,wBAAqB;IACrD,aAAc;QACV,KAAK,CAAC;YAAC;SAAQ,EAAE;IACrB;AACJ,EACA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/mp4/MP4TagMapper.js"],"sourcesContent":["import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * Ref: https://github.com/sergiomb2/libmp4v2/wiki/iTunesMetadata\n */\nconst mp4TagMap = {\n    '©nam': 'title',\n    '©ART': 'artist',\n    aART: 'albumartist',\n    /**\n     * ToDo: Album artist seems to be stored here while Picard documentation says: aART\n     */\n    '----:com.apple.iTunes:Band': 'albumartist',\n    '©alb': 'album',\n    '©day': 'date',\n    '©cmt': 'comment',\n    '©com': 'comment',\n    trkn: 'track',\n    disk: 'disk',\n    '©gen': 'genre',\n    covr: 'picture',\n    '©wrt': 'composer',\n    '©lyr': 'lyrics',\n    soal: 'albumsort',\n    sonm: 'titlesort',\n    soar: 'artistsort',\n    soaa: 'albumartistsort',\n    soco: 'composersort',\n    '----:com.apple.iTunes:LYRICIST': 'lyricist',\n    '----:com.apple.iTunes:CONDUCTOR': 'conductor',\n    '----:com.apple.iTunes:REMIXER': 'remixer',\n    '----:com.apple.iTunes:ENGINEER': 'engineer',\n    '----:com.apple.iTunes:PRODUCER': 'producer',\n    '----:com.apple.iTunes:DJMIXER': 'djmixer',\n    '----:com.apple.iTunes:MIXER': 'mixer',\n    '----:com.apple.iTunes:LABEL': 'label',\n    '©grp': 'grouping',\n    '----:com.apple.iTunes:SUBTITLE': 'subtitle',\n    '----:com.apple.iTunes:DISCSUBTITLE': 'discsubtitle',\n    cpil: 'compilation',\n    tmpo: 'bpm',\n    '----:com.apple.iTunes:MOOD': 'mood',\n    '----:com.apple.iTunes:MEDIA': 'media',\n    '----:com.apple.iTunes:CATALOGNUMBER': 'catalognumber',\n    tvsh: 'tvShow',\n    tvsn: 'tvSeason',\n    tves: 'tvEpisode',\n    sosn: 'tvShowSort',\n    tven: 'tvEpisodeId',\n    tvnn: 'tvNetwork',\n    pcst: 'podcast',\n    purl: 'podcasturl',\n    '----:com.apple.iTunes:MusicBrainz Album Status': 'releasestatus',\n    '----:com.apple.iTunes:MusicBrainz Album Type': 'releasetype',\n    '----:com.apple.iTunes:MusicBrainz Album Release Country': 'releasecountry',\n    '----:com.apple.iTunes:SCRIPT': 'script',\n    '----:com.apple.iTunes:LANGUAGE': 'language',\n    cprt: 'copyright',\n    '©cpy': 'copyright',\n    '----:com.apple.iTunes:LICENSE': 'license',\n    '©too': 'encodedby',\n    pgap: 'gapless',\n    '----:com.apple.iTunes:BARCODE': 'barcode',\n    '----:com.apple.iTunes:ISRC': 'isrc',\n    '----:com.apple.iTunes:ASIN': 'asin',\n    '----:com.apple.iTunes:NOTES': 'comment',\n    '----:com.apple.iTunes:MusicBrainz Track Id': 'musicbrainz_recordingid',\n    '----:com.apple.iTunes:MusicBrainz Release Track Id': 'musicbrainz_trackid',\n    '----:com.apple.iTunes:MusicBrainz Album Id': 'musicbrainz_albumid',\n    '----:com.apple.iTunes:MusicBrainz Artist Id': 'musicbrainz_artistid',\n    '----:com.apple.iTunes:MusicBrainz Album Artist Id': 'musicbrainz_albumartistid',\n    '----:com.apple.iTunes:MusicBrainz Release Group Id': 'musicbrainz_releasegroupid',\n    '----:com.apple.iTunes:MusicBrainz Work Id': 'musicbrainz_workid',\n    '----:com.apple.iTunes:MusicBrainz TRM Id': 'musicbrainz_trmid',\n    '----:com.apple.iTunes:MusicBrainz Disc Id': 'musicbrainz_discid',\n    '----:com.apple.iTunes:Acoustid Id': 'acoustid_id',\n    '----:com.apple.iTunes:Acoustid Fingerprint': 'acoustid_fingerprint',\n    '----:com.apple.iTunes:MusicIP PUID': 'musicip_puid',\n    '----:com.apple.iTunes:fingerprint': 'musicip_fingerprint',\n    '----:com.apple.iTunes:replaygain_track_gain': 'replaygain_track_gain',\n    '----:com.apple.iTunes:replaygain_track_peak': 'replaygain_track_peak',\n    '----:com.apple.iTunes:replaygain_album_gain': 'replaygain_album_gain',\n    '----:com.apple.iTunes:replaygain_album_peak': 'replaygain_album_peak',\n    '----:com.apple.iTunes:replaygain_track_minmax': 'replaygain_track_minmax',\n    '----:com.apple.iTunes:replaygain_album_minmax': 'replaygain_album_minmax',\n    '----:com.apple.iTunes:replaygain_undo': 'replaygain_undo',\n    // Additional mappings:\n    gnre: 'genre', // ToDo: check mapping\n    '----:com.apple.iTunes:ALBUMARTISTSORT': 'albumartistsort',\n    '----:com.apple.iTunes:ARTISTS': 'artists',\n    '----:com.apple.iTunes:ORIGINALDATE': 'originaldate',\n    '----:com.apple.iTunes:ORIGINALYEAR': 'originalyear',\n    '----:com.apple.iTunes:RELEASEDATE': 'releasedate',\n    // '----:com.apple.iTunes:PERFORMER': 'performer'\n    desc: 'description',\n    ldes: 'longDescription',\n    '©mvn': 'movement',\n    '©mvi': 'movementIndex',\n    '©mvc': 'movementTotal',\n    '©wrk': 'work',\n    catg: 'category',\n    egid: 'podcastId',\n    hdvd: 'hdVideo',\n    keyw: 'keywords',\n    shwm: 'showMovement',\n    stik: 'stik',\n    rate: 'rating'\n};\nexport const tagType = 'iTunes';\nexport class MP4TagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super([tagType], mp4TagMap);\n    }\n    postMap(tag, warnings) {\n        switch (tag.id) {\n            case 'rate':\n                tag.value = {\n                    source: undefined,\n                    rating: Number.parseFloat(tag.value) / 100\n                };\n                break;\n        }\n    }\n}\n//# sourceMappingURL=MP4TagMapper.js.map"],"names":[],"mappings":";;;;AAAA;;AACA;;CAEC,GACD,MAAM,YAAY;IACd,QAAQ;IACR,QAAQ;IACR,MAAM;IACN;;KAEC,GACD,8BAA8B;IAC9B,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,MAAM;IACN,QAAQ;IACR,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,kCAAkC;IAClC,mCAAmC;IACnC,iCAAiC;IACjC,kCAAkC;IAClC,kCAAkC;IAClC,iCAAiC;IACjC,+BAA+B;IAC/B,+BAA+B;IAC/B,QAAQ;IACR,kCAAkC;IAClC,sCAAsC;IACtC,MAAM;IACN,MAAM;IACN,8BAA8B;IAC9B,+BAA+B;IAC/B,uCAAuC;IACvC,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,kDAAkD;IAClD,gDAAgD;IAChD,2DAA2D;IAC3D,gCAAgC;IAChC,kCAAkC;IAClC,MAAM;IACN,QAAQ;IACR,iCAAiC;IACjC,QAAQ;IACR,MAAM;IACN,iCAAiC;IACjC,8BAA8B;IAC9B,8BAA8B;IAC9B,+BAA+B;IAC/B,8CAA8C;IAC9C,sDAAsD;IACtD,8CAA8C;IAC9C,+CAA+C;IAC/C,qDAAqD;IACrD,sDAAsD;IACtD,6CAA6C;IAC7C,4CAA4C;IAC5C,6CAA6C;IAC7C,qCAAqC;IACrC,8CAA8C;IAC9C,sCAAsC;IACtC,qCAAqC;IACrC,+CAA+C;IAC/C,+CAA+C;IAC/C,+CAA+C;IAC/C,+CAA+C;IAC/C,iDAAiD;IACjD,iDAAiD;IACjD,yCAAyC;IACzC,uBAAuB;IACvB,MAAM;IACN,yCAAyC;IACzC,iCAAiC;IACjC,sCAAsC;IACtC,sCAAsC;IACtC,qCAAqC;IACrC,iDAAiD;IACjD,MAAM;IACN,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;AACV;AACO,MAAM,UAAU;AAChB,MAAM,qBAAqB,6KAAA,CAAA,wBAAqB;IACnD,aAAc;QACV,KAAK,CAAC;YAAC;SAAQ,EAAE;IACrB;IACA,QAAQ,GAAG,EAAE,QAAQ,EAAE;QACnB,OAAQ,IAAI,EAAE;YACV,KAAK;gBACD,IAAI,KAAK,GAAG;oBACR,QAAQ;oBACR,QAAQ,OAAO,UAAU,CAAC,IAAI,KAAK,IAAI;gBAC3C;gBACA;QACR;IACJ;AACJ,EACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1155, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/vorbis/VorbisTagMapper.js"],"sourcesContent":["import { CommonTagMapper } from '../../common/GenericTagMapper.js';\n/**\n * Vorbis tag mappings\n *\n * Mapping from native header format to one or possibly more 'common' entries\n * The common entries aim to read the same information from different media files\n * independent of the underlying format\n */\nconst vorbisTagMap = {\n    TITLE: 'title',\n    ARTIST: 'artist',\n    ARTISTS: 'artists',\n    ALBUMARTIST: 'albumartist',\n    'ALBUM ARTIST': 'albumartist',\n    ALBUM: 'album',\n    DATE: 'date',\n    ORIGINALDATE: 'originaldate',\n    ORIGINALYEAR: 'originalyear',\n    RELEASEDATE: 'releasedate',\n    COMMENT: 'comment',\n    TRACKNUMBER: 'track',\n    DISCNUMBER: 'disk',\n    GENRE: 'genre',\n    METADATA_BLOCK_PICTURE: 'picture',\n    COMPOSER: 'composer',\n    LYRICS: 'lyrics',\n    ALBUMSORT: 'albumsort',\n    TITLESORT: 'titlesort',\n    WORK: 'work',\n    ARTISTSORT: 'artistsort',\n    ALBUMARTISTSORT: 'albumartistsort',\n    COMPOSERSORT: 'composersort',\n    LYRICIST: 'lyricist',\n    WRITER: 'writer',\n    CONDUCTOR: 'conductor',\n    // 'PERFORMER=artist (instrument)': 'performer:instrument', // ToDo\n    REMIXER: 'remixer',\n    ARRANGER: 'arranger',\n    ENGINEER: 'engineer',\n    PRODUCER: 'producer',\n    DJMIXER: 'djmixer',\n    MIXER: 'mixer',\n    LABEL: 'label',\n    GROUPING: 'grouping',\n    SUBTITLE: 'subtitle',\n    DISCSUBTITLE: 'discsubtitle',\n    TRACKTOTAL: 'totaltracks',\n    DISCTOTAL: 'totaldiscs',\n    COMPILATION: 'compilation',\n    RATING: 'rating',\n    BPM: 'bpm',\n    KEY: 'key',\n    MOOD: 'mood',\n    MEDIA: 'media',\n    CATALOGNUMBER: 'catalognumber',\n    RELEASESTATUS: 'releasestatus',\n    RELEASETYPE: 'releasetype',\n    RELEASECOUNTRY: 'releasecountry',\n    SCRIPT: 'script',\n    LANGUAGE: 'language',\n    COPYRIGHT: 'copyright',\n    LICENSE: 'license',\n    ENCODEDBY: 'encodedby',\n    ENCODERSETTINGS: 'encodersettings',\n    BARCODE: 'barcode',\n    ISRC: 'isrc',\n    ASIN: 'asin',\n    MUSICBRAINZ_TRACKID: 'musicbrainz_recordingid',\n    MUSICBRAINZ_RELEASETRACKID: 'musicbrainz_trackid',\n    MUSICBRAINZ_ALBUMID: 'musicbrainz_albumid',\n    MUSICBRAINZ_ARTISTID: 'musicbrainz_artistid',\n    MUSICBRAINZ_ALBUMARTISTID: 'musicbrainz_albumartistid',\n    MUSICBRAINZ_RELEASEGROUPID: 'musicbrainz_releasegroupid',\n    MUSICBRAINZ_WORKID: 'musicbrainz_workid',\n    MUSICBRAINZ_TRMID: 'musicbrainz_trmid',\n    MUSICBRAINZ_DISCID: 'musicbrainz_discid',\n    ACOUSTID_ID: 'acoustid_id',\n    ACOUSTID_ID_FINGERPRINT: 'acoustid_fingerprint',\n    MUSICIP_PUID: 'musicip_puid',\n    // 'FINGERPRINT=MusicMagic Fingerprint {fingerprint}': 'musicip_fingerprint', // ToDo\n    WEBSITE: 'website',\n    NOTES: 'notes',\n    TOTALTRACKS: 'totaltracks',\n    TOTALDISCS: 'totaldiscs',\n    // Discogs\n    DISCOGS_ARTIST_ID: 'discogs_artist_id',\n    DISCOGS_ARTISTS: 'artists',\n    DISCOGS_ARTIST_NAME: 'artists',\n    DISCOGS_ALBUM_ARTISTS: 'albumartist',\n    DISCOGS_CATALOG: 'catalognumber',\n    DISCOGS_COUNTRY: 'releasecountry',\n    DISCOGS_DATE: 'originaldate',\n    DISCOGS_LABEL: 'label',\n    DISCOGS_LABEL_ID: 'discogs_label_id',\n    DISCOGS_MASTER_RELEASE_ID: 'discogs_master_release_id',\n    DISCOGS_RATING: 'discogs_rating',\n    DISCOGS_RELEASED: 'date',\n    DISCOGS_RELEASE_ID: 'discogs_release_id',\n    DISCOGS_VOTES: 'discogs_votes',\n    CATALOGID: 'catalognumber',\n    STYLE: 'genre',\n    //\n    REPLAYGAIN_TRACK_GAIN: 'replaygain_track_gain',\n    REPLAYGAIN_TRACK_PEAK: 'replaygain_track_peak',\n    REPLAYGAIN_ALBUM_GAIN: 'replaygain_album_gain',\n    REPLAYGAIN_ALBUM_PEAK: 'replaygain_album_peak',\n    // To Sure if these (REPLAYGAIN_MINMAX, REPLAYGAIN_ALBUM_MINMAX & REPLAYGAIN_UNDO) are used for Vorbis:\n    REPLAYGAIN_MINMAX: 'replaygain_track_minmax',\n    REPLAYGAIN_ALBUM_MINMAX: 'replaygain_album_minmax',\n    REPLAYGAIN_UNDO: 'replaygain_undo'\n};\nexport class VorbisTagMapper extends CommonTagMapper {\n    static toRating(email, rating, maxScore) {\n        return {\n            source: email ? email.toLowerCase() : undefined,\n            rating: (Number.parseFloat(rating) / maxScore) * CommonTagMapper.maxRatingScore\n        };\n    }\n    constructor() {\n        super(['vorbis'], vorbisTagMap);\n    }\n    postMap(tag) {\n        if (tag.id === 'RATING') {\n            // The way Winamp 5.666 assigns rating\n            tag.value = VorbisTagMapper.toRating(undefined, tag.value, 100);\n        }\n        else if (tag.id.indexOf('RATING:') === 0) {\n            const keys = tag.id.split(':');\n            tag.value = VorbisTagMapper.toRating(keys[1], tag.value, 1);\n            tag.id = keys[0];\n        }\n    }\n}\n//# sourceMappingURL=VorbisTagMapper.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;;;;;CAMC,GACD,MAAM,eAAe;IACjB,OAAO;IACP,QAAQ;IACR,SAAS;IACT,aAAa;IACb,gBAAgB;IAChB,OAAO;IACP,MAAM;IACN,cAAc;IACd,cAAc;IACd,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY;IACZ,OAAO;IACP,wBAAwB;IACxB,UAAU;IACV,QAAQ;IACR,WAAW;IACX,WAAW;IACX,MAAM;IACN,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,UAAU;IACV,QAAQ;IACR,WAAW;IACX,mEAAmE;IACnE,SAAS;IACT,UAAU;IACV,UAAU;IACV,UAAU;IACV,SAAS;IACT,OAAO;IACP,OAAO;IACP,UAAU;IACV,UAAU;IACV,cAAc;IACd,YAAY;IACZ,WAAW;IACX,aAAa;IACb,QAAQ;IACR,KAAK;IACL,KAAK;IACL,MAAM;IACN,OAAO;IACP,eAAe;IACf,eAAe;IACf,aAAa;IACb,gBAAgB;IAChB,QAAQ;IACR,UAAU;IACV,WAAW;IACX,SAAS;IACT,WAAW;IACX,iBAAiB;IACjB,SAAS;IACT,MAAM;IACN,MAAM;IACN,qBAAqB;IACrB,4BAA4B;IAC5B,qBAAqB;IACrB,sBAAsB;IACtB,2BAA2B;IAC3B,4BAA4B;IAC5B,oBAAoB;IACpB,mBAAmB;IACnB,oBAAoB;IACpB,aAAa;IACb,yBAAyB;IACzB,cAAc;IACd,qFAAqF;IACrF,SAAS;IACT,OAAO;IACP,aAAa;IACb,YAAY;IACZ,UAAU;IACV,mBAAmB;IACnB,iBAAiB;IACjB,qBAAqB;IACrB,uBAAuB;IACvB,iBAAiB;IACjB,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,kBAAkB;IAClB,2BAA2B;IAC3B,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;IACpB,eAAe;IACf,WAAW;IACX,OAAO;IACP,EAAE;IACF,uBAAuB;IACvB,uBAAuB;IACvB,uBAAuB;IACvB,uBAAuB;IACvB,uGAAuG;IACvG,mBAAmB;IACnB,yBAAyB;IACzB,iBAAiB;AACrB;AACO,MAAM,wBAAwB,wKAAA,CAAA,kBAAe;IAChD,OAAO,SAAS,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;QACrC,OAAO;YACH,QAAQ,QAAQ,MAAM,WAAW,KAAK;YACtC,QAAQ,AAAC,OAAO,UAAU,CAAC,UAAU,WAAY,wKAAA,CAAA,kBAAe,CAAC,cAAc;QACnF;IACJ;IACA,aAAc;QACV,KAAK,CAAC;YAAC;SAAS,EAAE;IACtB;IACA,QAAQ,GAAG,EAAE;QACT,IAAI,IAAI,EAAE,KAAK,UAAU;YACrB,sCAAsC;YACtC,IAAI,KAAK,GAAG,gBAAgB,QAAQ,CAAC,WAAW,IAAI,KAAK,EAAE;QAC/D,OACK,IAAI,IAAI,EAAE,CAAC,OAAO,CAAC,eAAe,GAAG;YACtC,MAAM,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC;YAC1B,IAAI,KAAK,GAAG,gBAAgB,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,KAAK,EAAE;YACzD,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;QACpB;IACJ;AACJ,EACA,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1298, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/riff/RiffInfoTagMap.js"],"sourcesContent":["import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * RIFF Info Tags; part of the EXIF 2.3\n * Ref: http://owl.phy.queensu.ca/~phil/exiftool/TagNames/RIFF.html#Info\n */\nexport const riffInfoTagMap = {\n    IART: 'artist', // Artist\n    ICRD: 'date', // DateCreated\n    INAM: 'title', // Title\n    TITL: 'title',\n    IPRD: 'album', // Product\n    ITRK: 'track',\n    IPRT: 'track', // Additional tag for track index\n    COMM: 'comment', // Comments\n    ICMT: 'comment', // Country\n    ICNT: 'releasecountry',\n    GNRE: 'genre', // Genre\n    IWRI: 'writer', // WrittenBy\n    RATE: 'rating',\n    YEAR: 'year',\n    ISFT: 'encodedby', // Software\n    CODE: 'encodedby', // EncodedBy\n    TURL: 'website', // URL,\n    IGNR: 'genre', // Genre\n    IENG: 'engineer', // Engineer\n    ITCH: 'technician', // Technician\n    IMED: 'media', // Original Media\n    IRPD: 'album' // Product, where the file was intended for\n};\nexport class RiffInfoTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['exif'], riffInfoTagMap);\n    }\n}\n//# sourceMappingURL=RiffInfoTagMap.js.map"],"names":[],"mappings":";;;;AAAA;;AAKO,MAAM,iBAAiB;IAC1B,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM,QAAQ,2CAA2C;AAC7D;AACO,MAAM,0BAA0B,wKAAA,CAAA,kBAAe;IAClD,aAAc;QACV,KAAK,CAAC;YAAC;SAAO,EAAE;IACpB;AACJ,EACA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1341, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/matroska/MatroskaTagMapper.js"],"sourcesContent":["import { CaseInsensitiveTagMap } from '../common/CaseInsensitiveTagMap.js';\n/**\n * EBML Tag map\n */\nconst ebmlTagMap = {\n    'segment:title': 'title',\n    'album:ARTIST': 'albumartist',\n    'album:ARTISTSORT': 'albumartistsort',\n    'album:TITLE': 'album',\n    'album:DATE_RECORDED': 'originaldate',\n    'album:DATE_RELEASED': 'releasedate',\n    'album:PART_NUMBER': 'disk',\n    'album:TOTAL_PARTS': 'totaltracks',\n    'track:ARTIST': 'artist',\n    'track:ARTISTSORT': 'artistsort',\n    'track:TITLE': 'title',\n    'track:PART_NUMBER': 'track',\n    'track:MUSICBRAINZ_TRACKID': 'musicbrainz_recordingid',\n    'track:MUSICBRAINZ_ALBUMID': 'musicbrainz_albumid',\n    'track:MUSICBRAINZ_ARTISTID': 'musicbrainz_artistid',\n    'track:PUBLISHER': 'label',\n    'track:GENRE': 'genre',\n    'track:ENCODER': 'encodedby',\n    'track:ENCODER_OPTIONS': 'encodersettings',\n    'edition:TOTAL_PARTS': 'totaldiscs',\n    picture: 'picture'\n};\nexport class MatroskaTagMapper extends CaseInsensitiveTagMap {\n    constructor() {\n        super(['matroska'], ebmlTagMap);\n    }\n}\n//# sourceMappingURL=MatroskaTagMapper.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;CAEC,GACD,MAAM,aAAa;IACf,iBAAiB;IACjB,gBAAgB;IAChB,oBAAoB;IACpB,eAAe;IACf,uBAAuB;IACvB,uBAAuB;IACvB,qBAAqB;IACrB,qBAAqB;IACrB,gBAAgB;IAChB,oBAAoB;IACpB,eAAe;IACf,qBAAqB;IACrB,6BAA6B;IAC7B,6BAA6B;IAC7B,8BAA8B;IAC9B,mBAAmB;IACnB,eAAe;IACf,iBAAiB;IACjB,yBAAyB;IACzB,uBAAuB;IACvB,SAAS;AACb;AACO,MAAM,0BAA0B,6KAAA,CAAA,wBAAqB;IACxD,aAAc;QACV,KAAK,CAAC;YAAC;SAAW,EAAE;IACxB;AACJ,EACA,6CAA6C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/aiff/AiffTagMap.js"],"sourcesContent":["import { CommonTagMapper } from '../common/GenericTagMapper.js';\n/**\n * ID3v1 tag mappings\n */\nconst tagMap = {\n    NAME: 'title',\n    AUTH: 'artist',\n    '(c) ': 'copyright',\n    ANNO: 'comment'\n};\nexport class AiffTagMapper extends CommonTagMapper {\n    constructor() {\n        super(['AIFF'], tagMap);\n    }\n}\n//# sourceMappingURL=AiffTagMap.js.map"],"names":[],"mappings":";;;AAAA;;AACA;;CAEC,GACD,MAAM,SAAS;IACX,MAAM;IACN,MAAM;IACN,QAAQ;IACR,MAAM;AACV;AACO,MAAM,sBAAsB,wKAAA,CAAA,kBAAe;IAC9C,aAAc;QACV,KAAK,CAAC;YAAC;SAAO,EAAE;IACpB;AACJ,EACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/CombinedTagMapper.js"],"sourcesContent":["import { ID3v1TagMapper } from '../id3v1/ID3v1TagMap.js';\nimport { ID3v24TagMapper } from '../id3v2/ID3v24TagMapper.js';\nimport { AsfTagMapper } from '../asf/AsfTagMapper.js';\nimport { ID3v22TagMapper } from '../id3v2/ID3v22TagMapper.js';\nimport { APEv2TagMapper } from '../apev2/APEv2TagMapper.js';\nimport { MP4TagMapper } from '../mp4/MP4TagMapper.js';\nimport { VorbisTagMapper } from '../ogg/vorbis/VorbisTagMapper.js';\nimport { RiffInfoTagMapper } from '../riff/RiffInfoTagMap.js';\nimport { MatroskaTagMapper } from '../matroska/MatroskaTagMapper.js';\nimport { AiffTagMapper } from '../aiff/AiffTagMap.js';\nimport { InternalParserError } from '../ParseError.js';\nexport class CombinedTagMapper {\n    constructor() {\n        this.tagMappers = {};\n        [\n            new ID3v1TagMapper(),\n            new ID3v22TagMapper(),\n            new ID3v24TagMapper(),\n            new MP4TagMapper(),\n            new MP4TagMapper(),\n            new VorbisTagMapper(),\n            new APEv2TagMapper(),\n            new AsfTagMapper(),\n            new RiffInfoTagMapper(),\n            new MatroskaTagMapper(),\n            new AiffTagMapper()\n        ].forEach(mapper => {\n            this.registerTagMapper(mapper);\n        });\n    }\n    /**\n     * Convert native to generic (common) tags\n     * @param tagType Originating tag format\n     * @param tag     Native tag to map to a generic tag id\n     * @param warnings\n     * @return Generic tag result (output of this function)\n     */\n    mapTag(tagType, tag, warnings) {\n        const tagMapper = this.tagMappers[tagType];\n        if (tagMapper) {\n            return this.tagMappers[tagType].mapGenericTag(tag, warnings);\n        }\n        throw new InternalParserError(`No generic tag mapper defined for tag-format: ${tagType}`);\n    }\n    registerTagMapper(genericTagMapper) {\n        for (const tagType of genericTagMapper.tagTypes) {\n            this.tagMappers[tagType] = genericTagMapper;\n        }\n    }\n}\n//# sourceMappingURL=CombinedTagMapper.js.map"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AACO,MAAM;IACT,aAAc;QACV,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB;YACI,IAAI,kKAAA,CAAA,iBAAc;YAClB,IAAI,sKAAA,CAAA,kBAAe;YACnB,IAAI,sKAAA,CAAA,kBAAe;YACnB,IAAI,iKAAA,CAAA,eAAY;YAChB,IAAI,iKAAA,CAAA,eAAY;YAChB,IAAI,8KAAA,CAAA,kBAAe;YACnB,IAAI,qKAAA,CAAA,iBAAc;YAClB,IAAI,iKAAA,CAAA,eAAY;YAChB,IAAI,oKAAA,CAAA,oBAAiB;YACrB,IAAI,2KAAA,CAAA,oBAAiB;YACrB,IAAI,gKAAA,CAAA,gBAAa;SACpB,CAAC,OAAO,CAAC,CAAA;YACN,IAAI,CAAC,iBAAiB,CAAC;QAC3B;IACJ;IACA;;;;;;KAMC,GACD,OAAO,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE;QAC3B,MAAM,YAAY,IAAI,CAAC,UAAU,CAAC,QAAQ;QAC1C,IAAI,WAAW;YACX,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK;QACvD;QACA,MAAM,IAAI,wJAAA,CAAA,sBAAmB,CAAC,CAAC,8CAA8C,EAAE,SAAS;IAC5F;IACA,kBAAkB,gBAAgB,EAAE;QAChC,KAAK,MAAM,WAAW,iBAAiB,QAAQ,CAAE;YAC7C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG;QAC/B;IACJ;AACJ,EACA,6CAA6C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1479, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/id3v2/ID3v2Token.js"],"sourcesContent":["import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\n/**\n * The picture type according to the ID3v2 APIC frame\n * Ref: http://id3.org/id3v2.3.0#Attached_picture\n */\nexport const AttachedPictureType = {\n    0: 'Other',\n    1: \"32x32 pixels 'file icon' (PNG only)\",\n    2: 'Other file icon',\n    3: 'Cover (front)',\n    4: 'Cover (back)',\n    5: 'Leaflet page',\n    6: 'Media (e.g. label side of CD)',\n    7: 'Lead artist/lead performer/soloist',\n    8: 'Artist/performer',\n    9: 'Conductor',\n    10: 'Band/Orchestra',\n    11: 'Composer',\n    12: 'Lyricist/text writer',\n    13: 'Recording Location',\n    14: 'During recording',\n    15: 'During performance',\n    16: 'Movie/video screen capture',\n    17: 'A bright coloured fish',\n    18: 'Illustration',\n    19: 'Band/artist logotype',\n    20: 'Publisher/Studio logotype'\n};\n/**\n * https://id3.org/id3v2.3.0#Synchronised_lyrics.2Ftext\n */\nexport const LyricsContentType = {\n    other: 0,\n    lyrics: 1,\n    text: 2,\n    movement_part: 3,\n    events: 4,\n    chord: 5,\n    trivia_pop: 6,\n};\nexport const TimestampFormat = {\n    notSynchronized0: 0,\n    mpegFrameNumber: 1,\n    milliseconds: 2\n};\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n            ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n};\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n * ToDo\n */\nexport const ID3v2Header = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // ID3v2/file identifier   \"ID3\"\n            fileIdentifier: new Token.StringType(3, 'ascii').get(buf, off),\n            // ID3v2 versionIndex\n            version: {\n                major: Token.INT8.get(buf, off + 3),\n                revision: Token.INT8.get(buf, off + 4)\n            },\n            // ID3v2 flags\n            flags: {\n                // Unsynchronisation\n                unsynchronisation: util.getBit(buf, off + 5, 7),\n                // Extended header\n                isExtendedHeader: util.getBit(buf, off + 5, 6),\n                // Experimental indicator\n                expIndicator: util.getBit(buf, off + 5, 5),\n                footer: util.getBit(buf, off + 5, 4)\n            },\n            size: UINT32SYNCSAFE.get(buf, off + 6)\n        };\n    }\n};\nexport const ExtendedHeader = {\n    len: 10,\n    get: (buf, off) => {\n        return {\n            // Extended header size\n            size: Token.UINT32_BE.get(buf, off),\n            // Extended Flags\n            extendedFlags: Token.UINT16_BE.get(buf, off + 4),\n            // Size of padding\n            sizeOfPadding: Token.UINT32_BE.get(buf, off + 6),\n            // CRC data present\n            crcDataPresent: util.getBit(buf, off + 4, 31)\n        };\n    }\n};\nexport const TextEncodingToken = {\n    len: 1,\n    get: (uint8Array, off) => {\n        switch (uint8Array[off]) {\n            case 0x00:\n                return { encoding: 'latin1' }; // binary\n            case 0x01:\n                return { encoding: 'utf-16le', bom: true };\n            case 0x02:\n                return { encoding: 'utf-16le', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n        }\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const TextHeader = {\n    len: 4,\n    get: (uint8Array, off) => {\n        return {\n            encoding: TextEncodingToken.get(uint8Array, off),\n            language: new Token.StringType(3, 'latin1').get(uint8Array, off + 1)\n        };\n    }\n};\n/**\n * Used to read first portion of `SYLT` frame\n */\nexport const SyncTextHeader = {\n    len: 6,\n    get: (uint8Array, off) => {\n        const text = TextHeader.get(uint8Array, off);\n        return {\n            encoding: text.encoding,\n            language: text.language,\n            timeStampFormat: Token.UINT8.get(uint8Array, off + 4),\n            contentType: Token.UINT8.get(uint8Array, off + 5)\n        };\n    }\n};\n//# sourceMappingURL=ID3v2Token.js.map"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;AAKO,MAAM,sBAAsB;IAC/B,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;AACR;AAIO,MAAM,oBAAoB;IAC7B,OAAO;IACP,QAAQ;IACR,MAAM;IACN,eAAe;IACf,QAAQ;IACR,OAAO;IACP,YAAY;AAChB;AACO,MAAM,kBAAkB;IAC3B,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;AAClB;AAKO,MAAM,iBAAiB;IAC1B,KAAK,CAAC,KAAK;QACP,OAAO,GAAG,CAAC,MAAM,EAAE,GAAG,OAAQ,AAAC,GAAG,CAAC,MAAM,EAAE,IAAK,IAC3C,AAAC,GAAG,CAAC,MAAM,EAAE,IAAK,KAAO,AAAC,GAAG,CAAC,IAAI,IAAK;IAChD;IACA,KAAK;AACT;AAMO,MAAM,cAAc;IACvB,KAAK;IACL,KAAK,CAAC,KAAK;QACP,OAAO;YACH,gCAAgC;YAChC,gBAAgB,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,KAAK;YAC1D,qBAAqB;YACrB,SAAS;gBACL,OAAO,gJAAA,CAAA,OAAU,CAAC,GAAG,CAAC,KAAK,MAAM;gBACjC,UAAU,gJAAA,CAAA,OAAU,CAAC,GAAG,CAAC,KAAK,MAAM;YACxC;YACA,cAAc;YACd,OAAO;gBACH,oBAAoB;gBACpB,mBAAmB,CAAA,GAAA,4JAAA,CAAA,SAAW,AAAD,EAAE,KAAK,MAAM,GAAG;gBAC7C,kBAAkB;gBAClB,kBAAkB,CAAA,GAAA,4JAAA,CAAA,SAAW,AAAD,EAAE,KAAK,MAAM,GAAG;gBAC5C,yBAAyB;gBACzB,cAAc,CAAA,GAAA,4JAAA,CAAA,SAAW,AAAD,EAAE,KAAK,MAAM,GAAG;gBACxC,QAAQ,CAAA,GAAA,4JAAA,CAAA,SAAW,AAAD,EAAE,KAAK,MAAM,GAAG;YACtC;YACA,MAAM,eAAe,GAAG,CAAC,KAAK,MAAM;QACxC;IACJ;AACJ;AACO,MAAM,iBAAiB;IAC1B,KAAK;IACL,KAAK,CAAC,KAAK;QACP,OAAO;YACH,uBAAuB;YACvB,MAAM,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK;YAC/B,iBAAiB;YACjB,eAAe,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YAC9C,kBAAkB;YAClB,eAAe,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YAC9C,mBAAmB;YACnB,gBAAgB,CAAA,GAAA,4JAAA,CAAA,SAAW,AAAD,EAAE,KAAK,MAAM,GAAG;QAC9C;IACJ;AACJ;AACO,MAAM,oBAAoB;IAC7B,KAAK;IACL,KAAK,CAAC,YAAY;QACd,OAAQ,UAAU,CAAC,IAAI;YACnB,KAAK;gBACD,OAAO;oBAAE,UAAU;gBAAS,GAAG,SAAS;YAC5C,KAAK;gBACD,OAAO;oBAAE,UAAU;oBAAY,KAAK;gBAAK;YAC7C,KAAK;gBACD,OAAO;oBAAE,UAAU;oBAAY,KAAK;gBAAM;YAC9C,KAAK;gBACD,OAAO;oBAAE,UAAU;oBAAQ,KAAK;gBAAM;YAC1C;gBACI,OAAO;oBAAE,UAAU;oBAAQ,KAAK;gBAAM;QAC9C;IACJ;AACJ;AAIO,MAAM,aAAa;IACtB,KAAK;IACL,KAAK,CAAC,YAAY;QACd,OAAO;YACH,UAAU,kBAAkB,GAAG,CAAC,YAAY;YAC5C,UAAU,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,UAAU,GAAG,CAAC,YAAY,MAAM;QACtE;IACJ;AACJ;AAIO,MAAM,iBAAiB;IAC1B,KAAK;IACL,KAAK,CAAC,YAAY;QACd,MAAM,OAAO,WAAW,GAAG,CAAC,YAAY;QACxC,OAAO;YACH,UAAU,KAAK,QAAQ;YACvB,UAAU,KAAK,QAAQ;YACvB,iBAAiB,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,YAAY,MAAM;YACnD,aAAa,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,YAAY,MAAM;QACnD;IACJ;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1635, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/lrc/LyricsParser.js"],"sourcesContent":["import { LyricsContentType, TimestampFormat } from '../type.js';\n/**\n * Parse LRC (Lyrics) formatted text\n * Ref: https://en.wikipedia.org/wiki/LRC_(file_format)\n * @param lrcString\n */\nexport function parseLrc(lrcString) {\n    const lines = lrcString.split('\\n');\n    const syncText = [];\n    // Regular expression to match LRC timestamps (e.g., [00:45.52])\n    const timestampRegex = /\\[(\\d{2}):(\\d{2})\\.(\\d{2})\\]/;\n    for (const line of lines) {\n        const match = line.match(timestampRegex);\n        if (match) {\n            const minutes = Number.parseInt(match[1], 10);\n            const seconds = Number.parseInt(match[2], 10);\n            const hundredths = Number.parseInt(match[3], 10);\n            // Convert the timestamp to milliseconds, as per TimestampFormat.milliseconds\n            const timestamp = (minutes * 60 + seconds) * 1000 + hundredths * 10;\n            // Get the text portion of the line (e.g., \"あの蝶は自由になれたかな\")\n            const text = line.replace(timestampRegex, '').trim();\n            syncText.push({ timestamp, text });\n        }\n    }\n    // Creating the ILyricsTag object\n    return {\n        contentType: LyricsContentType.lyrics,\n        timeStampFormat: TimestampFormat.milliseconds,\n        syncText,\n    };\n}\n//# sourceMappingURL=LyricsParser.js.map"],"names":[],"mappings":";;;AAAA;;AAMO,SAAS,SAAS,SAAS;IAC9B,MAAM,QAAQ,UAAU,KAAK,CAAC;IAC9B,MAAM,WAAW,EAAE;IACnB,gEAAgE;IAChE,MAAM,iBAAiB;IACvB,KAAK,MAAM,QAAQ,MAAO;QACtB,MAAM,QAAQ,KAAK,KAAK,CAAC;QACzB,IAAI,OAAO;YACP,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;YAC1C,MAAM,UAAU,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;YAC1C,MAAM,aAAa,OAAO,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;YAC7C,6EAA6E;YAC7E,MAAM,YAAY,CAAC,UAAU,KAAK,OAAO,IAAI,OAAO,aAAa;YACjE,0DAA0D;YAC1D,MAAM,OAAO,KAAK,OAAO,CAAC,gBAAgB,IAAI,IAAI;YAClD,SAAS,IAAI,CAAC;gBAAE;gBAAW;YAAK;QACpC;IACJ;IACA,iCAAiC;IACjC,OAAO;QACH,aAAa,iKAAA,CAAA,oBAAiB,CAAC,MAAM;QACrC,iBAAiB,iKAAA,CAAA,kBAAe,CAAC,YAAY;QAC7C;IACJ;AACJ,EACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1674, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/MetadataCollector.js"],"sourcesContent":["import { TrackTypeValueToKeyMap } from '../type.js';\nimport initDebug from 'debug';\nimport { isSingleton, isUnique } from './GenericTagTypes.js';\nimport { CombinedTagMapper } from './CombinedTagMapper.js';\nimport { CommonTagMapper } from './GenericTagMapper.js';\nimport { toRatio } from './Util.js';\nimport { fileTypeFromBuffer } from 'file-type';\nimport { parseLrc } from '../lrc/LyricsParser.js';\nconst debug = initDebug('music-metadata:collector');\nconst TagPriority = ['matroska', 'APEv2', 'vorbis', 'ID3v2.4', 'ID3v2.3', 'ID3v2.2', 'exif', 'asf', 'iTunes', 'AIFF', 'ID3v1'];\n/**\n * Provided to the parser to uodate the metadata result.\n * Responsible for triggering async updates\n */\nexport class MetadataCollector {\n    constructor(opts) {\n        this.format = {\n            tagTypes: [],\n            trackInfo: []\n        };\n        this.native = {};\n        this.common = {\n            track: { no: null, of: null },\n            disk: { no: null, of: null },\n            movementIndex: { no: null, of: null }\n        };\n        this.quality = {\n            warnings: []\n        };\n        /**\n         * Keeps track of origin priority for each mapped id\n         */\n        this.commonOrigin = {};\n        /**\n         * Maps a tag type to a priority\n         */\n        this.originPriority = {};\n        this.tagMapper = new CombinedTagMapper();\n        this.opts = opts;\n        let priority = 1;\n        for (const tagType of TagPriority) {\n            this.originPriority[tagType] = priority++;\n        }\n        this.originPriority.artificial = 500; // Filled using alternative tags\n        this.originPriority.id3v1 = 600; // Consider as the worst because of the field length limit\n    }\n    /**\n     * @returns {boolean} true if one or more tags have been found\n     */\n    hasAny() {\n        return Object.keys(this.native).length > 0;\n    }\n    addStreamInfo(streamInfo) {\n        debug(`streamInfo: type=${streamInfo.type ? TrackTypeValueToKeyMap[streamInfo.type] : '?'}, codec=${streamInfo.codecName}`);\n        this.format.trackInfo.push(streamInfo);\n    }\n    setFormat(key, value) {\n        debug(`format: ${key} = ${value}`);\n        this.format[key] = value; // as any to override readonly\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'format', id: key, value } });\n        }\n    }\n    async addTag(tagType, tagId, value) {\n        debug(`tag ${tagType}.${tagId} = ${value}`);\n        if (!this.native[tagType]) {\n            this.format.tagTypes.push(tagType);\n            this.native[tagType] = [];\n        }\n        this.native[tagType].push({ id: tagId, value });\n        await this.toCommon(tagType, tagId, value);\n    }\n    addWarning(warning) {\n        this.quality.warnings.push({ message: warning });\n    }\n    async postMap(tagType, tag) {\n        // Common tag (alias) found\n        // check if we need to do something special with common tag\n        // if the event has been aliased then we need to clean it before\n        // it is emitted to the user. e.g. genre (20) -> Electronic\n        switch (tag.id) {\n            case 'artist':\n                if (this.commonOrigin.artist === this.originPriority[tagType]) {\n                    // Assume the artist field is used as artists\n                    return this.postMap('artificial', { id: 'artists', value: tag.value });\n                }\n                if (!this.common.artists) {\n                    // Fill artists using artist source\n                    this.setGenericTag('artificial', { id: 'artists', value: tag.value });\n                }\n                break;\n            case 'artists':\n                if (!this.common.artist || this.commonOrigin.artist === this.originPriority.artificial) {\n                    if (!this.common.artists || this.common.artists.indexOf(tag.value) === -1) {\n                        // Fill artist using artists source\n                        const artists = (this.common.artists || []).concat([tag.value]);\n                        const value = joinArtists(artists);\n                        const artistTag = { id: 'artist', value };\n                        this.setGenericTag('artificial', artistTag);\n                    }\n                }\n                break;\n            case 'picture':\n                return this.postFixPicture(tag.value).then(picture => {\n                    if (picture !== null) {\n                        tag.value = picture;\n                        this.setGenericTag(tagType, tag);\n                    }\n                });\n            case 'totaltracks':\n                this.common.track.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'totaldiscs':\n                this.common.disk.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'movementTotal':\n                this.common.movementIndex.of = CommonTagMapper.toIntOrNull(tag.value);\n                return;\n            case 'track':\n            case 'disk':\n            case 'movementIndex': {\n                const of = this.common[tag.id].of; // store of value, maybe maybe overwritten\n                this.common[tag.id] = CommonTagMapper.normalizeTrack(tag.value);\n                this.common[tag.id].of = of != null ? of : this.common[tag.id].of;\n                return;\n            }\n            case 'bpm':\n            case 'year':\n            case 'originalyear':\n                tag.value = Number.parseInt(tag.value, 10);\n                break;\n            case 'date': {\n                // ToDo: be more strict on 'YYYY...'\n                const year = Number.parseInt(tag.value.substr(0, 4), 10);\n                if (!Number.isNaN(year)) {\n                    this.common.year = year;\n                }\n                break;\n            }\n            case 'discogs_label_id':\n            case 'discogs_release_id':\n            case 'discogs_master_release_id':\n            case 'discogs_artist_id':\n            case 'discogs_votes':\n                tag.value = typeof tag.value === 'string' ? Number.parseInt(tag.value, 10) : tag.value;\n                break;\n            case 'replaygain_track_gain':\n            case 'replaygain_track_peak':\n            case 'replaygain_album_gain':\n            case 'replaygain_album_peak':\n                tag.value = toRatio(tag.value);\n                break;\n            case 'replaygain_track_minmax':\n                tag.value = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                break;\n            case 'replaygain_undo': {\n                const minMix = tag.value.split(',').map(v => Number.parseInt(v, 10));\n                tag.value = {\n                    leftChannel: minMix[0],\n                    rightChannel: minMix[1]\n                };\n                break;\n            }\n            case 'gapless': // iTunes gap-less flag\n            case 'compilation':\n            case 'podcast':\n            case 'showMovement':\n                tag.value = tag.value === '1' || tag.value === 1; // boolean\n                break;\n            case 'isrc': { // Only keep unique values\n                const commonTag = this.common[tag.id];\n                if (commonTag && commonTag.indexOf(tag.value) !== -1)\n                    return;\n                break;\n            }\n            case 'comment':\n                if (typeof tag.value === 'string') {\n                    tag.value = { text: tag.value };\n                }\n                if (tag.value.descriptor === 'iTunPGAP') {\n                    this.setGenericTag(tagType, { id: 'gapless', value: tag.value.text === '1' });\n                }\n                break;\n            case 'lyrics':\n                if (typeof tag.value === 'string') {\n                    tag.value = parseLrc(tag.value);\n                }\n                break;\n            default:\n            // nothing to do\n        }\n        if (tag.value !== null) {\n            this.setGenericTag(tagType, tag);\n        }\n    }\n    /**\n     * Convert native tags to common tags\n     * @returns {IAudioMetadata} Native + common tags\n     */\n    toCommonMetadata() {\n        return {\n            format: this.format,\n            native: this.native,\n            quality: this.quality,\n            common: this.common\n        };\n    }\n    /**\n     * Fix some common issues with picture object\n     * @param picture Picture\n     */\n    async postFixPicture(picture) {\n        if (picture.data && picture.data.length > 0) {\n            if (!picture.format) {\n                const fileType = await fileTypeFromBuffer(Uint8Array.from(picture.data)); // ToDO: remove Buffer\n                if (fileType) {\n                    picture.format = fileType.mime;\n                }\n                else {\n                    return null;\n                }\n            }\n            picture.format = picture.format.toLocaleLowerCase();\n            switch (picture.format) {\n                case 'image/jpg':\n                    picture.format = 'image/jpeg'; // ToDo: register warning\n            }\n            return picture;\n        }\n        this.addWarning(\"Empty picture tag found\");\n        return null;\n    }\n    /**\n     * Convert native tag to common tags\n     */\n    async toCommon(tagType, tagId, value) {\n        const tag = { id: tagId, value };\n        const genericTag = this.tagMapper.mapTag(tagType, tag, this);\n        if (genericTag) {\n            await this.postMap(tagType, genericTag);\n        }\n    }\n    /**\n     * Set generic tag\n     */\n    setGenericTag(tagType, tag) {\n        debug(`common.${tag.id} = ${tag.value}`);\n        const prio0 = this.commonOrigin[tag.id] || 1000;\n        const prio1 = this.originPriority[tagType];\n        if (isSingleton(tag.id)) {\n            if (prio1 <= prio0) {\n                this.common[tag.id] = tag.value;\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (singleton): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        else {\n            if (prio1 === prio0) {\n                if (!isUnique(tag.id) || this.common[tag.id].indexOf(tag.value) === -1) {\n                    this.common[tag.id].push(tag.value);\n                }\n                else {\n                    debug(`Ignore duplicate value: ${tagType}.${tag.id} = ${tag.value}`);\n                }\n                // no effect? this.commonOrigin[tag.id] = prio1;\n            }\n            else if (prio1 < prio0) {\n                this.common[tag.id] = [tag.value];\n                this.commonOrigin[tag.id] = prio1;\n            }\n            else {\n                return debug(`Ignore native tag (list): ${tagType}.${tag.id} = ${tag.value}`);\n            }\n        }\n        if (this.opts?.observer) {\n            this.opts.observer({ metadata: this, tag: { type: 'common', id: tag.id, value: tag.value } });\n        }\n        // ToDo: trigger metadata event\n    }\n}\nexport function joinArtists(artists) {\n    if (artists.length > 2) {\n        return `${artists.slice(0, artists.length - 1).join(', ')} & ${artists[artists.length - 1]}`;\n    }\n    return artists.join(' & ');\n}\n//# sourceMappingURL=MetadataCollector.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2026, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/mpeg/MpegLoader.js"],"sourcesContent":["export const mpegParserLoader = {\n    parserType: 'mpeg',\n    extensions: ['.mp2', '.mp3', '.m2a', '.aac', 'aacp'],\n    mimeTypes: ['audio/mpeg', 'audio/mp3', 'audio/aacs', 'audio/aacp'],\n    async load() {\n        return (await import('./MpegParser.js')).MpegParser;\n    }\n};\n//# sourceMappingURL=MpegLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;QAAQ;QAAQ;KAAO;IACpD,WAAW;QAAC;QAAc;QAAa;QAAc;KAAa;IAClE,MAAM;QACF,OAAO,CAAC,6JAA+B,EAAE,UAAU;IACvD;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2054, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/apev2/Apev2Loader.js"],"sourcesContent":["export const apeParserLoader = {\n    parserType: 'apev2',\n    extensions: ['.ape'],\n    mimeTypes: ['audio/ape', 'audio/monkeys-audio'],\n    async load() {\n        return (await import('./APEv2Parser.js')).APEv2Parser;\n    }\n};\n//# sourceMappingURL=Apev2Loader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,YAAY;IACZ,YAAY;QAAC;KAAO;IACpB,WAAW;QAAC;QAAa;KAAsB;IAC/C,MAAM;QACF,OAAO,CAAC,+JAAgC,EAAE,WAAW;IACzD;AACJ,GACA,uCAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2076, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/AsfLoader.js"],"sourcesContent":["export const asfParserLoader = {\n    parserType: 'asf',\n    extensions: ['.asf'],\n    mimeTypes: ['audio/ms-wma', 'video/ms-wmv', 'audio/ms-asf', 'video/ms-asf', 'application/vnd.ms-asf'],\n    async load() {\n        return (await import('./AsfParser.js')).AsfParser;\n    }\n};\n//# sourceMappingURL=AsfLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,YAAY;IACZ,YAAY;QAAC;KAAO;IACpB,WAAW;QAAC;QAAgB;QAAgB;QAAgB;QAAgB;KAAyB;IACrG,MAAM;QACF,OAAO,CAAC,2JAA8B,EAAE,SAAS;IACrD;AACJ,GACA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2101, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/dsdiff/DsdiffLoader.js"],"sourcesContent":["export const dsdiffParserLoader = {\n    parserType: 'dsdiff',\n    extensions: ['.dff'],\n    mimeTypes: ['audio/dsf', 'audio/dsd'],\n    async load() {\n        return (await import('./DsdiffParser.js')).DsdiffParser;\n    }\n};\n//# sourceMappingURL=DsdiffLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,qBAAqB;IAC9B,YAAY;IACZ,YAAY;QAAC;KAAO;IACpB,WAAW;QAAC;QAAa;KAAY;IACrC,MAAM;QACF,OAAO,CAAC,iKAAiC,EAAE,YAAY;IAC3D;AACJ,GACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2123, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/aiff/AiffLoader.js"],"sourcesContent":["export const aiffParserLoader = {\n    parserType: 'aiff',\n    extensions: ['.aif', 'aiff', 'aifc'],\n    mimeTypes: ['audio/aiff', 'audio/aif', 'audio/aifc', 'application/aiff'],\n    async load() {\n        return (await import('./AiffParser.js')).AIFFParser;\n    }\n};\n//# sourceMappingURL=AiffLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;KAAO;IACpC,WAAW;QAAC;QAAc;QAAa;QAAc;KAAmB;IACxE,MAAM;QACF,OAAO,CAAC,6JAA+B,EAAE,UAAU;IACvD;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2149, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/dsf/DsfLoader.js"],"sourcesContent":["export const dsfParserLoader = {\n    parserType: 'dsf',\n    extensions: ['.dsf'],\n    mimeTypes: ['audio/dsf'],\n    async load() {\n        return (await import('./DsfParser.js')).DsfParser;\n    }\n};\n//# sourceMappingURL=DsfLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,YAAY;IACZ,YAAY;QAAC;KAAO;IACpB,WAAW;QAAC;KAAY;IACxB,MAAM;QACF,OAAO,CAAC,2JAA8B,EAAE,SAAS;IACrD;AACJ,GACA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2170, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/flac/FlacLoader.js"],"sourcesContent":["export const flacParserLoader = {\n    parserType: 'flac',\n    extensions: ['.flac'],\n    mimeTypes: ['audio/flac'],\n    async load() {\n        return (await import('./FlacParser.js')).FlacParser;\n    }\n};\n//# sourceMappingURL=FlacLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B,YAAY;IACZ,YAAY;QAAC;KAAQ;IACrB,WAAW;QAAC;KAAa;IACzB,MAAM;QACF,OAAO,CAAC,6JAA+B,EAAE,UAAU;IACvD;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2191, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/matroska/MatroskaLoader.js"],"sourcesContent":["export const matroskaParserLoader = {\n    parserType: 'matroska',\n    extensions: ['.mka', '.mkv', '.mk3d', '.mks', 'webm'],\n    mimeTypes: ['audio/matroska', 'video/matroska', 'audio/webm', 'video/webm'],\n    async load() {\n        return (await import('./MatroskaParser.js')).MatroskaParser;\n    }\n};\n//# sourceMappingURL=MatroskaLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB;IAChC,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;QAAS;QAAQ;KAAO;IACrD,WAAW;QAAC;QAAkB;QAAkB;QAAc;KAAa;IAC3E,MAAM;QACF,OAAO,CAAC,qKAAmC,EAAE,cAAc;IAC/D;AACJ,GACA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2219, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/mp4/Mp4Loader.js"],"sourcesContent":["export const mp4ParserLoader = {\n    parserType: 'mp4',\n    extensions: ['.mp4', '.m4a', '.m4b', '.m4pa', 'm4v', 'm4r', '3gp'],\n    mimeTypes: ['audio/mp4', 'audio/m4a', 'video/m4v', 'video/mp4'],\n    async load() {\n        return (await import('./MP4Parser.js')).MP4Parser;\n    }\n};\n//# sourceMappingURL=Mp4Loader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;QAAQ;QAAS;QAAO;QAAO;KAAM;IAClE,WAAW;QAAC;QAAa;QAAa;QAAa;KAAY;IAC/D,MAAM;QACF,OAAO,CAAC,2JAA8B,EAAE,SAAS;IACrD;AACJ,GACA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2249, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/musepack/MusepackLoader.js"],"sourcesContent":["export const musepackParserLoader = {\n    parserType: 'musepack',\n    extensions: ['.mpc'],\n    mimeTypes: ['audio/musepack'],\n    async load() {\n        return (await import('./MusepackParser.js')).MusepackParser;\n    }\n};\n//# sourceMappingURL=MusepackLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB;IAChC,YAAY;IACZ,YAAY;QAAC;KAAO;IACpB,WAAW;QAAC;KAAiB;IAC7B,MAAM;QACF,OAAO,CAAC,qKAAmC,EAAE,cAAc;IAC/D;AACJ,GACA,0CAA0C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2270, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/OggLoader.js"],"sourcesContent":["export const oggParserLoader = {\n    parserType: 'ogg',\n    extensions: ['.ogg', '.ogv', '.oga', '.ogm', '.ogx', '.opus', '.spx'],\n    mimeTypes: ['audio/ogg', 'audio/opus', 'audio/speex', 'video/ogg'], // RFC 7845, RFC 6716, RFC 5574\n    async load() {\n        return (await import('./OggParser.js')).OggParser;\n    }\n};\n//# sourceMappingURL=OggLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,kBAAkB;IAC3B,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;QAAQ;QAAQ;QAAQ;QAAS;KAAO;IACrE,WAAW;QAAC;QAAa;QAAc;QAAe;KAAY;IAClE,MAAM;QACF,OAAO,CAAC,2JAA8B,EAAE,SAAS;IACrD;AACJ,GACA,qCAAqC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2300, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/wavpack/WavPackLoader.js"],"sourcesContent":["export const wavpackParserLoader = {\n    parserType: 'wavpack',\n    extensions: ['.wv', '.wvp'],\n    mimeTypes: ['audio/wavpack'],\n    async load() {\n        return (await import('./WavPackParser.js')).WavPackParser;\n    }\n};\n//# sourceMappingURL=WavPackLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,sBAAsB;IAC/B,YAAY;IACZ,YAAY;QAAC;QAAO;KAAO;IAC3B,WAAW;QAAC;KAAgB;IAC5B,MAAM;QACF,OAAO,CAAC,mKAAkC,EAAE,aAAa;IAC7D;AACJ,GACA,yCAAyC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2322, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/wav/WaveLoader.js"],"sourcesContent":["export const riffParserLoader = {\n    parserType: 'riff',\n    extensions: ['.wav', 'wave', '.bwf'],\n    mimeTypes: ['audio/vnd.wave', 'audio/wav', 'audio/wave'],\n    async load() {\n        return (await import('./WaveParser.js')).WaveParser;\n    }\n};\n//# sourceMappingURL=WaveLoader.js.map"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B,YAAY;IACZ,YAAY;QAAC;QAAQ;QAAQ;KAAO;IACpC,WAAW;QAAC;QAAkB;QAAa;KAAa;IACxD,MAAM;QACF,OAAO,CAAC,4JAA+B,EAAE,UAAU;IACvD;AACJ,GACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2347, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ParserFactory.js"],"sourcesContent":["import { fileTypeFromBuffer } from 'file-type';\nimport ContentType from 'content-type';\nimport { parse as mimeTypeParse } from 'media-typer';\nimport initDebug from 'debug';\nimport { MetadataCollector } from './common/MetadataCollector.js';\nimport { mpegParserLoader } from './mpeg/MpegLoader.js';\nimport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nimport { apeParserLoader } from './apev2/Apev2Loader.js';\nimport { asfParserLoader } from './asf/AsfLoader.js';\nimport { dsdiffParserLoader } from './dsdiff/DsdiffLoader.js';\nimport { aiffParserLoader } from './aiff/AiffLoader.js';\nimport { dsfParserLoader } from './dsf/DsfLoader.js';\nimport { flacParserLoader } from './flac/FlacLoader.js';\nimport { matroskaParserLoader } from './matroska/MatroskaLoader.js';\nimport { mp4ParserLoader } from './mp4/Mp4Loader.js';\nimport { musepackParserLoader } from './musepack/MusepackLoader.js';\nimport { oggParserLoader } from './ogg/OggLoader.js';\nimport { wavpackParserLoader } from './wavpack/WavPackLoader.js';\nimport { riffParserLoader } from './wav/WaveLoader.js';\nimport { scanAppendingHeaders } from './core.js';\nconst debug = initDebug('music-metadata:parser:factory');\nexport function parseHttpContentType(contentType) {\n    const type = ContentType.parse(contentType);\n    const mime = mimeTypeParse(type.type);\n    return {\n        type: mime.type,\n        subtype: mime.subtype,\n        suffix: mime.suffix,\n        parameters: type.parameters\n    };\n}\nexport class ParserFactory {\n    constructor() {\n        this.parsers = [];\n        [\n            flacParserLoader,\n            mpegParserLoader,\n            apeParserLoader,\n            mp4ParserLoader,\n            matroskaParserLoader,\n            riffParserLoader,\n            oggParserLoader,\n            asfParserLoader,\n            aiffParserLoader,\n            wavpackParserLoader,\n            musepackParserLoader,\n            dsfParserLoader,\n            dsdiffParserLoader\n        ].forEach(parser => this.registerParser(parser));\n    }\n    registerParser(parser) {\n        this.parsers.push(parser);\n    }\n    async parse(tokenizer, parserLoader, opts) {\n        if (tokenizer.supportsRandomAccess()) {\n            debug('tokenizer supports random-access, scanning for appending headers');\n            await scanAppendingHeaders(tokenizer, opts);\n        }\n        else {\n            debug('tokenizer does not support random-access, cannot scan for appending headers');\n        }\n        if (!parserLoader) {\n            const buf = new Uint8Array(4100);\n            if (tokenizer.fileInfo.mimeType) {\n                parserLoader = this.findLoaderForContentType(tokenizer.fileInfo.mimeType);\n            }\n            if (!parserLoader && tokenizer.fileInfo.path) {\n                parserLoader = this.findLoaderForExtension(tokenizer.fileInfo.path);\n            }\n            if (!parserLoader) {\n                // Parser could not be determined on MIME-type or extension\n                debug('Guess parser on content...');\n                await tokenizer.peekBuffer(buf, { mayBeLess: true });\n                const guessedType = await fileTypeFromBuffer(buf);\n                if (!guessedType || !guessedType.mime) {\n                    throw new CouldNotDetermineFileTypeError('Failed to determine audio format');\n                }\n                debug(`Guessed file type is mime=${guessedType.mime}, extension=${guessedType.ext}`);\n                parserLoader = this.findLoaderForContentType(guessedType.mime);\n                if (!parserLoader) {\n                    throw new UnsupportedFileTypeError(`Guessed MIME-type not supported: ${guessedType.mime}`);\n                }\n            }\n        }\n        // Parser found, execute parser\n        debug(`Loading ${parserLoader.parserType} parser...`);\n        const metadata = new MetadataCollector(opts);\n        const ParserImpl = await parserLoader.load();\n        const parser = new ParserImpl(metadata, tokenizer, opts ?? {});\n        debug(`Parser ${parserLoader.parserType} loaded`);\n        await parser.parse();\n        return metadata.toCommonMetadata();\n    }\n    /**\n     * @param filePath - Path, filename or extension to audio file\n     * @return Parser submodule name\n     */\n    findLoaderForExtension(filePath) {\n        if (!filePath)\n            return;\n        const extension = getExtension(filePath).toLocaleLowerCase() || filePath;\n        return this.parsers.find(parser => parser.extensions.indexOf(extension) !== -1);\n    }\n    findLoaderForContentType(httpContentType) {\n        let mime;\n        if (!httpContentType)\n            return;\n        try {\n            mime = parseHttpContentType(httpContentType);\n        }\n        catch (err) {\n            debug(`Invalid HTTP Content-Type header value: ${httpContentType}`);\n            return;\n        }\n        const subType = mime.subtype.indexOf('x-') === 0 ? mime.subtype.substring(2) : mime.subtype;\n        return this.parsers.find(parser => parser.mimeTypes.find(loader => loader.indexOf(`${mime.type}/${subType}`) !== -1));\n    }\n    getSupportedMimeTypes() {\n        const mimeTypeSet = new Set();\n        this.parsers.forEach(loader => {\n            loader.mimeTypes.forEach(mimeType => {\n                mimeTypeSet.add(mimeType);\n                mimeTypeSet.add(mimeType.replace('/', '/x-'));\n            });\n        });\n        return Array.from(mimeTypeSet);\n    }\n}\nfunction getExtension(fname) {\n    const i = fname.lastIndexOf('.');\n    return i === -1 ? '' : fname.slice(i);\n}\n//# sourceMappingURL=ParserFactory.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/BasicParser.js"],"sourcesContent":["export class BasicParser {\n    /**\n     * Initialize parser with output (metadata), input (tokenizer) & parsing options (options).\n     * @param {INativeMetadataCollector} metadata Output\n     * @param {ITokenizer} tokenizer Input\n     * @param {IOptions} options Parsing options\n     */\n    constructor(metadata, tokenizer, options) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n        this.options = options;\n    }\n}\n//# sourceMappingURL=BasicParser.js.map"],"names":[],"mappings":";;;AAAO,MAAM;IACT;;;;;KAKC,GACD,YAAY,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAE;QACtC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,OAAO,GAAG;IACnB;AACJ,EACA,uCAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2527, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/common/FourCC.js"],"sourcesContent":["import { stringToUint8Array, uint8ArrayToString } from 'uint8array-extras';\nimport * as util from './Util.js';\nimport { InternalParserError, FieldDecodingError } from '../ParseError.js';\nconst validFourCC = /^[\\x21-\\x7e©][\\x20-\\x7e\\x00()]{3}/;\n/**\n * Token for read FourCC\n * Ref: https://en.wikipedia.org/wiki/FourCC\n */\nexport const FourCcToken = {\n    len: 4,\n    get: (buf, off) => {\n        const id = uint8ArrayToString(buf.slice(off, off + FourCcToken.len), 'latin1');\n        if (!id.match(validFourCC)) {\n            throw new FieldDecodingError(`FourCC contains invalid characters: ${util.a2hex(id)} \"${id}\"`);\n        }\n        return id;\n    },\n    put: (buffer, offset, id) => {\n        const str = stringToUint8Array(id);\n        if (str.length !== 4)\n            throw new InternalParserError('Invalid length');\n        buffer.set(str, offset);\n        return offset + 4;\n    }\n};\n//# sourceMappingURL=FourCC.js.map"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,cAAc;AAKb,MAAM,cAAc;IACvB,KAAK;IACL,KAAK,CAAC,KAAK;QACP,MAAM,KAAK,CAAA,GAAA,+IAAA,CAAA,qBAAkB,AAAD,EAAE,IAAI,KAAK,CAAC,KAAK,MAAM,YAAY,GAAG,GAAG;QACrE,IAAI,CAAC,GAAG,KAAK,CAAC,cAAc;YACxB,MAAM,IAAI,wJAAA,CAAA,qBAAkB,CAAC,CAAC,oCAAoC,EAAE,CAAA,GAAA,4JAAA,CAAA,QAAU,AAAD,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;QAChG;QACA,OAAO;IACX;IACA,KAAK,CAAC,QAAQ,QAAQ;QAClB,MAAM,MAAM,CAAA,GAAA,+IAAA,CAAA,qBAAkB,AAAD,EAAE;QAC/B,IAAI,IAAI,MAAM,KAAK,GACf,MAAM,IAAI,wJAAA,CAAA,sBAAmB,CAAC;QAClC,OAAO,GAAG,CAAC,KAAK;QAChB,OAAO,SAAS;IACpB;AACJ,GACA,kCAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2559, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/apev2/APEv2Token.js"],"sourcesContent":["import * as Token from 'token-types';\nimport { FourCcToken } from '../common/FourCC.js';\nexport const DataType = {\n    text_utf8: 0,\n    binary: 1,\n    external_info: 2,\n    reserved: 3\n};\n/**\n * APE_DESCRIPTOR: defines the sizes (and offsets) of all the pieces, as well as the MD5 checksum\n */\nexport const DescriptorParser = {\n    len: 52,\n    get: (buf, off) => {\n        return {\n            // should equal 'MAC '\n            ID: FourCcToken.get(buf, off),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            version: Token.UINT32_LE.get(buf, off + 4) / 1000,\n            // the number of descriptor bytes (allows later expansion of this header)\n            descriptorBytes: Token.UINT32_LE.get(buf, off + 8),\n            // the number of header APE_HEADER bytes\n            headerBytes: Token.UINT32_LE.get(buf, off + 12),\n            // the number of header APE_HEADER bytes\n            seekTableBytes: Token.UINT32_LE.get(buf, off + 16),\n            // the number of header data bytes (from original file)\n            headerDataBytes: Token.UINT32_LE.get(buf, off + 20),\n            // the number of bytes of APE frame data\n            apeFrameDataBytes: Token.UINT32_LE.get(buf, off + 24),\n            // the high order number of APE frame data bytes\n            apeFrameDataBytesHigh: Token.UINT32_LE.get(buf, off + 28),\n            // the terminating data of the file (not including tag data)\n            terminatingDataBytes: Token.UINT32_LE.get(buf, off + 32),\n            // the MD5 hash of the file (see notes for usage... it's a little tricky)\n            fileMD5: new Token.Uint8ArrayType(16).get(buf, off + 36)\n        };\n    }\n};\n/**\n * APE_HEADER: describes all of the necessary information about the APE file\n */\nexport const Header = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            // the compression level (see defines I.E. COMPRESSION_LEVEL_FAST)\n            compressionLevel: Token.UINT16_LE.get(buf, off),\n            // any format flags (for future use)\n            formatFlags: Token.UINT16_LE.get(buf, off + 2),\n            // the number of audio blocks in one frame\n            blocksPerFrame: Token.UINT32_LE.get(buf, off + 4),\n            // the number of audio blocks in the final frame\n            finalFrameBlocks: Token.UINT32_LE.get(buf, off + 8),\n            // the total number of frames\n            totalFrames: Token.UINT32_LE.get(buf, off + 12),\n            // the bits per sample (typically 16)\n            bitsPerSample: Token.UINT16_LE.get(buf, off + 16),\n            // the number of channels (1 or 2)\n            channel: Token.UINT16_LE.get(buf, off + 18),\n            // the sample rate (typically 44100)\n            sampleRate: Token.UINT32_LE.get(buf, off + 20)\n        };\n    }\n};\n/**\n * APE Tag Header/Footer Version 2.0\n * TAG: describes all the properties of the file [optional]\n */\nexport const TagFooter = {\n    len: 32,\n    get: (buf, off) => {\n        return {\n            // should equal 'APETAGEX'\n            ID: new Token.StringType(8, 'ascii').get(buf, off),\n            // equals CURRENT_APE_TAG_VERSION\n            version: Token.UINT32_LE.get(buf, off + 8),\n            // the complete size of the tag, including this footer (excludes header)\n            size: Token.UINT32_LE.get(buf, off + 12),\n            // the number of fields in the tag\n            fields: Token.UINT32_LE.get(buf, off + 16),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 20))\n        };\n    }\n};\n/**\n * APE Tag v2.0 Item Header\n */\nexport const TagItemHeader = {\n    len: 8,\n    get: (buf, off) => {\n        return {\n            // Length of assigned value in bytes\n            size: Token.UINT32_LE.get(buf, off),\n            // reserved for later use (must be zero),\n            flags: parseTagFlags(Token.UINT32_LE.get(buf, off + 4))\n        };\n    }\n};\nexport function parseTagFlags(flags) {\n    return {\n        containsHeader: isBitSet(flags, 31),\n        containsFooter: isBitSet(flags, 30),\n        isHeader: isBitSet(flags, 29),\n        readOnly: isBitSet(flags, 0),\n        dataType: (flags & 6) >> 1\n    };\n}\n/**\n * @param num {number}\n * @param bit 0 is least significant bit (LSB)\n * @return {boolean} true if bit is 1; otherwise false\n */\nexport function isBitSet(num, bit) {\n    return (num & 1 << bit) !== 0;\n}\n//# sourceMappingURL=APEv2Token.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2674, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/apev2/APEv2Parser.js"],"sourcesContent":["import initDebug from 'debug';\nimport * as strtok3 from 'strtok3';\nimport { StringType } from 'token-types';\nimport { uint8ArrayToString } from 'uint8array-extras';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { DataType, DescriptorParser, Header, TagFooter, TagItemHeader } from './APEv2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:APEv2');\nconst tagFormat = 'APEv2';\nconst preamble = 'APETAGEX';\nexport class ApeContentError extends makeUnexpectedFileContentError('APEv2') {\n}\nexport class APEv2Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.ape = {};\n    }\n    static tryParseApeHeader(metadata, tokenizer, options) {\n        const apeParser = new APEv2Parser(metadata, tokenizer, options);\n        return apeParser.tryParseApeHeader();\n    }\n    /**\n     * Calculate the media file duration\n     * @param ah ApeHeader\n     * @return {number} duration in seconds\n     */\n    static calculateDuration(ah) {\n        let duration = ah.totalFrames > 1 ? ah.blocksPerFrame * (ah.totalFrames - 1) : 0;\n        duration += ah.finalFrameBlocks;\n        return duration / ah.sampleRate;\n    }\n    /**\n     * Calculates the APEv1 / APEv2 first field offset\n     * @param tokenizer\n     * @param offset\n     */\n    static async findApeFooterOffset(tokenizer, offset) {\n        // Search for APE footer header at the end of the file\n        const apeBuf = new Uint8Array(TagFooter.len);\n        const position = tokenizer.position;\n        if (offset <= TagFooter.len) {\n            debug(`Offset is too small to read APE footer: offset=${offset}`);\n            return undefined;\n        }\n        if (offset > TagFooter.len) {\n            await tokenizer.readBuffer(apeBuf, { position: offset - TagFooter.len });\n            tokenizer.setPosition(position);\n            const tagFooter = TagFooter.get(apeBuf, 0);\n            if (tagFooter.ID === 'APETAGEX') {\n                if (tagFooter.flags.isHeader) {\n                    debug(`APE Header found at offset=${offset - TagFooter.len}`);\n                }\n                else {\n                    debug(`APE Footer found at offset=${offset - TagFooter.len}`);\n                    offset -= tagFooter.size;\n                }\n                return { footer: tagFooter, offset };\n            }\n        }\n    }\n    static parseTagFooter(metadata, buffer, options) {\n        const footer = TagFooter.get(buffer, buffer.length - TagFooter.len);\n        if (footer.ID !== preamble)\n            throw new ApeContentError('Unexpected APEv2 Footer ID preamble value');\n        strtok3.fromBuffer(buffer);\n        const apeParser = new APEv2Parser(metadata, strtok3.fromBuffer(buffer), options);\n        return apeParser.parseTags(footer);\n    }\n    /**\n     * Parse APEv1 / APEv2 header if header signature found\n     */\n    async tryParseApeHeader() {\n        if (this.tokenizer.fileInfo.size && this.tokenizer.fileInfo.size - this.tokenizer.position < TagFooter.len) {\n            debug(\"No APEv2 header found, end-of-file reached\");\n            return;\n        }\n        const footer = await this.tokenizer.peekToken(TagFooter);\n        if (footer.ID === preamble) {\n            await this.tokenizer.ignore(TagFooter.len);\n            return this.parseTags(footer);\n        }\n        debug(`APEv2 header not found at offset=${this.tokenizer.position}`);\n        if (this.tokenizer.fileInfo.size) {\n            // Try to read the APEv2 header using just the footer-header\n            const remaining = this.tokenizer.fileInfo.size - this.tokenizer.position; // ToDo: take ID3v1 into account\n            const buffer = new Uint8Array(remaining);\n            await this.tokenizer.readBuffer(buffer);\n            return APEv2Parser.parseTagFooter(this.metadata, buffer, this.options);\n        }\n    }\n    async parse() {\n        const descriptor = await this.tokenizer.readToken(DescriptorParser);\n        if (descriptor.ID !== 'MAC ')\n            throw new ApeContentError('Unexpected descriptor ID');\n        this.ape.descriptor = descriptor;\n        const lenExp = descriptor.descriptorBytes - DescriptorParser.len;\n        const header = await (lenExp > 0 ? this.parseDescriptorExpansion(lenExp) : this.parseHeader());\n        await this.tokenizer.ignore(header.forwardBytes);\n        return this.tryParseApeHeader();\n    }\n    async parseTags(footer) {\n        const keyBuffer = new Uint8Array(256); // maximum tag key length\n        let bytesRemaining = footer.size - TagFooter.len;\n        debug(`Parse APE tags at offset=${this.tokenizer.position}, size=${bytesRemaining}`);\n        for (let i = 0; i < footer.fields; i++) {\n            if (bytesRemaining < TagItemHeader.len) {\n                this.metadata.addWarning(`APEv2 Tag-header: ${footer.fields - i} items remaining, but no more tag data to read.`);\n                break;\n            }\n            // Only APEv2 tag has tag item headers\n            const tagItemHeader = await this.tokenizer.readToken(TagItemHeader);\n            bytesRemaining -= TagItemHeader.len + tagItemHeader.size;\n            await this.tokenizer.peekBuffer(keyBuffer, { length: Math.min(keyBuffer.length, bytesRemaining) });\n            let zero = util.findZero(keyBuffer, 0, keyBuffer.length);\n            const key = await this.tokenizer.readToken(new StringType(zero, 'ascii'));\n            await this.tokenizer.ignore(1);\n            bytesRemaining -= key.length + 1;\n            switch (tagItemHeader.flags.dataType) {\n                case DataType.text_utf8: { // utf-8 text-string\n                    const value = await this.tokenizer.readToken(new StringType(tagItemHeader.size, 'utf8'));\n                    const values = value.split(/\\x00/g);\n                    await Promise.all(values.map(val => this.metadata.addTag(tagFormat, key, val)));\n                    break;\n                }\n                case DataType.binary: // binary (probably artwork)\n                    if (this.options.skipCovers) {\n                        await this.tokenizer.ignore(tagItemHeader.size);\n                    }\n                    else {\n                        const picData = new Uint8Array(tagItemHeader.size);\n                        await this.tokenizer.readBuffer(picData);\n                        zero = util.findZero(picData, 0, picData.length);\n                        const description = uint8ArrayToString(picData.slice(0, zero));\n                        const data = picData.slice(zero + 1);\n                        await this.metadata.addTag(tagFormat, key, {\n                            description,\n                            data\n                        });\n                    }\n                    break;\n                case DataType.external_info:\n                    debug(`Ignore external info ${key}`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n                case DataType.reserved:\n                    debug(`Ignore external info ${key}`);\n                    this.metadata.addWarning(`APEv2 header declares a reserved datatype for \"${key}\"`);\n                    await this.tokenizer.ignore(tagItemHeader.size);\n                    break;\n            }\n        }\n    }\n    async parseDescriptorExpansion(lenExp) {\n        await this.tokenizer.ignore(lenExp);\n        return this.parseHeader();\n    }\n    async parseHeader() {\n        const header = await this.tokenizer.readToken(Header);\n        // ToDo before\n        this.metadata.setFormat('lossless', true);\n        this.metadata.setFormat('container', 'Monkey\\'s Audio');\n        this.metadata.setFormat('bitsPerSample', header.bitsPerSample);\n        this.metadata.setFormat('sampleRate', header.sampleRate);\n        this.metadata.setFormat('numberOfChannels', header.channel);\n        this.metadata.setFormat('duration', APEv2Parser.calculateDuration(header));\n        if (!this.ape.descriptor) {\n            throw new ApeContentError('Missing APE descriptor');\n        }\n        return {\n            forwardBytes: this.ape.descriptor.seekTableBytes + this.ape.descriptor.headerDataBytes +\n                this.ape.descriptor.apeFrameDataBytes + this.ape.descriptor.terminatingDataBytes\n        };\n    }\n}\n//# sourceMappingURL=APEv2Parser.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2868, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/id3v1/ID3v1Parser.js"],"sourcesContent":["import initDebug from 'debug';\nimport { StringType, UINT8 } from 'token-types';\nimport * as util from '../common/Util.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { APEv2Parser } from '../apev2/APEv2Parser.js';\nconst debug = initDebug('music-metadata:parser:ID3v1');\n/**\n * ID3v1 Genre mappings\n * Ref: https://de.wikipedia.org/wiki/Liste_der_ID3v1-Genres\n */\nexport const Genres = [\n    'Blues', 'Classic Rock', 'Country', 'Dance', 'Disco', 'Funk', 'Grunge', 'Hip-Hop',\n    'Jazz', 'Metal', 'New Age', 'Oldies', 'Other', 'Pop', 'R&B', 'Rap', 'Reggae', 'Rock',\n    'Techno', 'Industrial', 'Alternative', 'Ska', 'Death Metal', 'Pranks', 'Soundtrack',\n    'Euro-Techno', 'Ambient', 'Trip-Hop', 'Vocal', 'Jazz+Funk', 'Fusion', 'Trance',\n    'Classical', 'Instrumental', 'Acid', 'House', 'Game', 'Sound Clip', 'Gospel', 'Noise',\n    'Alt. Rock', 'Bass', 'Soul', 'Punk', 'Space', 'Meditative', 'Instrumental Pop',\n    'Instrumental Rock', 'Ethnic', 'Gothic', 'Darkwave', 'Techno-Industrial',\n    'Electronic', 'Pop-Folk', 'Eurodance', 'Dream', 'Southern Rock', 'Comedy', 'Cult',\n    'Gangsta Rap', 'Top 40', 'Christian Rap', 'Pop/Funk', 'Jungle', 'Native American',\n    'Cabaret', 'New Wave', 'Psychedelic', 'Rave', 'Showtunes', 'Trailer', 'Lo-Fi', 'Tribal',\n    'Acid Punk', 'Acid Jazz', 'Polka', 'Retro', 'Musical', 'Rock & Roll', 'Hard Rock',\n    'Folk', 'Folk/Rock', 'National Folk', 'Swing', 'Fast-Fusion', 'Bebob', 'Latin', 'Revival',\n    'Celtic', 'Bluegrass', 'Avantgarde', 'Gothic Rock', 'Progressive Rock', 'Psychedelic Rock',\n    'Symphonic Rock', 'Slow Rock', 'Big Band', 'Chorus', 'Easy Listening', 'Acoustic', 'Humour',\n    'Speech', 'Chanson', 'Opera', 'Chamber Music', 'Sonata', 'Symphony', 'Booty Bass', 'Primus',\n    'Porn Groove', 'Satire', 'Slow Jam', 'Club', 'Tango', 'Samba', 'Folklore',\n    'Ballad', 'Power Ballad', 'Rhythmic Soul', 'Freestyle', 'Duet', 'Punk Rock', 'Drum Solo',\n    'A Cappella', 'Euro-House', 'Dance Hall', 'Goa', 'Drum & Bass', 'Club-House',\n    'Hardcore', 'Terror', 'Indie', 'BritPop', 'Negerpunk', 'Polsk Punk', 'Beat',\n    'Christian Gangsta Rap', 'Heavy Metal', 'Black Metal', 'Crossover', 'Contemporary Christian',\n    'Christian Rock', 'Merengue', 'Salsa', 'Thrash Metal', 'Anime', 'JPop', 'Synthpop',\n    'Abstract', 'Art Rock', 'Baroque', 'Bhangra', 'Big Beat', 'Breakbeat', 'Chillout',\n    'Downtempo', 'Dub', 'EBM', 'Eclectic', 'Electro', 'Electroclash', 'Emo', 'Experimental',\n    'Garage', 'Global', 'IDM', 'Illbient', 'Industro-Goth', 'Jam Band', 'Krautrock',\n    'Leftfield', 'Lounge', 'Math Rock', 'New Romantic', 'Nu-Breakz', 'Post-Punk', 'Post-Rock',\n    'Psytrance', 'Shoegaze', 'Space Rock', 'Trop Rock', 'World Music', 'Neoclassical', 'Audiobook',\n    'Audio Theatre', 'Neue Deutsche Welle', 'Podcast', 'Indie Rock', 'G-Funk', 'Dubstep',\n    'Garage Rock', 'Psybient'\n];\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nconst Iid3v1Token = {\n    len: 128,\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = new Id3v1StringType(3).get(buf, off);\n        return header === 'TAG' ? {\n            header,\n            title: new Id3v1StringType(30).get(buf, off + 3),\n            artist: new Id3v1StringType(30).get(buf, off + 33),\n            album: new Id3v1StringType(30).get(buf, off + 63),\n            year: new Id3v1StringType(4).get(buf, off + 93),\n            comment: new Id3v1StringType(28).get(buf, off + 97),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};\nclass Id3v1StringType {\n    constructor(len) {\n        this.len = len;\n        this.stringType = new StringType(len, 'latin1');\n    }\n    get(buf, off) {\n        let value = this.stringType.get(buf, off);\n        value = util.trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}\nexport class ID3v1Parser extends BasicParser {\n    constructor(metadata, tokenizer, options) {\n        super(metadata, tokenizer, options);\n        this.apeHeader = options.apeHeader;\n    }\n    static getGenre(genreIndex) {\n        if (genreIndex < Genres.length) {\n            return Genres[genreIndex];\n        }\n        return undefined; // ToDO: generate warning\n    }\n    async parse() {\n        if (!this.tokenizer.fileInfo.size) {\n            debug('Skip checking for ID3v1 because the file-size is unknown');\n            return;\n        }\n        if (this.apeHeader) {\n            this.tokenizer.ignore(this.apeHeader.offset - this.tokenizer.position);\n            const apeParser = new APEv2Parser(this.metadata, this.tokenizer, this.options);\n            await apeParser.parseTags(this.apeHeader.footer);\n        }\n        const offset = this.tokenizer.fileInfo.size - Iid3v1Token.len;\n        if (this.tokenizer.position > offset) {\n            debug('Already consumed the last 128 bytes');\n            return;\n        }\n        const header = await this.tokenizer.readToken(Iid3v1Token, offset);\n        if (header) {\n            debug('ID3v1 header found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n            const props = ['title', 'artist', 'album', 'comment', 'track', 'year'];\n            for (const id of props) {\n                if (header[id] && header[id] !== '')\n                    await this.addTag(id, header[id]);\n            }\n            const genre = ID3v1Parser.getGenre(header.genre);\n            if (genre)\n                await this.addTag('genre', genre);\n        }\n        else {\n            debug('ID3v1 header not found at: pos=%s', this.tokenizer.fileInfo.size - Iid3v1Token.len);\n        }\n    }\n    async addTag(id, value) {\n        await this.metadata.addTag('ID3v1', id, value);\n    }\n}\nexport async function hasID3v1Header(tokenizer) {\n    if (tokenizer.fileInfo.size >= 128) {\n        const tag = new Uint8Array(3);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(tag, { position: tokenizer.fileInfo.size - 128 });\n        tokenizer.setPosition(position); // Restore tokenizer position\n        return new TextDecoder('latin1').decode(tag) === 'TAG';\n    }\n    return false;\n}\n//# sourceMappingURL=ID3v1Parser.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3184, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/lyrics3/Lyrics3.js"],"sourcesContent":["export const endTag2 = 'LYRICS200';\nexport async function getLyricsHeaderLength(tokenizer) {\n    const fileSize = tokenizer.fileInfo.size;\n    if (fileSize >= 143) {\n        const buf = new Uint8Array(15);\n        const position = tokenizer.position;\n        await tokenizer.readBuffer(buf, { position: fileSize - 143 });\n        tokenizer.setPosition(position); // Restore position\n        const txt = new TextDecoder('latin1').decode(buf);\n        const tag = txt.slice(6);\n        if (tag === endTag2) {\n            return Number.parseInt(txt.slice(0, 6), 10) + 15;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=Lyrics3.js.map"],"names":[],"mappings":";;;;AAAO,MAAM,UAAU;AAChB,eAAe,sBAAsB,SAAS;IACjD,MAAM,WAAW,UAAU,QAAQ,CAAC,IAAI;IACxC,IAAI,YAAY,KAAK;QACjB,MAAM,MAAM,IAAI,WAAW;QAC3B,MAAM,WAAW,UAAU,QAAQ;QACnC,MAAM,UAAU,UAAU,CAAC,KAAK;YAAE,UAAU,WAAW;QAAI;QAC3D,UAAU,WAAW,CAAC,WAAW,mBAAmB;QACpD,MAAM,MAAM,IAAI,YAAY,UAAU,MAAM,CAAC;QAC7C,MAAM,MAAM,IAAI,KAAK,CAAC;QACtB,IAAI,QAAQ,SAAS;YACjB,OAAO,OAAO,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,MAAM;QAClD;IACJ;IACA,OAAO;AACX,EACA,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3212, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/core.js"],"sourcesContent":["/**\n * Primary entry point, Node.js specific entry point is MusepackParser.ts\n */\nimport { fromWebStream, fromBuffer } from 'strtok3';\nimport { ParserFactory } from './ParserFactory.js';\nimport { APEv2Parser } from './apev2/APEv2Parser.js';\nimport { hasID3v1Header } from './id3v1/ID3v1Parser.js';\nimport { getLyricsHeaderLength } from './lyrics3/Lyrics3.js';\nexport { LyricsContentType, TimestampFormat } from './type.js';\nexport { CouldNotDetermineFileTypeError, UnsupportedFileTypeError } from './ParseError.js';\nexport * from './ParseError.js';\n/**\n * Parse Web API File\n * Requires Blob to be able to stream using a ReadableStreamBYOBReader, only available since Node.js ≥ 20\n * @param blob - Blob to parse\n * @param options - Parsing options\n * @returns Metadata\n */\nexport async function parseBlob(blob, options = {}) {\n    const fileInfo = { mimeType: blob.type, size: blob.size };\n    if (blob instanceof File) {\n        fileInfo.path = blob.name;\n    }\n    return parseWebStream(blob.stream(), fileInfo, options);\n}\n/**\n * Parse audio from Web Stream.Readable\n * @param webStream - WebStream to read the audio track from\n * @param options - Parsing options\n * @param fileInfo - File information object or MIME-type string\n * @returns Metadata\n */\nexport async function parseWebStream(webStream, fileInfo, options = {}) {\n    const tokenizer = fromWebStream(webStream, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    try {\n        return await parseFromTokenizer(tokenizer, options);\n    }\n    finally {\n        await tokenizer.close();\n    }\n}\n/**\n * Parse audio from memory\n * @param uint8Array - Uint8Array holding audio data\n * @param fileInfo - File information object or MIME-type string\n * @param options - Parsing options\n * @returns Metadata\n * Ref: https://github.com/Borewit/strtok3/blob/e6938c81ff685074d5eb3064a11c0b03ca934c1d/src/index.ts#L15\n */\nexport async function parseBuffer(uint8Array, fileInfo, options = {}) {\n    const tokenizer = fromBuffer(uint8Array, { fileInfo: typeof fileInfo === 'string' ? { mimeType: fileInfo } : fileInfo });\n    return parseFromTokenizer(tokenizer, options);\n}\n/**\n * Parse audio from ITokenizer source\n * @param tokenizer - Audio source implementing the tokenizer interface\n * @param options - Parsing options\n * @returns Metadata\n */\nexport function parseFromTokenizer(tokenizer, options) {\n    const parserFactory = new ParserFactory();\n    return parserFactory.parse(tokenizer, undefined, options);\n}\n/**\n * Create a dictionary ordered by their tag id (key)\n * @param nativeTags list of tags\n * @returns tags indexed by id\n */\nexport function orderTags(nativeTags) {\n    const tags = {};\n    for (const { id, value } of nativeTags) {\n        if (!tags[id]) {\n            tags[id] = [];\n        }\n        tags[id].push(value);\n    }\n    return tags;\n}\n/**\n * Convert rating to 1-5 star rating\n * @param rating Normalized rating [0..1] (common.rating[n].rating)\n * @returns Number of stars: 1, 2, 3, 4 or 5 stars\n */\nexport function ratingToStars(rating) {\n    return rating === undefined ? 0 : 1 + Math.round(rating * 4);\n}\n/**\n * Select most likely cover image.\n * @param pictures Usually metadata.common.picture\n * @return Cover image, if any, otherwise null\n */\nexport function selectCover(pictures) {\n    return pictures ? pictures.reduce((acc, cur) => {\n        if (cur.name && cur.name.toLowerCase() in ['front', 'cover', 'cover (front)'])\n            return cur;\n        return acc;\n    }) : null;\n}\nexport async function scanAppendingHeaders(tokenizer, options = {}) {\n    let apeOffset = tokenizer.fileInfo.size;\n    if (await hasID3v1Header(tokenizer)) {\n        apeOffset -= 128;\n        const lyricsLen = await getLyricsHeaderLength(tokenizer);\n        apeOffset -= lyricsLen;\n    }\n    options.apeHeader = await APEv2Parser.findApeFooterOffset(tokenizer, apeOffset);\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseFile(filePath, options = {}) {\n    throw new Error('This function require a Node engine. To load Web API File objects use parseBlob instead.');\n}\n/**\n * Implementation only available when loaded as Node.js\n * This method will throw an Error, always.\n */\nexport async function parseStream(stream, fileInfo, options = {}) {\n    throw new Error('This function require a Node engine.');\n}\n/**\n * Return a list of supported mime-types\n */\nexport function getSupportedMimeTypes() {\n    return new ParserFactory().getSupportedMimeTypes();\n}\n//# sourceMappingURL=core.js.map"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;;;AACD;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAWO,eAAe,UAAU,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,MAAM,WAAW;QAAE,UAAU,KAAK,IAAI;QAAE,MAAM,KAAK,IAAI;IAAC;IACxD,IAAI,gBAAgB,MAAM;QACtB,SAAS,IAAI,GAAG,KAAK,IAAI;IAC7B;IACA,OAAO,eAAe,KAAK,MAAM,IAAI,UAAU;AACnD;AAQO,eAAe,eAAe,SAAS,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAClE,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,gBAAa,AAAD,EAAE,WAAW;QAAE,UAAU,OAAO,aAAa,WAAW;YAAE,UAAU;QAAS,IAAI;IAAS;IACxH,IAAI;QACA,OAAO,MAAM,mBAAmB,WAAW;IAC/C,SACQ;QACJ,MAAM,UAAU,KAAK;IACzB;AACJ;AASO,eAAe,YAAY,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAChE,MAAM,YAAY,CAAA,GAAA,wJAAA,CAAA,aAAU,AAAD,EAAE,YAAY;QAAE,UAAU,OAAO,aAAa,WAAW;YAAE,UAAU;QAAS,IAAI;IAAS;IACtH,OAAO,mBAAmB,WAAW;AACzC;AAOO,SAAS,mBAAmB,SAAS,EAAE,OAAO;IACjD,MAAM,gBAAgB,IAAI,2JAAA,CAAA,gBAAa;IACvC,OAAO,cAAc,KAAK,CAAC,WAAW,WAAW;AACrD;AAMO,SAAS,UAAU,UAAU;IAChC,MAAM,OAAO,CAAC;IACd,KAAK,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,WAAY;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX,IAAI,CAAC,GAAG,GAAG,EAAE;QACjB;QACA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;IAClB;IACA,OAAO;AACX;AAMO,SAAS,cAAc,MAAM;IAChC,OAAO,WAAW,YAAY,IAAI,IAAI,KAAK,KAAK,CAAC,SAAS;AAC9D;AAMO,SAAS,YAAY,QAAQ;IAChC,OAAO,WAAW,SAAS,MAAM,CAAC,CAAC,KAAK;QACpC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,MAAM;YAAC;YAAS;YAAS;SAAgB,EACzE,OAAO;QACX,OAAO;IACX,KAAK;AACT;AACO,eAAe,qBAAqB,SAAS,EAAE,UAAU,CAAC,CAAC;IAC9D,IAAI,YAAY,UAAU,QAAQ,CAAC,IAAI;IACvC,IAAI,MAAM,CAAA,GAAA,kKAAA,CAAA,iBAAc,AAAD,EAAE,YAAY;QACjC,aAAa;QACb,MAAM,YAAY,MAAM,CAAA,GAAA,gKAAA,CAAA,wBAAqB,AAAD,EAAE;QAC9C,aAAa;IACjB;IACA,QAAQ,SAAS,GAAG,MAAM,kKAAA,CAAA,cAAW,CAAC,mBAAmB,CAAC,WAAW;AACzE;AAKO,eAAe,UAAU,QAAQ,EAAE,UAAU,CAAC,CAAC;IAClD,MAAM,IAAI,MAAM;AACpB;AAKO,eAAe,YAAY,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC5D,MAAM,IAAI,MAAM;AACpB;AAIO,SAAS;IACZ,OAAO,IAAI,2JAAA,CAAA,gBAAa,GAAG,qBAAqB;AACpD,EACA,gCAAgC","ignoreList":[0],"debugId":null}}]
}