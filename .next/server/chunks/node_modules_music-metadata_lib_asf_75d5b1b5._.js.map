{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/GUID.js"],"sourcesContent":["import { hexToUint8Array, uint8ArrayToHex } from 'uint8array-extras';\n/**\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n *\n * ASF File Structure:\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n *\n * ASF GUIDs:\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\n */\nclass GUID {\n    static fromBin(bin, offset = 0) {\n        return new GUID(GUID.decode(bin, offset));\n    }\n    /**\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @param objectId Binary GUID\n     * @param offset Read offset in bytes, default 0\n     * @returns GUID as dashed hexadecimal representation\n     */\n    static decode(objectId, offset = 0) {\n        const view = new DataView(objectId.buffer, offset);\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${uint8ArrayToHex(objectId.slice(offset + 10, offset + 16))}`;\n        return guid.toUpperCase();\n    }\n    /**\n     * Decode stream type\n     * @param mediaType Media type GUID\n     * @returns Media type\n     */\n    static decodeMediaType(mediaType) {\n        switch (mediaType.str) {\n            case GUID.AudioMedia.str: return 'audio';\n            case GUID.VideoMedia.str: return 'video';\n            case GUID.CommandMedia.str: return 'command';\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\n            case GUID.FileTransferMedia.str: return 'file-transfer';\n            case GUID.BinaryMedia.str: return 'binary';\n        }\n    }\n    /**\n     * Encode GUID\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @returns Encoded Binary GUID\n     */\n    static encode(str) {\n        const bin = new Uint8Array(16);\n        const view = new DataView(bin.buffer);\n        view.setUint32(0, Number.parseInt(str.slice(0, 8), 16), true);\n        view.setUint16(4, Number.parseInt(str.slice(9, 13), 16), true);\n        view.setUint16(6, Number.parseInt(str.slice(14, 18), 16), true);\n        bin.set(hexToUint8Array(str.slice(19, 23)), 8);\n        bin.set(hexToUint8Array(str.slice(24)), 10);\n        return bin;\n    }\n    constructor(str) {\n        this.str = str;\n    }\n    equals(guid) {\n        return this.str === guid.str;\n    }\n    toBin() {\n        return GUID.encode(this.str);\n    }\n}\n// 10.1 Top-level ASF object GUIDs\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\n// 10.2 Header Object GUIDs\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\n// 10.3 Header Extension Object GUIDs\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\n// 10.4 Stream Properties Object Stream Type GUIDs\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\nexport default GUID;\n//# sourceMappingURL=GUID.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/AsfUtil.js"],"sourcesContent":["import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nexport function getParserForAttr(i) {\n    return attributeParsers[i];\n}\nexport function parseUnicodeAttr(uint8Array) {\n    return util.stripNulls(util.decodeString(uint8Array, 'utf-16le'));\n}\nconst attributeParsers = [\n    parseUnicodeAttr,\n    parseByteArrayAttr,\n    parseBoolAttr,\n    parseDWordAttr,\n    parseQWordAttr,\n    parseWordAttr,\n    parseByteArrayAttr\n];\nfunction parseByteArrayAttr(buf) {\n    return new Uint8Array(buf);\n}\nfunction parseBoolAttr(buf, offset = 0) {\n    return parseWordAttr(buf, offset) === 1;\n}\nfunction parseDWordAttr(buf, offset = 0) {\n    return Token.UINT32_LE.get(buf, offset);\n}\nfunction parseQWordAttr(buf, offset = 0) {\n    return Token.UINT64_LE.get(buf, offset);\n}\nfunction parseWordAttr(buf, offset = 0) {\n    return Token.UINT16_LE.get(buf, offset);\n}\n//# sourceMappingURL=AsfUtil.js.map"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,SAAS,iBAAiB,CAAC;IAC9B,OAAO,gBAAgB,CAAC,EAAE;AAC9B;AACO,SAAS,iBAAiB,UAAU;IACvC,OAAO,CAAA,GAAA,4JAAA,CAAA,aAAe,AAAD,EAAE,CAAA,GAAA,4JAAA,CAAA,eAAiB,AAAD,EAAE,YAAY;AACzD;AACA,MAAM,mBAAmB;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD,SAAS,mBAAmB,GAAG;IAC3B,OAAO,IAAI,WAAW;AAC1B;AACA,SAAS,cAAc,GAAG,EAAE,SAAS,CAAC;IAClC,OAAO,cAAc,KAAK,YAAY;AAC1C;AACA,SAAS,eAAe,GAAG,EAAE,SAAS,CAAC;IACnC,OAAO,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK;AACpC;AACA,SAAS,eAAe,GAAG,EAAE,SAAS,CAAC;IACnC,OAAO,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK;AACpC;AACA,SAAS,cAAc,GAAG,EAAE,SAAS,CAAC;IAClC,OAAO,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK;AACpC,EACA,mCAAmC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/AsfObject.js"],"sourcesContent":["// ASF Objects\nimport * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport GUID from './GUID.js';\nimport { getParserForAttr, parseUnicodeAttr } from './AsfUtil.js';\nimport { AttachedPictureType } from '../id3v2/ID3v2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class AsfContentParseError extends makeUnexpectedFileContentError('ASF') {\n}\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nexport const DataType = {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    UnicodeString: 0,\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    ByteArray: 1,\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    Bool: 2,\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DWord: 3,\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    QWord: 4,\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    Word: 5\n};\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexport const TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexport const HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nexport class State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\n// ToDo: use ignore type\nexport class IgnoreObjectState extends State {\n    get(buf, off) {\n        return null;\n    }\n}\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nexport class FilePropertiesObject extends State {\n    get(buf, off) {\n        return {\n            fileId: GUID.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: util.getBit(buf, off + 64, 24),\n                seekable: util.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = GUID.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nexport class StreamPropertiesObject extends State {\n    get(buf, off) {\n        return {\n            streamType: GUID.decodeMediaType(GUID.fromBin(buf, off)),\n            errorCorrectionType: GUID.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = GUID.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nexport class HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            reserved1: GUID.fromBin(buf, off),\n            reserved2: view.getUint16(16, true),\n            extensionDataSize: view.getUint16(18, true)\n        };\n    }\n}\nHeaderExtensionObject.guid = GUID.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        const view = new DataView(buf.buffer, off);\n        return {\n            entryCount: view.getUint16(16, true)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nexport async function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = new Uint8Array(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nexport class ContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        let pos = 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = view.getUint16(i * 2, true);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: parseUnicodeAttr(buf.slice(off + pos, off + end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = GUID.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nexport class ExtendedContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        const attrCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const name = parseUnicodeAttr(buf.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const valueType = view.getUint16(pos, true);\n            pos += 2;\n            const valueLen = view.getUint16(pos, true);\n            pos += 2;\n            const value = buf.slice(off + pos, off + pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = GUID.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nexport class ExtendedStreamPropertiesObjectState extends State {\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: view.getInt32(12, true),\n            bufferSize: view.getInt32(16, true),\n            initialBufferFullness: view.getInt32(20, true),\n            alternateDataBitrate: view.getInt32(24, true),\n            alternateBufferSize: view.getInt32(28, true),\n            alternateInitialBufferFullness: view.getInt32(32, true),\n            maximumObjectSize: view.getInt32(36, true),\n            flags: {\n                reliableFlag: util.getBit(buf, off + 40, 0),\n                seekableFlag: util.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: view.getInt16(42, true),\n            streamLanguageId: view.getInt16(44, true),\n            averageTimePerFrame: view.getInt32(52, true),\n            streamNameCount: view.getInt32(54, true),\n            payloadExtensionSystems: view.getInt32(56, true),\n            streamNames: [], // ToDo\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = GUID.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nexport class MetadataObjectState extends State {\n    get(uint8Array, off) {\n        const tags = [];\n        const view = new DataView(uint8Array.buffer, off);\n        const descriptionRecordsCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const dataType = view.getUint16(pos, true);\n            pos += 2;\n            const dataLen = view.getUint32(pos, true);\n            pos += 4;\n            const name = parseUnicodeAttr(uint8Array.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const data = uint8Array.slice(off + pos, off + pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = GUID.MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nexport class MetadataLibraryObjectState extends MetadataObjectState {\n}\nMetadataLibraryObjectState.guid = GUID.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nexport class WmPictureToken {\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const view = new DataView(buffer.buffer, offset);\n        const typeId = view.getUint8(0);\n        const size = view.getInt32(1, true);\n        let index = 5;\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const format = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const description = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        return {\n            type: AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\n//# sourceMappingURL=AsfObject.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/asf/AsfParser.js"],"sourcesContent":["import initDebug from 'debug';\nimport { TrackType } from '../type.js';\nimport GUID from './GUID.js';\nimport * as AsfObject from './AsfObject.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { AsfContentParseError } from './AsfObject.js';\nconst debug = initDebug('music-metadata:parser:ASF');\nconst headerType = 'asf';\n/**\n * Windows Media Metadata Usage Guidelines\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nexport class AsfParser extends BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);\n        if (!header.objectId.equals(GUID.HeaderObject)) {\n            throw new AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\n        }\n        try {\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\n        }\n        catch (err) {\n            debug('Error while parsing ASF: %s', err);\n        }\n    }\n    async parseObjectHeader(numberOfObjectHeaders) {\n        let tags;\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            // Parse data part of the ASF Object\n            debug('header GUID=%s', header.objectId.str);\n            switch (header.objectId.str) {\n                case AsfObject.FilePropertiesObject.guid.str: { // 3.2\n                    const fpo = await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(header));\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\n                    break;\n                }\n                case AsfObject.StreamPropertiesObject.guid.str: { // 3.3\n                    const spo = await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(header));\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\n                    break;\n                }\n                case AsfObject.HeaderExtensionObject.guid.str: { // 3.4\n                    const extHeader = await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject());\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\n                    break;\n                }\n                case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\n                    tags = await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n                    tags = await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case GUID.CodecListObject.str: {\n                    const codecs = await AsfObject.readCodecEntries(this.tokenizer);\n                    codecs.forEach(codec => {\n                        this.metadata.addStreamInfo({\n                            type: codec.type.videoCodec ? TrackType.video : TrackType.audio,\n                            codecName: codec.codecName\n                        });\n                    });\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\n                    this.metadata.setFormat('codec', audioCodecs);\n                    break;\n                }\n                case GUID.StreamBitratePropertiesObject.str:\n                    // ToDo?\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    debug('Padding: %s bytes', header.objectSize - AsfObject.HeaderObjectToken.len);\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n            }\n        } while (--numberOfObjectHeaders);\n        // done\n    }\n    async addTags(tags) {\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\n    }\n    async parseExtensionObject(extensionSize) {\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            const remaining = header.objectSize - AsfObject.HeaderObjectToken.len;\n            // Parse data part of the ASF Object\n            switch (header.objectId.str) {\n                case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n                    // ToDo: extended stream header properties are ignored\n                    await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(header));\n                    break;\n                case AsfObject.MetadataObjectState.guid.str: { // 4.7\n                    const moTags = await this.tokenizer.readToken(new AsfObject.MetadataObjectState(header));\n                    await this.addTags(moTags);\n                    break;\n                }\n                case AsfObject.MetadataLibraryObjectState.guid.str: { // 4.8\n                    const mlTags = await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(header));\n                    await this.addTags(mlTags);\n                    break;\n                }\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.CompatibilityObject.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.ASF_Index_Placeholder_Object.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n                    break;\n            }\n            extensionSize -= header.objectSize;\n        } while (extensionSize > 0);\n    }\n}\n//# sourceMappingURL=AsfParser.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}