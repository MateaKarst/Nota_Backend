{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/lib/supabase.ts"],"sourcesContent":["// src/lib/supabase.ts\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nexport const supabase = createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n);\r\n\r\nexport const supabaseAdmin = createClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.SUPABASE_SERVICE_ROLE_KEY!\r\n);\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;AAEO,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD;AAK5B,MAAM,gBAAgB,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,gFAEpC,QAAQ,GAAG,CAAC,yBAAyB","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/utils/cors.ts"],"sourcesContent":["// src/utils/cors.ts\r\nimport { NextResponse } from 'next/server'\r\n\r\nconst allowedOrigins = [\r\n    // localhost browser\r\n    'http://localhost:3000',\r\n    'http://localhost:3001',\r\n    'http://localhost:3002',\r\n\r\n    // vio n mk network?\r\n    'http://192.168.1.38:3000',\r\n    'http://192.168.1.38:3001',\r\n    'http://192.168.1.38:3002',\r\n\r\n    // app sites\r\n    'https://nota-community.netlify.app',\r\n    'https://nota-backend-delta.vercel.app'\r\n]\r\n\r\nexport function handlePreflight(request: Request): NextResponse {\r\n    const origin = request.headers.get('origin') || '';\r\n    const headers: Record<string, string> = {\r\n        'Access-Control-Allow-Methods': 'GET, PATCH, POST, PUT, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization, x-refresh-token, x-user-id',\r\n        'Access-Control-Allow-Credentials': 'true',\r\n    };\r\n\r\n    if (allowedOrigins.includes(origin)) {\r\n        headers['Access-Control-Allow-Origin'] = origin;\r\n    }\r\n\r\n    return new NextResponse(null, {\r\n        status: 204,\r\n        headers,\r\n    });\r\n}\r\n\r\nexport function addCorsHeaders(\r\n    request: Request,\r\n    response: NextResponse\r\n): NextResponse {\r\n    const origin = request.headers.get('origin') || ''\r\n    if (allowedOrigins.includes(origin)) {\r\n        response.headers.set('Access-Control-Allow-Origin', origin)\r\n        response.headers.set('Access-Control-Allow-Credentials', 'true')\r\n    }\r\n    return response\r\n}"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;;AAEA,MAAM,iBAAiB;IACnB,oBAAoB;IACpB;IACA;IACA;IAEA,oBAAoB;IACpB;IACA;IACA;IAEA,YAAY;IACZ;IACA;CACH;AAEM,SAAS,gBAAgB,OAAgB;IAC5C,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAChD,MAAM,UAAkC;QACpC,gCAAgC;QAChC,gCAAgC;QAChC,oCAAoC;IACxC;IAEA,IAAI,eAAe,QAAQ,CAAC,SAAS;QACjC,OAAO,CAAC,8BAA8B,GAAG;IAC7C;IAEA,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,MAAM;QAC1B,QAAQ;QACR;IACJ;AACJ;AAEO,SAAS,eACZ,OAAgB,EAChB,QAAsB;IAEtB,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;IAChD,IAAI,eAAe,QAAQ,CAAC,SAAS;QACjC,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B;QACpD,SAAS,OAAO,CAAC,GAAG,CAAC,oCAAoC;IAC7D;IACA,OAAO;AACX","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/app/api/auth/login/route.ts"],"sourcesContent":["// src/app/api/auth/login-js/route.ts\r\nimport { supabase } from '@/lib/supabase'\r\nimport { NextResponse } from 'next/server'\r\nimport { addCorsHeaders, handlePreflight } from '@/utils/cors'\r\n\r\nexport async function OPTIONS(request: Request) {\r\n    return handlePreflight(request);\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n    const { email, password } = await request.json();\r\n    const { data, error } = await supabase.auth.signInWithPassword({ email, password });\r\n\r\n    if (error || !data.session) {\r\n        const errorResponse = NextResponse.json(\r\n            { message: error?.message || 'Login failed' },\r\n            { status: 401 }\r\n        );\r\n        return addCorsHeaders(request, errorResponse);\r\n    }\r\n\r\n    const accessToken = data.session.access_token;\r\n    const refreshToken = data.session.refresh_token;\r\n\r\n    const response = NextResponse.json({\r\n        message: 'Logged in',\r\n        user: {\r\n            id:data.user?.id,\r\n            email: data.user?.email,\r\n            name: data.user?.user_metadata?.full_name || '',\r\n            access_token: accessToken,\r\n            refresh_token: refreshToken,\r\n        },\r\n    });\r\n\r\n    // Set cookies AFTER response is created\r\n    response.cookies.set('access_token', accessToken, {\r\n        httpOnly: true,\r\n        sameSite: 'lax',\r\n        secure: true, // set to false in dev if needed\r\n        path: '/',\r\n        maxAge: 60 * 60 * 24 * 7, // 7 days\r\n    });\r\n\r\n    response.cookies.set('refresh_token', refreshToken, {\r\n        httpOnly: true,\r\n        sameSite: 'lax',\r\n        secure: true, // set to false in dev if needed\r\n        path: '/',\r\n        maxAge: 60 * 60 * 24 * 30, // 30 days\r\n    });\r\n\r\n    return addCorsHeaders(request, response);\r\n}\r\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;AACrC;AACA;AACA;;;;AAEO,eAAe,QAAQ,OAAgB;IAC1C,OAAO,CAAA,GAAA,sHAAA,CAAA,kBAAe,AAAD,EAAE;AAC3B;AAEO,eAAe,KAAK,OAAgB;IACvC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,QAAQ,IAAI;IAC9C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;QAAE;QAAO;IAAS;IAEjF,IAAI,SAAS,CAAC,KAAK,OAAO,EAAE;QACxB,MAAM,gBAAgB,gIAAA,CAAA,eAAY,CAAC,IAAI,CACnC;YAAE,SAAS,OAAO,WAAW;QAAe,GAC5C;YAAE,QAAQ;QAAI;QAElB,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE,SAAS;IACnC;IAEA,MAAM,cAAc,KAAK,OAAO,CAAC,YAAY;IAC7C,MAAM,eAAe,KAAK,OAAO,CAAC,aAAa;IAE/C,MAAM,WAAW,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;QACT,MAAM;YACF,IAAG,KAAK,IAAI,EAAE;YACd,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,KAAK,IAAI,EAAE,eAAe,aAAa;YAC7C,cAAc;YACd,eAAe;QACnB;IACJ;IAEA,wCAAwC;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,gBAAgB,aAAa;QAC9C,UAAU;QACV,UAAU;QACV,QAAQ;QACR,MAAM;QACN,QAAQ,KAAK,KAAK,KAAK;IAC3B;IAEA,SAAS,OAAO,CAAC,GAAG,CAAC,iBAAiB,cAAc;QAChD,UAAU;QACV,UAAU;QACV,QAAQ;QACR,MAAM;QACN,QAAQ,KAAK,KAAK,KAAK;IAC3B;IAEA,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE,SAAS;AACnC","debugId":null}}]
}