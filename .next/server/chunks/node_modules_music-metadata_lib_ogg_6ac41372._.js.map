{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/vorbis/VorbisDecoder.js"],"sourcesContent":["import * as Token from 'token-types';\nexport class VorbisDecoder {\n    constructor(data, offset) {\n        this.data = data;\n        this.offset = offset;\n    }\n    readInt32() {\n        const value = Token.UINT32_LE.get(this.data, this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readStringUtf8() {\n        const len = this.readInt32();\n        const value = new TextDecoder('utf-8').decode(this.data.subarray(this.offset, this.offset + len));\n        this.offset += len;\n        return value;\n    }\n    parseUserComment() {\n        const offset0 = this.offset;\n        const v = this.readStringUtf8();\n        const idx = v.indexOf('=');\n        return {\n            key: v.slice(0, idx).toUpperCase(),\n            value: v.slice(idx + 1),\n            len: this.offset - offset0\n        };\n    }\n}\n//# sourceMappingURL=VorbisDecoder.js.map"],"names":[],"mappings":";;;AAAA;;AACO,MAAM;IACT,YAAY,IAAI,EAAE,MAAM,CAAE;QACtB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,MAAM,GAAG;IAClB;IACA,YAAY;QACR,MAAM,QAAQ,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM;QACxD,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,iBAAiB;QACb,MAAM,MAAM,IAAI,CAAC,SAAS;QAC1B,MAAM,QAAQ,IAAI,YAAY,SAAS,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG;QAC5F,IAAI,CAAC,MAAM,IAAI;QACf,OAAO;IACX;IACA,mBAAmB;QACf,MAAM,UAAU,IAAI,CAAC,MAAM;QAC3B,MAAM,IAAI,IAAI,CAAC,cAAc;QAC7B,MAAM,MAAM,EAAE,OAAO,CAAC;QACtB,OAAO;YACH,KAAK,EAAE,KAAK,CAAC,GAAG,KAAK,WAAW;YAChC,OAAO,EAAE,KAAK,CAAC,MAAM;YACrB,KAAK,IAAI,CAAC,MAAM,GAAG;QACvB;IACJ;AACJ,EACA,yCAAyC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/vorbis/Vorbis.js"],"sourcesContent":["import * as Token from 'token-types';\nimport { AttachedPictureType } from '../../id3v2/ID3v2Token.js';\n/**\n * Parse the METADATA_BLOCK_PICTURE\n * Ref: https://wiki.xiph.org/VorbisComment#METADATA_BLOCK_PICTURE\n * Ref: https://xiph.org/flac/format.html#metadata_block_picture\n * // ToDo: move to ID3 / APIC?\n */\nexport class VorbisPictureToken {\n    static fromBase64(base64str) {\n        return VorbisPictureToken.fromBuffer(Uint8Array.from(atob(base64str), c => c.charCodeAt(0)));\n    }\n    static fromBuffer(buffer) {\n        const pic = new VorbisPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const type = AttachedPictureType[Token.UINT32_BE.get(buffer, offset)];\n        offset += 4;\n        const mimeLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const format = new Token.StringType(mimeLen, 'utf-8').get(buffer, offset);\n        offset += mimeLen;\n        const descLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const description = new Token.StringType(descLen, 'utf-8').get(buffer, offset);\n        offset += descLen;\n        const width = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const height = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const colour_depth = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const indexed_color = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const picDataLen = Token.UINT32_BE.get(buffer, offset);\n        offset += 4;\n        const data = Uint8Array.from(buffer.slice(offset, offset + picDataLen));\n        return {\n            type,\n            format,\n            description,\n            width,\n            height,\n            colour_depth,\n            indexed_color,\n            data\n        };\n    }\n}\n/**\n * Comment header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-620004.2.1\n */\nexport const CommonHeader = {\n    len: 7,\n    get: (buf, off) => {\n        return {\n            packetType: Token.UINT8.get(buf, off),\n            vorbis: new Token.StringType(6, 'ascii').get(buf, off + 1)\n        };\n    }\n};\n/**\n * Identification header decoder\n * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-630004.2.2\n */\nexport const IdentificationHeader = {\n    len: 23,\n    get: (uint8Array, off) => {\n        return {\n            version: Token.UINT32_LE.get(uint8Array, off + 0),\n            channelMode: Token.UINT8.get(uint8Array, off + 4),\n            sampleRate: Token.UINT32_LE.get(uint8Array, off + 5),\n            bitrateMax: Token.UINT32_LE.get(uint8Array, off + 9),\n            bitrateNominal: Token.UINT32_LE.get(uint8Array, off + 13),\n            bitrateMin: Token.UINT32_LE.get(uint8Array, off + 17)\n        };\n    }\n};\n//# sourceMappingURL=Vorbis.js.map"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAOO,MAAM;IACT,OAAO,WAAW,SAAS,EAAE;QACzB,OAAO,mBAAmB,UAAU,CAAC,WAAW,IAAI,CAAC,KAAK,YAAY,CAAA,IAAK,EAAE,UAAU,CAAC;IAC5F;IACA,OAAO,WAAW,MAAM,EAAE;QACtB,MAAM,MAAM,IAAI,mBAAmB,OAAO,MAAM;QAChD,OAAO,IAAI,GAAG,CAAC,QAAQ;IAC3B;IACA,YAAY,GAAG,CAAE;QACb,IAAI,CAAC,GAAG,GAAG;IACf;IACA,IAAI,MAAM,EAAE,MAAM,EAAE;QAChB,MAAM,OAAO,iKAAA,CAAA,sBAAmB,CAAC,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ,QAAQ;QACrE,UAAU;QACV,MAAM,UAAU,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAC5C,UAAU;QACV,MAAM,SAAS,IAAI,gJAAA,CAAA,aAAgB,CAAC,SAAS,SAAS,GAAG,CAAC,QAAQ;QAClE,UAAU;QACV,MAAM,UAAU,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAC5C,UAAU;QACV,MAAM,cAAc,IAAI,gJAAA,CAAA,aAAgB,CAAC,SAAS,SAAS,GAAG,CAAC,QAAQ;QACvE,UAAU;QACV,MAAM,QAAQ,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAC1C,UAAU;QACV,MAAM,SAAS,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAC3C,UAAU;QACV,MAAM,eAAe,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QACjD,UAAU;QACV,MAAM,gBAAgB,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAClD,UAAU;QACV,MAAM,aAAa,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,QAAQ;QAC/C,UAAU;QACV,MAAM,OAAO,WAAW,IAAI,CAAC,OAAO,KAAK,CAAC,QAAQ,SAAS;QAC3D,OAAO;YACH;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACJ;IACJ;AACJ;AAKO,MAAM,eAAe;IACxB,KAAK;IACL,KAAK,CAAC,KAAK;QACP,OAAO;YACH,YAAY,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK;YACjC,QAAQ,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,KAAK,MAAM;QAC5D;IACJ;AACJ;AAKO,MAAM,uBAAuB;IAChC,KAAK;IACL,KAAK,CAAC,YAAY;QACd,OAAO;YACH,SAAS,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,YAAY,MAAM;YAC/C,aAAa,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,YAAY,MAAM;YAC/C,YAAY,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,YAAY,MAAM;YAClD,YAAY,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,YAAY,MAAM;YAClD,gBAAgB,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,YAAY,MAAM;YACtD,YAAY,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,YAAY,MAAM;QACtD;IACJ;AACJ,GACA,kCAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/vorbis/VorbisParser.js"],"sourcesContent":["import * as Token from 'token-types';\nimport debugInit from 'debug';\nimport { VorbisDecoder } from './VorbisDecoder.js';\nimport { CommonHeader, IdentificationHeader, VorbisPictureToken } from './Vorbis.js';\nimport { makeUnexpectedFileContentError } from '../../ParseError.js';\nconst debug = debugInit('music-metadata:parser:ogg:vorbis1');\nexport class VorbisContentError extends makeUnexpectedFileContentError('Vorbis') {\n}\n/**\n * Vorbis 1 Parser.\n * Used by OggParser\n */\nexport class VorbisParser {\n    constructor(metadata, options) {\n        this.pageSegments = [];\n        this.metadata = metadata;\n        this.options = options;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            this.parseFirstPage(header, pageData);\n        }\n        else {\n            if (header.headerType.continued) {\n                if (this.pageSegments.length === 0) {\n                    throw new VorbisContentError('Cannot continue on previous page');\n                }\n                this.pageSegments.push(pageData);\n            }\n            if (header.headerType.lastPage || !header.headerType.continued) {\n                // Flush page segments\n                if (this.pageSegments.length > 0) {\n                    const fullPage = VorbisParser.mergeUint8Arrays(this.pageSegments);\n                    await this.parseFullPage(fullPage);\n                }\n                // Reset page segments\n                this.pageSegments = header.headerType.lastPage ? [] : [pageData];\n            }\n        }\n        if (header.headerType.lastPage) {\n            this.calculateDuration(header);\n        }\n    }\n    static mergeUint8Arrays(arrays) {\n        const totalSize = arrays.reduce((acc, e) => acc + e.length, 0);\n        const merged = new Uint8Array(totalSize);\n        arrays.forEach((array, i, _arrays) => {\n            const offset = _arrays.slice(0, i).reduce((acc, e) => acc + e.length, 0);\n            merged.set(array, offset);\n        });\n        return merged;\n    }\n    async flush() {\n        await this.parseFullPage(VorbisParser.mergeUint8Arrays(this.pageSegments));\n    }\n    async parseUserComment(pageData, offset) {\n        const decoder = new VorbisDecoder(pageData, offset);\n        const tag = decoder.parseUserComment();\n        await this.addTag(tag.key, tag.value);\n        return tag.len;\n    }\n    async addTag(id, value) {\n        if (id === 'METADATA_BLOCK_PICTURE' && (typeof value === 'string')) {\n            if (this.options.skipCovers) {\n                debug(\"Ignore picture\");\n                return;\n            }\n            value = VorbisPictureToken.fromBase64(value);\n            debug(`Push picture: id=${id}, format=${value.format}`);\n        }\n        else {\n            debug(`Push tag: id=${id}, value=${value}`);\n        }\n        await this.metadata.addTag('vorbis', id, value);\n    }\n    calculateDuration(header) {\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            this.metadata.setFormat('numberOfSamples', header.absoluteGranulePosition);\n            this.metadata.setFormat('duration', header.absoluteGranulePosition / this.metadata.format.sampleRate);\n        }\n    }\n    /**\n     * Parse first Ogg/Vorbis page\n     * @param header\n     * @param pageData\n     */\n    parseFirstPage(header, pageData) {\n        this.metadata.setFormat('codec', 'Vorbis I');\n        debug('Parse first page');\n        // Parse  Vorbis common header\n        const commonHeader = CommonHeader.get(pageData, 0);\n        if (commonHeader.vorbis !== 'vorbis')\n            throw new VorbisContentError('Metadata does not look like Vorbis');\n        if (commonHeader.packetType === 1) {\n            const idHeader = IdentificationHeader.get(pageData, CommonHeader.len);\n            this.metadata.setFormat('sampleRate', idHeader.sampleRate);\n            this.metadata.setFormat('bitrate', idHeader.bitrateNominal);\n            this.metadata.setFormat('numberOfChannels', idHeader.channelMode);\n            debug('sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s', idHeader.sampleRate, idHeader.bitrateNominal, idHeader.channelMode);\n        }\n        else\n            throw new VorbisContentError('First Ogg page should be type 1: the identification header');\n    }\n    async parseFullPage(pageData) {\n        // New page\n        const commonHeader = CommonHeader.get(pageData, 0);\n        debug('Parse full page: type=%s, byteLength=%s', commonHeader.packetType, pageData.byteLength);\n        switch (commonHeader.packetType) {\n            case 3: //  type 3: comment header\n                return this.parseUserCommentList(pageData, CommonHeader.len);\n            case 1: // type 1: the identification header\n            case 5: // type 5: setup header type\n                break; // ignore\n        }\n    }\n    /**\n     * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-840005.2\n     */\n    async parseUserCommentList(pageData, offset) {\n        const strLen = Token.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        // const vendorString = new Token.StringType(strLen, 'utf-8').get(pageData, offset);\n        offset += strLen;\n        let userCommentListLength = Token.UINT32_LE.get(pageData, offset);\n        offset += 4;\n        while (userCommentListLength-- > 0) {\n            offset += (await this.parseUserComment(pageData, offset));\n        }\n    }\n}\n//# sourceMappingURL=VorbisParser.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/opus/Opus.js"],"sourcesContent":["import * as Token from 'token-types';\nimport { makeUnexpectedFileContentError } from '../../ParseError.js';\nexport class OpusContentError extends makeUnexpectedFileContentError('Opus') {\n}\n/**\n * Opus ID Header parser\n * Ref: https://wiki.xiph.org/OggOpus#ID_Header\n */\nexport class IdHeader {\n    constructor(len) {\n        if (len < 19) {\n            throw new OpusContentError('ID-header-page 0 should be at least 19 bytes long');\n        }\n        this.len = len;\n    }\n    get(buf, off) {\n        return {\n            magicSignature: new Token.StringType(8, 'ascii').get(buf, off + 0),\n            version: Token.UINT8.get(buf, off + 8),\n            channelCount: Token.UINT8.get(buf, off + 9),\n            preSkip: Token.UINT16_LE.get(buf, off + 10),\n            inputSampleRate: Token.UINT32_LE.get(buf, off + 12),\n            outputGain: Token.UINT16_LE.get(buf, off + 16),\n            channelMapping: Token.UINT8.get(buf, off + 18)\n        };\n    }\n}\n//# sourceMappingURL=Opus.js.map"],"names":[],"mappings":";;;;AAAA;AACA;;;AACO,MAAM,yBAAyB,CAAA,GAAA,wJAAA,CAAA,iCAA8B,AAAD,EAAE;AACrE;AAKO,MAAM;IACT,YAAY,GAAG,CAAE;QACb,IAAI,MAAM,IAAI;YACV,MAAM,IAAI,iBAAiB;QAC/B;QACA,IAAI,CAAC,GAAG,GAAG;IACf;IACA,IAAI,GAAG,EAAE,GAAG,EAAE;QACV,OAAO;YACH,gBAAgB,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,KAAK,MAAM;YAChE,SAAS,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;YACpC,cAAc,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;YACzC,SAAS,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YACxC,iBAAiB,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YAChD,YAAY,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YAC3C,gBAAgB,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;QAC/C;IACJ;AACJ,EACA,gCAAgC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/opus/OpusParser.js"],"sourcesContent":["import * as Token from 'token-types';\nimport { VorbisParser } from '../vorbis/VorbisParser.js';\nimport * as Opus from './Opus.js';\nimport { OpusContentError } from './Opus.js';\n/**\n * Opus parser\n * Internet Engineering Task Force (IETF) - RFC 6716\n * Used by OggParser\n */\nexport class OpusParser extends VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.idHeader = null;\n        this.lastPos = -1;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Parse first Opus Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(header, pageData) {\n        this.metadata.setFormat('codec', 'Opus');\n        // Parse Opus ID Header\n        this.idHeader = new Opus.IdHeader(pageData.length).get(pageData, 0);\n        if (this.idHeader.magicSignature !== \"OpusHead\")\n            throw new OpusContentError(\"Illegal ogg/Opus magic-signature\");\n        this.metadata.setFormat('sampleRate', this.idHeader.inputSampleRate);\n        this.metadata.setFormat('numberOfChannels', this.idHeader.channelCount);\n    }\n    async parseFullPage(pageData) {\n        const magicSignature = new Token.StringType(8, 'ascii').get(pageData, 0);\n        switch (magicSignature) {\n            case 'OpusTags':\n                await this.parseUserCommentList(pageData, 8);\n                this.lastPos = this.tokenizer.position - pageData.length;\n                break;\n            default:\n                break;\n        }\n    }\n    calculateDuration(header) {\n        if (this.metadata.format.sampleRate && header.absoluteGranulePosition >= 0) {\n            // Calculate duration\n            const pos_48bit = header.absoluteGranulePosition - this.idHeader.preSkip;\n            this.metadata.setFormat('numberOfSamples', pos_48bit);\n            this.metadata.setFormat('duration', pos_48bit / 48000);\n            if (this.lastPos !== -1 && this.tokenizer.fileInfo.size && this.metadata.format.duration) {\n                const dataSize = this.tokenizer.fileInfo.size - this.lastPos;\n                this.metadata.setFormat('bitrate', 8 * dataSize / this.metadata.format.duration);\n            }\n        }\n    }\n}\n//# sourceMappingURL=OpusParser.js.map"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;;AAOO,MAAM,mBAAmB,2KAAA,CAAA,eAAY;IACxC,YAAY,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAE;QACtC,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG;IACrB;IACA;;;;KAIC,GACD,eAAe,MAAM,EAAE,QAAQ,EAAE;QAC7B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;QACjC,uBAAuB;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,iKAAA,CAAA,WAAa,CAAC,SAAS,MAAM,EAAE,GAAG,CAAC,UAAU;QACjE,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,KAAK,YACjC,MAAM,IAAI,iKAAA,CAAA,mBAAgB,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC,eAAe;QACnE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,YAAY;IAC1E;IACA,MAAM,cAAc,QAAQ,EAAE;QAC1B,MAAM,iBAAiB,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,UAAU;QACtE,OAAQ;YACJ,KAAK;gBACD,MAAM,IAAI,CAAC,oBAAoB,CAAC,UAAU;gBAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,MAAM;gBACxD;YACJ;gBACI;QACR;IACJ;IACA,kBAAkB,MAAM,EAAE;QACtB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,OAAO,uBAAuB,IAAI,GAAG;YACxE,qBAAqB;YACrB,MAAM,YAAY,OAAO,uBAAuB,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO;YACxE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,mBAAmB;YAC3C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,YAAY;YAChD,IAAI,IAAI,CAAC,OAAO,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE;gBACtF,MAAM,WAAW,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO;gBAC5D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,IAAI,WAAW,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ;YACnF;QACJ;IACJ;AACJ,EACA,sCAAsC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/speex/Speex.js"],"sourcesContent":["import * as Token from 'token-types';\nimport * as util from '../../common/Util.js';\n/**\n * Speex Header Packet\n * Ref: https://www.speex.org/docs/manual/speex-manual/node8.html#SECTION00830000000000000000\n */\nexport const Header = {\n    len: 80,\n    get: (buf, off) => {\n        return {\n            speex: new Token.StringType(8, 'ascii').get(buf, off + 0),\n            version: util.trimRightNull(new Token.StringType(20, 'ascii').get(buf, off + 8)),\n            version_id: Token.INT32_LE.get(buf, off + 28),\n            header_size: Token.INT32_LE.get(buf, off + 32),\n            rate: Token.INT32_LE.get(buf, off + 36),\n            mode: Token.INT32_LE.get(buf, off + 40),\n            mode_bitstream_version: Token.INT32_LE.get(buf, off + 44),\n            nb_channels: Token.INT32_LE.get(buf, off + 48),\n            bitrate: Token.INT32_LE.get(buf, off + 52),\n            frame_size: Token.INT32_LE.get(buf, off + 56),\n            vbr: Token.INT32_LE.get(buf, off + 60),\n            frames_per_packet: Token.INT32_LE.get(buf, off + 64),\n            extra_headers: Token.INT32_LE.get(buf, off + 68),\n            reserved1: Token.INT32_LE.get(buf, off + 72),\n            reserved2: Token.INT32_LE.get(buf, off + 76)\n        };\n    }\n};\n//# sourceMappingURL=Speex.js.map"],"names":[],"mappings":";;;AAAA;AACA;;;AAKO,MAAM,SAAS;IAClB,KAAK;IACL,KAAK,CAAC,KAAK;QACP,OAAO;YACH,OAAO,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,KAAK,MAAM;YACvD,SAAS,CAAA,GAAA,4JAAA,CAAA,gBAAkB,AAAD,EAAE,IAAI,gJAAA,CAAA,aAAgB,CAAC,IAAI,SAAS,GAAG,CAAC,KAAK,MAAM;YAC7E,YAAY,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YAC1C,aAAa,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YAC3C,MAAM,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACpC,MAAM,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACpC,wBAAwB,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACtD,aAAa,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YAC3C,SAAS,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACvC,YAAY,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YAC1C,KAAK,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACnC,mBAAmB,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACjD,eAAe,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YAC7C,WAAW,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;YACzC,WAAW,gJAAA,CAAA,WAAc,CAAC,GAAG,CAAC,KAAK,MAAM;QAC7C;IACJ;AACJ,GACA,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/speex/SpeexParser.js"],"sourcesContent":["import initDebug from 'debug';\nimport { VorbisParser } from '../vorbis/VorbisParser.js';\nimport * as Speex from './Speex.js';\nconst debug = initDebug('music-metadata:parser:ogg:speex');\n/**\n * Speex, RFC 5574\n * Ref:\n * - https://www.speex.org/docs/manual/speex-manual/\n * - https://tools.ietf.org/html/rfc5574\n */\nexport class SpeexParser extends VorbisParser {\n    constructor(metadata, options, tokenizer) {\n        super(metadata, options);\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Parse first Speex Ogg page\n     * @param {IPageHeader} header\n     * @param {Uint8Array} pageData\n     */\n    parseFirstPage(header, pageData) {\n        debug('First Ogg/Speex page');\n        const speexHeader = Speex.Header.get(pageData, 0);\n        this.metadata.setFormat('codec', `Speex ${speexHeader.version}`);\n        this.metadata.setFormat('numberOfChannels', speexHeader.nb_channels);\n        this.metadata.setFormat('sampleRate', speexHeader.rate);\n        if (speexHeader.bitrate !== -1) {\n            this.metadata.setFormat('bitrate', speexHeader.bitrate);\n        }\n    }\n}\n//# sourceMappingURL=SpeexParser.js.map"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,QAAQ,CAAA,GAAA,uIAAA,CAAA,UAAS,AAAD,EAAE;AAOjB,MAAM,oBAAoB,2KAAA,CAAA,eAAY;IACzC,YAAY,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAE;QACtC,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,SAAS,GAAG;IACrB;IACA;;;;KAIC,GACD,eAAe,MAAM,EAAE,QAAQ,EAAE;QAC7B,MAAM;QACN,MAAM,cAAc,mKAAA,CAAA,SAAY,CAAC,GAAG,CAAC,UAAU;QAC/C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,YAAY,OAAO,EAAE;QAC/D,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,YAAY,WAAW;QACnE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,YAAY,IAAI;QACtD,IAAI,YAAY,OAAO,KAAK,CAAC,GAAG;YAC5B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,YAAY,OAAO;QAC1D;IACJ;AACJ,EACA,uCAAuC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/theora/Theora.js"],"sourcesContent":["import * as Token from 'token-types';\n/**\n * 6.2 Identification Header\n * Ref: https://theora.org/doc/Theora.pdf: 6.2 Identification Header Decode\n */\nexport const IdentificationHeader = {\n    len: 42,\n    get: (buf, off) => {\n        return {\n            id: new Token.StringType(7, 'ascii').get(buf, off),\n            vmaj: Token.UINT8.get(buf, off + 7),\n            vmin: Token.UINT8.get(buf, off + 8),\n            vrev: Token.UINT8.get(buf, off + 9),\n            vmbw: Token.UINT16_BE.get(buf, off + 10),\n            vmbh: Token.UINT16_BE.get(buf, off + 17),\n            nombr: Token.UINT24_BE.get(buf, off + 37),\n            nqual: Token.UINT8.get(buf, off + 40)\n        };\n    }\n};\n//# sourceMappingURL=Theora.js.map"],"names":[],"mappings":";;;AAAA;;AAKO,MAAM,uBAAuB;IAChC,KAAK;IACL,KAAK,CAAC,KAAK;QACP,OAAO;YACH,IAAI,IAAI,gJAAA,CAAA,aAAgB,CAAC,GAAG,SAAS,GAAG,CAAC,KAAK;YAC9C,MAAM,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;YACjC,MAAM,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;YACjC,MAAM,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;YACjC,MAAM,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YACrC,MAAM,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YACrC,OAAO,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,KAAK,MAAM;YACtC,OAAO,gJAAA,CAAA,QAAW,CAAC,GAAG,CAAC,KAAK,MAAM;QACtC;IACJ;AACJ,GACA,kCAAkC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/theora/TheoraParser.js"],"sourcesContent":["import initDebug from 'debug';\nimport { IdentificationHeader } from './Theora.js';\nconst debug = initDebug('music-metadata:parser:ogg:theora');\n/**\n * Ref:\n * - https://theora.org/doc/Theora.pdf\n */\nexport class TheoraParser {\n    constructor(metadata, options, tokenizer) {\n        this.metadata = metadata;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     * Vorbis 1 parser\n     * @param header Ogg Page Header\n     * @param pageData Page data\n     */\n    async parsePage(header, pageData) {\n        if (header.headerType.firstPage) {\n            await this.parseFirstPage(header, pageData);\n        }\n    }\n    async flush() {\n        debug('flush');\n    }\n    calculateDuration(header) {\n        debug('duration calculation not implemented');\n    }\n    /**\n     * Parse first Theora Ogg page. the initial identification header packet\n     * @param {IPageHeader} header\n     * @param {Buffer} pageData\n     */\n    async parseFirstPage(header, pageData) {\n        debug('First Ogg/Theora page');\n        this.metadata.setFormat('codec', 'Theora');\n        const idHeader = IdentificationHeader.get(pageData, 0);\n        this.metadata.setFormat('bitrate', idHeader.nombr);\n    }\n}\n//# sourceMappingURL=TheoraParser.js.map"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,QAAQ,CAAA,GAAA,uIAAA,CAAA,UAAS,AAAD,EAAE;AAKjB,MAAM;IACT,YAAY,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAE;QACtC,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,SAAS,GAAG;IACrB;IACA;;;;KAIC,GACD,MAAM,UAAU,MAAM,EAAE,QAAQ,EAAE;QAC9B,IAAI,OAAO,UAAU,CAAC,SAAS,EAAE;YAC7B,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ;QACtC;IACJ;IACA,MAAM,QAAQ;QACV,MAAM;IACV;IACA,kBAAkB,MAAM,EAAE;QACtB,MAAM;IACV;IACA;;;;KAIC,GACD,MAAM,eAAe,MAAM,EAAE,QAAQ,EAAE;QACnC,MAAM;QACN,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS;QACjC,MAAM,WAAW,qKAAA,CAAA,uBAAoB,CAAC,GAAG,CAAC,UAAU;QACpD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,SAAS,KAAK;IACrD;AACJ,EACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ogg/OggParser.js"],"sourcesContent":["import * as Token from 'token-types';\nimport { EndOfStreamError } from 'strtok3';\nimport initDebug from 'debug';\nimport * as util from '../common/Util.js';\nimport { FourCcToken } from '../common/FourCC.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { VorbisParser } from './vorbis/VorbisParser.js';\nimport { OpusParser } from './opus/OpusParser.js';\nimport { SpeexParser } from './speex/SpeexParser.js';\nimport { TheoraParser } from './theora/TheoraParser.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class OggContentError extends makeUnexpectedFileContentError('Ogg') {\n}\nconst debug = initDebug('music-metadata:parser:ogg');\nexport class SegmentTable {\n    static sum(buf, off, len) {\n        const dv = new DataView(buf.buffer, 0);\n        let s = 0;\n        for (let i = off; i < off + len; ++i) {\n            s += dv.getUint8(i);\n        }\n        return s;\n    }\n    constructor(header) {\n        this.len = header.page_segments;\n    }\n    get(buf, off) {\n        return {\n            totalPageSize: SegmentTable.sum(buf, off, this.len)\n        };\n    }\n}\n/**\n * Parser for Ogg logical bitstream framing\n */\nexport class OggParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.header = null;\n        this.pageNumber = 0;\n        this.pageConsumer = null;\n    }\n    /**\n     * Parse page\n     * @returns {Promise<void>}\n     */\n    async parse() {\n        debug('pos=%s, parsePage()', this.tokenizer.position);\n        try {\n            let header;\n            do {\n                header = await this.tokenizer.readToken(OggParser.Header);\n                if (header.capturePattern !== 'OggS')\n                    throw new OggContentError('Invalid Ogg capture pattern');\n                this.metadata.setFormat('container', 'Ogg');\n                this.header = header;\n                this.pageNumber = header.pageSequenceNo;\n                debug('page#=%s, Ogg.id=%s', header.pageSequenceNo, header.capturePattern);\n                const segmentTable = await this.tokenizer.readToken(new SegmentTable(header));\n                debug('totalPageSize=%s', segmentTable.totalPageSize);\n                const pageData = await this.tokenizer.readToken(new Token.Uint8ArrayType(segmentTable.totalPageSize));\n                debug('firstPage=%s, lastPage=%s, continued=%s', header.headerType.firstPage, header.headerType.lastPage, header.headerType.continued);\n                if (header.headerType.firstPage) {\n                    const id = new TextDecoder('ascii').decode(pageData.subarray(0, 7));\n                    switch (id) {\n                        case '\\x01vorbis': // Ogg/Vorbis\n                            debug('Set page consumer to Ogg/Vorbis');\n                            this.pageConsumer = new VorbisParser(this.metadata, this.options);\n                            break;\n                        case 'OpusHea': // Ogg/Opus\n                            debug('Set page consumer to Ogg/Opus');\n                            this.pageConsumer = new OpusParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'Speex  ': // Ogg/Speex\n                            debug('Set page consumer to Ogg/Speex');\n                            this.pageConsumer = new SpeexParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        case 'fishead':\n                        case '\\x00theora': // Ogg/Theora\n                            debug('Set page consumer to Ogg/Theora');\n                            this.pageConsumer = new TheoraParser(this.metadata, this.options, this.tokenizer);\n                            break;\n                        default:\n                            throw new OggContentError(`gg audio-codec not recognized (id=${id})`);\n                    }\n                }\n                await this.pageConsumer.parsePage(header, pageData);\n            } while (!header.headerType.lastPage);\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                if (err instanceof EndOfStreamError) {\n                    this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                    debug(\"End-of-stream\");\n                    this.metadata.addWarning('Last OGG-page is not marked with last-page flag');\n                    if (this.header) {\n                        this.pageConsumer.calculateDuration(this.header);\n                    }\n                }\n                else if (err.message.startsWith('FourCC')) {\n                    if (this.pageNumber > 0) {\n                        // ignore this error: work-around if last OGG-page is not marked with last-page flag\n                        this.metadata.addWarning('Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag');\n                        await this.pageConsumer.flush();\n                    }\n                }\n            }\n            else\n                throw err;\n        }\n    }\n}\nOggParser.Header = {\n    len: 27,\n    get: (buf, off) => {\n        return {\n            capturePattern: FourCcToken.get(buf, off),\n            version: Token.UINT8.get(buf, off + 4),\n            headerType: {\n                continued: util.getBit(buf, off + 5, 0),\n                firstPage: util.getBit(buf, off + 5, 1),\n                lastPage: util.getBit(buf, off + 5, 2)\n            },\n            // packet_flag: Token.UINT8.get(buf, off + 5),\n            absoluteGranulePosition: Number(Token.UINT64_LE.get(buf, off + 6)),\n            streamSerialNumber: Token.UINT32_LE.get(buf, off + 14),\n            pageSequenceNo: Token.UINT32_LE.get(buf, off + 18),\n            pageChecksum: Token.UINT32_LE.get(buf, off + 22),\n            page_segments: Token.UINT8.get(buf, off + 26)\n        };\n    }\n};\n//# sourceMappingURL=OggParser.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}