{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useAppHook } from \"@/context/AppUtils\";\r\nimport { useState } from \"react\";\r\n\r\nconst Navbar = () => {\r\n    const { isLoggedIn, setIsLoggedIn, refreshUser } = useAppHook(); // âœ…\r\n    const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n\r\n    const handleLogout = async () => {\r\n        setIsLoggingOut(true);\r\n        await fetch(\"/api/auth/logout\", { method: \"POST\" });\r\n        await refreshUser(); // update context after logout\r\n        setIsLoggedIn(false);\r\n        setIsLoggingOut(false);\r\n        window.location.href = \"/\"; // force nav\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg px-4\" style={{ backgroundColor: \"#343a40\" }}>\r\n            <Link className=\"navbar-brand fw-bold text-white\" href=\"/\">SupaNext</Link>\r\n\r\n            {isLoggedIn ? (\r\n                <div className=\"ms-auto\">\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/dashboard\">Dashboard</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/profile\">Profile</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/editor\">Editor</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/connections\">Connections</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/messages\">Messages</Link>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={handleLogout}\r\n                        disabled={isLoggingOut}\r\n                    >\r\n                        {isLoggingOut ? \"Logging out...\" : \"Logout\"}\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"ms-auto\">\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/\">Home</Link>\r\n                    <Link className=\"text-white text-decoration-none\" href=\"/auth/login\">Login</Link>\r\n                </div>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,SAAS;IACX,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,aAAU,AAAD,KAAK,IAAI;IACrE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe;QACjB,gBAAgB;QAChB,MAAM,MAAM,oBAAoB;YAAE,QAAQ;QAAO;QACjD,MAAM,eAAe,8BAA8B;QACnD,cAAc;QACd,gBAAgB;QAChB,OAAO,QAAQ,CAAC,IAAI,GAAG,KAAK,YAAY;IAC5C;IAEA,qBACI,8OAAC;QAAI,WAAU;QAA+B,OAAO;YAAE,iBAAiB;QAAU;;0BAC9E,8OAAC,4JAAA,CAAA,UAAI;gBAAC,WAAU;gBAAkC,MAAK;0BAAI;;;;;;YAE1D,2BACG,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAkB;;;;;;kCAC9E,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAgB;;;;;;kCAC5E,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAe;;;;;;kCAC3E,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAoB;;;;;;kCAChF,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAiB;;;;;;kCAC7E,8OAAC;wBACG,WAAU;wBACV,SAAS;wBACT,UAAU;kCAET,eAAe,mBAAmB;;;;;;;;;;;qCAI3C,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAI;;;;;;kCAChE,8OAAC,4JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAkC,MAAK;kCAAc;;;;;;;;;;;;;;;;;;AAKzF;uCAEe","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/app/auth/connections/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Navbar from \"@/components/Navbar\";\r\n\r\ntype ApiResponse = { message?: string; [key: string]: unknown };\r\ntype Connection = {\r\n    id: string,\r\n    user_id: string,\r\n    connection_id: string;\r\n};\r\n\r\nexport default function TestConnectionPage() {\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [connectionUserId, setConnectionUserId] = useState(\"\"); // for creating connection\r\n    const [connectionRecordId, setConnectionRecordId] = useState(\"\"); // for deleting connection\r\n    const [getConnectionsUserId, setGetConnectionsUserId] = useState(\"\"); // for fetching connections\r\n    const [response, setResponse] = useState<ApiResponse | null>(null);\r\n    const [connections, setConnections] = useState<string[] | null>(null);\r\n    const [getConnectionsError, setGetConnectionsError] = useState<string | null>(null);\r\n\r\n    const handleSubmit = async () => {\r\n        setResponse(null);\r\n\r\n        if (!userId || !connectionUserId) {\r\n            setResponse({ message: \"Please provide both User ID and Connection User ID\" });\r\n            return;\r\n        }\r\n\r\n        const res = await fetch(`/api/connections/${userId}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                connection_id: connectionUserId,\r\n            }),\r\n        });\r\n\r\n        const data = await res.json();\r\n        setResponse(data);\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        if (!connectionRecordId) {\r\n            setResponse({ message: \"Please provide a connection record ID to delete.\" });\r\n            return;\r\n        }\r\n\r\n        setResponse(null);\r\n\r\n        const res = await fetch(`/api/connections/${connectionRecordId}`, {\r\n            method: \"DELETE\",\r\n        });\r\n\r\n        const data = await res.json();\r\n        setResponse(data);\r\n    };\r\n\r\n    const handleGetConnections = async () => {\r\n        setConnections(null);\r\n        setGetConnectionsError(null);\r\n\r\n        if (!getConnectionsUserId) {\r\n            setGetConnectionsError(\"Please provide a User ID to fetch connections.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const res = await fetch(`/api/connections/${getConnectionsUserId}`, {\r\n                method: \"GET\",\r\n            });\r\n            const data: Connection[] = await res.json();\r\n\r\n            if (!res.ok) {\r\n                setGetConnectionsError(\"Failed to fetch connections.\");\r\n                return;\r\n            }\r\n\r\n            const connectionIds = data.map(conn => conn.connection_id);\r\n            setConnections(connectionIds);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setGetConnectionsError(\"Error fetching connections.\");\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"p-6 max-w-md mx-auto space-y-8\">\r\n\r\n                {/* Create Connection Table */}\r\n                <div className=\"border rounded p-4\">\r\n                    <h2 className=\"text-lg font-semibold mb-4\">Create Connection</h2>\r\n                    <table className=\"w-full table-auto border-collapse border border-gray-300 mb-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"border border-gray-300 px-3 py-1\">User ID</th>\r\n                                <th className=\"border border-gray-300 px-3 py-1\">Connection User ID</th>\r\n                                <th className=\"border border-gray-300 px-3 py-1\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border border-gray-300 px-3 py-1\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"border p-1 w-full\"\r\n                                        placeholder=\"Your User ID\"\r\n                                        value={userId}\r\n                                        onChange={(e) => setUserId(e.target.value)}\r\n                                    />\r\n                                </td>\r\n                                <td className=\"border border-gray-300 px-3 py-1\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"border p-1 w-full\"\r\n                                        placeholder=\"Connection User ID\"\r\n                                        value={connectionUserId}\r\n                                        onChange={(e) => setConnectionUserId(e.target.value)}\r\n                                    />\r\n                                </td>\r\n                                <td className=\"border border-gray-300 px-3 py-1 text-center\">\r\n                                    <button\r\n                                        onClick={handleSubmit}\r\n                                        className=\"bg-blue-500 text-white px-3 py-1 rounded\"\r\n                                    >\r\n                                        Connect (POST)\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                {/* Delete Connection Table */}\r\n                <div className=\"border rounded p-4\">\r\n                    <h2 className=\"text-lg font-semibold mb-4\">Delete Connection</h2>\r\n                    <table className=\"w-full table-auto border-collapse border border-gray-300 mb-4\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"border border-gray-300 px-3 py-1\">Connection Record ID</th>\r\n                                <th className=\"border border-gray-300 px-3 py-1\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"border border-gray-300 px-3 py-1\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"border p-1 w-full\"\r\n                                        placeholder=\"Connection Record ID\"\r\n                                        value={connectionRecordId}\r\n                                        onChange={(e) => setConnectionRecordId(e.target.value)}\r\n                                    />\r\n                                </td>\r\n                                <td className=\"border border-gray-300 px-3 py-1 text-center\">\r\n                                    <button\r\n                                        onClick={handleDelete}\r\n                                        className=\"bg-red-500 text-white px-3 py-1 rounded\"\r\n                                    >\r\n                                        Delete (DELETE)\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                {/* Get Connections Section */}\r\n                <div className=\"border rounded p-4\">\r\n                    <h2 className=\"text-lg font-semibold mb-4\">Get Connections for User</h2>\r\n                    <div className=\"flex gap-2 mb-4\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"border p-2 flex-1\"\r\n                            placeholder=\"User ID\"\r\n                            value={getConnectionsUserId}\r\n                            onChange={(e) => setGetConnectionsUserId(e.target.value)}\r\n                        />\r\n                        <button\r\n                            onClick={handleGetConnections}\r\n                            className=\"bg-green-600 text-white px-4 rounded\"\r\n                        >\r\n                            Fetch Connections (GET)\r\n                        </button>\r\n                    </div>\r\n\r\n                    {getConnectionsError && (\r\n                        <p className=\"text-red-600\">{getConnectionsError}</p>\r\n                    )}\r\n\r\n                    {connections && (\r\n                        <ul className=\"list-disc list-inside space-y-1\">\r\n                            {connections.length === 0 && <li>No connections found.</li>}\r\n                            {connections.map((cid, i) => (\r\n                                <li key={i}>{cid}</li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Show generic response */}\r\n                {response && (\r\n                    <pre className=\"bg-gray-100 p-4 rounded text-sm overflow-x-auto whitespace-pre-wrap\">\r\n                        {JSON.stringify(response, null, 2)}\r\n                    </pre>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}