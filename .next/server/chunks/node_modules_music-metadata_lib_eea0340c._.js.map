{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ebml/types.js"],"sourcesContent":["export const DataType = {\n    string: 0,\n    uint: 1,\n    uid: 2,\n    bool: 3,\n    binary: 4,\n    float: 5,\n};\n//# sourceMappingURL=types.js.map"],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB,QAAQ;IACR,MAAM;IACN,KAAK;IACL,MAAM;IACN,QAAQ;IACR,OAAO;AACX,GACA,iCAAiC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/matroska/MatroskaDtd.js"],"sourcesContent":["import { DataType } from '../ebml/types.js';\n/**\n * Elements of document type description\n * Derived from https://github.com/tungol/EBML/blob/master/doctypes/matroska.dtd\n * Extended with:\n * - https://www.matroska.org/technical/specs/index.html\n */\nexport const matroskaDtd = {\n    name: 'dtd',\n    container: {\n        0x1a45dfa3: {\n            name: 'ebml',\n            container: {\n                0x4286: { name: 'ebmlVersion', value: DataType.uint }, // 5.1.1\n                0x42f7: { name: 'ebmlReadVersion', value: DataType.uint }, // 5.1.2\n                0x42f2: { name: 'ebmlMaxIDWidth', value: DataType.uint }, // 5.1.3\n                0x42f3: { name: 'ebmlMaxSizeWidth', value: DataType.uint }, // 5.1.4\n                0x4282: { name: 'docType', value: DataType.string }, // 5.1.5\n                0x4287: { name: 'docTypeVersion', value: DataType.uint }, // 5.1.6\n                0x4285: { name: 'docTypeReadVersion', value: DataType.uint } // 5.1.7\n            }\n        },\n        // Matroska segments\n        0x18538067: {\n            name: 'segment',\n            container: {\n                // Meta Seek Information (also known as MetaSeek)\n                0x114d9b74: {\n                    name: 'seekHead',\n                    container: {\n                        0x4dbb: {\n                            name: 'seek',\n                            multiple: true,\n                            container: {\n                                0x53ab: { name: 'id', value: DataType.binary },\n                                0x53ac: { name: 'position', value: DataType.uint }\n                            }\n                        }\n                    }\n                },\n                // Segment Information\n                0x1549a966: {\n                    name: 'info',\n                    container: {\n                        0x73a4: { name: 'uid', value: DataType.uid },\n                        0x7384: { name: 'filename', value: DataType.string },\n                        0x3cb923: { name: 'prevUID', value: DataType.uid },\n                        0x3c83ab: { name: 'prevFilename', value: DataType.string },\n                        0x3eb923: { name: 'nextUID', value: DataType.uid },\n                        0x3e83bb: { name: 'nextFilename', value: DataType.string },\n                        0x2ad7b1: { name: 'timecodeScale', value: DataType.uint },\n                        0x4489: { name: 'duration', value: DataType.float },\n                        0x4461: { name: 'dateUTC', value: DataType.uint },\n                        0x7ba9: { name: 'title', value: DataType.string },\n                        0x4d80: { name: 'muxingApp', value: DataType.string },\n                        0x5741: { name: 'writingApp', value: DataType.string }\n                    }\n                },\n                // Cluster\n                0x1f43b675: {\n                    name: 'cluster',\n                    multiple: true,\n                    container: {\n                        0xe7: { name: 'timecode', value: DataType.uid },\n                        0x58d7: { name: 'silentTracks ', multiple: true },\n                        0xa7: { name: 'position', value: DataType.uid },\n                        0xab: { name: 'prevSize', value: DataType.uid },\n                        0xa0: { name: 'blockGroup' },\n                        0xa3: { name: 'simpleBlock' }\n                    }\n                },\n                // Track\n                0x1654ae6b: {\n                    name: 'tracks',\n                    container: {\n                        0xae: {\n                            name: 'entries',\n                            multiple: true,\n                            container: {\n                                0xd7: { name: 'trackNumber', value: DataType.uint },\n                                0x73c5: { name: 'uid', value: DataType.uid },\n                                0x83: { name: 'trackType', value: DataType.uint },\n                                0xb9: { name: 'flagEnabled', value: DataType.bool },\n                                0x88: { name: 'flagDefault', value: DataType.bool },\n                                0x55aa: { name: 'flagForced', value: DataType.bool }, // extended\n                                0x9c: { name: 'flagLacing', value: DataType.bool },\n                                0x6de7: { name: 'minCache', value: DataType.uint },\n                                0x6de8: { name: 'maxCache', value: DataType.uint },\n                                0x23e383: { name: 'defaultDuration', value: DataType.uint },\n                                0x23314f: { name: 'timecodeScale', value: DataType.float },\n                                0x536e: { name: 'name', value: DataType.string },\n                                0x22b59c: { name: 'language', value: DataType.string },\n                                0x86: { name: 'codecID', value: DataType.string },\n                                0x63a2: { name: 'codecPrivate', value: DataType.binary },\n                                0x258688: { name: 'codecName', value: DataType.string },\n                                0x3a9697: { name: 'codecSettings', value: DataType.string },\n                                0x3b4040: { name: 'codecInfoUrl', value: DataType.string },\n                                0x26b240: { name: 'codecDownloadUrl', value: DataType.string },\n                                0xaa: { name: 'codecDecodeAll', value: DataType.bool },\n                                0x6fab: { name: 'trackOverlay', value: DataType.uint },\n                                // Video\n                                0xe0: {\n                                    name: 'video',\n                                    container: {\n                                        0x9a: { name: 'flagInterlaced', value: DataType.bool },\n                                        0x53b8: { name: 'stereoMode', value: DataType.uint },\n                                        0xb0: { name: 'pixelWidth', value: DataType.uint },\n                                        0xba: { name: 'pixelHeight', value: DataType.uint },\n                                        0x54b0: { name: 'displayWidth', value: DataType.uint },\n                                        0x54ba: { name: 'displayHeight', value: DataType.uint },\n                                        0x54b3: { name: 'aspectRatioType', value: DataType.uint },\n                                        0x2eb524: { name: 'colourSpace', value: DataType.uint },\n                                        0x2fb523: { name: 'gammaValue', value: DataType.float }\n                                    }\n                                },\n                                // Audio\n                                0xe1: {\n                                    name: 'audio',\n                                    container: {\n                                        0xb5: { name: 'samplingFrequency', value: DataType.float },\n                                        0x78b5: { name: 'outputSamplingFrequency', value: DataType.float },\n                                        0x9f: { name: 'channels', value: DataType.uint }, // https://www.matroska.org/technical/specs/index.html\n                                        0x94: { name: 'channels', value: DataType.uint },\n                                        0x7d7b: { name: 'channelPositions', value: DataType.binary },\n                                        0x6264: { name: 'bitDepth', value: DataType.uint }\n                                    }\n                                },\n                                // Content Encoding\n                                0x6d80: {\n                                    name: 'contentEncodings',\n                                    container: {\n                                        0x6240: {\n                                            name: 'contentEncoding',\n                                            container: {\n                                                0x5031: { name: 'order', value: DataType.uint },\n                                                0x5032: { name: 'scope', value: DataType.bool },\n                                                0x5033: { name: 'type', value: DataType.uint },\n                                                0x5034: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x4254: { name: 'contentCompAlgo', value: DataType.uint },\n                                                        0x4255: { name: 'contentCompSettings', value: DataType.binary }\n                                                    }\n                                                },\n                                                0x5035: {\n                                                    name: 'contentEncoding',\n                                                    container: {\n                                                        0x47e1: { name: 'contentEncAlgo', value: DataType.uint },\n                                                        0x47e2: { name: 'contentEncKeyID', value: DataType.binary },\n                                                        0x47e3: { name: 'contentSignature ', value: DataType.binary },\n                                                        0x47e4: { name: 'ContentSigKeyID  ', value: DataType.binary },\n                                                        0x47e5: { name: 'contentSigAlgo ', value: DataType.uint },\n                                                        0x47e6: { name: 'contentSigHashAlgo ', value: DataType.uint }\n                                                    }\n                                                },\n                                                0x6264: { name: 'bitDepth', value: DataType.uint }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Cueing Data\n                0x1c53bb6b: {\n                    name: 'cues',\n                    container: {\n                        0xbb: {\n                            name: 'cuePoint',\n                            container: {\n                                0xb3: { name: 'cueTime', value: DataType.uid },\n                                0xb7: {\n                                    name: 'positions',\n                                    container: {\n                                        0xf7: { name: 'track', value: DataType.uint },\n                                        0xf1: { name: 'clusterPosition', value: DataType.uint },\n                                        0x5378: { name: 'blockNumber', value: DataType.uint },\n                                        0xea: { name: 'codecState', value: DataType.uint },\n                                        0xdb: {\n                                            name: 'reference', container: {\n                                                0x96: { name: 'time', value: DataType.uint },\n                                                0x97: { name: 'cluster', value: DataType.uint },\n                                                0x535f: { name: 'number', value: DataType.uint },\n                                                0xeb: { name: 'codecState', value: DataType.uint }\n                                            }\n                                        },\n                                        0xf0: { name: 'relativePosition', value: DataType.uint } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Attachment\n                0x1941a469: {\n                    name: 'attachments',\n                    container: {\n                        0x61a7: {\n                            name: 'attachedFiles',\n                            multiple: true,\n                            container: {\n                                0x467e: { name: 'description', value: DataType.string },\n                                0x466e: { name: 'name', value: DataType.string },\n                                0x4660: { name: 'mimeType', value: DataType.string },\n                                0x465c: { name: 'data', value: DataType.binary },\n                                0x46ae: { name: 'uid', value: DataType.uid }\n                            }\n                        }\n                    }\n                },\n                // Chapters\n                0x1043a770: {\n                    name: 'chapters',\n                    container: {\n                        0x45b9: {\n                            name: 'editionEntry',\n                            container: {\n                                0xb6: {\n                                    name: 'chapterAtom',\n                                    container: {\n                                        0x73c4: { name: 'uid', value: DataType.uid },\n                                        0x91: { name: 'timeStart', value: DataType.uint },\n                                        0x92: { name: 'timeEnd', value: DataType.uid },\n                                        0x98: { name: 'hidden', value: DataType.bool },\n                                        0x4598: { name: 'enabled', value: DataType.uid },\n                                        0x8f: {\n                                            name: 'track', container: {\n                                                0x89: { name: 'trackNumber', value: DataType.uid },\n                                                0x80: {\n                                                    name: 'display', container: {\n                                                        0x85: { name: 'string', value: DataType.string },\n                                                        0x437c: { name: 'language ', value: DataType.string },\n                                                        0x437e: { name: 'country ', value: DataType.string }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n                // Tagging\n                0x1254c367: {\n                    name: 'tags',\n                    container: {\n                        0x7373: {\n                            name: 'tag',\n                            multiple: true,\n                            container: {\n                                0x63c0: {\n                                    name: 'target',\n                                    container: {\n                                        0x63c5: { name: 'tagTrackUID', value: DataType.uid },\n                                        0x63c4: { name: 'tagChapterUID', value: DataType.uint },\n                                        0x63c6: { name: 'tagAttachmentUID', value: DataType.uid },\n                                        0x63ca: { name: 'targetType', value: DataType.string }, // extended\n                                        0x68ca: { name: 'targetTypeValue', value: DataType.uint }, // extended\n                                        0x63c9: { name: 'tagEditionUID', value: DataType.uid } // extended\n                                    }\n                                },\n                                0x67c8: {\n                                    name: 'simpleTags',\n                                    multiple: true,\n                                    container: {\n                                        0x45a3: { name: 'name', value: DataType.string },\n                                        0x4487: { name: 'string', value: DataType.string },\n                                        0x4485: { name: 'binary', value: DataType.binary },\n                                        0x447a: { name: 'language', value: DataType.string }, // extended\n                                        0x447b: { name: 'languageIETF', value: DataType.string }, // extended\n                                        0x4484: { name: 'default', value: DataType.bool } // extended\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=MatroskaDtd.js.map"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/ebml/EbmlIterator.js"],"sourcesContent":["import { Float32_BE, Float64_BE, StringType, UINT8 } from 'token-types';\nimport initDebug from 'debug';\nimport { EndOfStreamError } from 'strtok3';\nimport { DataType } from './types.js';\nimport * as Token from 'token-types';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nconst debug = initDebug('music-metadata:parser:ebml');\nexport class EbmlContentError extends makeUnexpectedFileContentError('EBML') {\n}\nexport const ParseAction = {\n    ReadNext: 0, // Continue reading the next elements\n    IgnoreElement: 2, // Ignore (do not read) this element\n    SkipSiblings: 3, // Skip all remaining elements at the same level\n    TerminateParsing: 4, // Terminate the parsing process\n    SkipElement: 5 // Consider the element has read, assume position is at the next element\n};\n/**\n * Extensible Binary Meta Language (EBML) iterator\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nexport class EbmlIterator {\n    /**\n     * @param {ITokenizer} tokenizer Input\n     * @param tokenizer\n     */\n    constructor(tokenizer) {\n        this.padding = 0;\n        this.parserMap = new Map();\n        this.ebmlMaxIDLength = 4;\n        this.ebmlMaxSizeLength = 8;\n        this.tokenizer = tokenizer;\n        this.parserMap.set(DataType.uint, e => this.readUint(e));\n        this.parserMap.set(DataType.string, e => this.readString(e));\n        this.parserMap.set(DataType.binary, e => this.readBuffer(e));\n        this.parserMap.set(DataType.uid, async (e) => this.readBuffer(e));\n        this.parserMap.set(DataType.bool, e => this.readFlag(e));\n        this.parserMap.set(DataType.float, e => this.readFloat(e));\n    }\n    async iterate(dtdElement, posDone, listener) {\n        return this.parseContainer(linkParents(dtdElement), posDone, listener);\n    }\n    async parseContainer(dtdElement, posDone, listener) {\n        const tree = {};\n        while (this.tokenizer.position < posDone) {\n            let element;\n            const elementPosition = this.tokenizer.position;\n            try {\n                element = await this.readElement();\n            }\n            catch (error) {\n                if (error instanceof EndOfStreamError) {\n                    break;\n                }\n                throw error;\n            }\n            const child = dtdElement.container[element.id];\n            if (child) {\n                const action = listener.startNext(child);\n                switch (action) {\n                    case ParseAction.ReadNext:\n                        {\n                            if (element.id === 0x1F43B675) {\n                                // Hack to ignore remaining segment, when cluster element received\n                                // await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                                // break;\n                            }\n                            debug(`Read element: name=${getElementPath(child)}{id=0x${element.id.toString(16)}, container=${!!child.container}} at position=${elementPosition}`);\n                            if (child.container) {\n                                const res = await this.parseContainer(child, element.len >= 0 ? this.tokenizer.position + element.len : -1, listener);\n                                if (child.multiple) {\n                                    if (!tree[child.name]) {\n                                        tree[child.name] = [];\n                                    }\n                                    tree[child.name].push(res);\n                                }\n                                else {\n                                    tree[child.name] = res;\n                                }\n                                await listener.elementValue(child, res, elementPosition);\n                            }\n                            else {\n                                const parser = this.parserMap.get(child.value);\n                                if (typeof parser === 'function') {\n                                    const value = await parser(element);\n                                    tree[child.name] = value;\n                                    await listener.elementValue(child, value, elementPosition);\n                                }\n                            }\n                        }\n                        break;\n                    case ParseAction.SkipElement:\n                        debug(`Go to next element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        break;\n                    case ParseAction.IgnoreElement:\n                        debug(`Ignore element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    case ParseAction.SkipSiblings:\n                        debug(`Ignore remaining container, at: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        await this.tokenizer.ignore(posDone - this.tokenizer.position);\n                        break;\n                    case ParseAction.TerminateParsing:\n                        debug(`Terminate parsing at element: name=${getElementPath(child)}, element.id=0x${element.id}, container=${!!child.container} at position=${elementPosition}`);\n                        return tree;\n                }\n            }\n            else {\n                switch (element.id) {\n                    case 0xec: // void\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                        break;\n                    default:\n                        debug(`parseEbml: parent=${getElementPath(dtdElement)}, unknown child: id=${element.id.toString(16)} at position=${elementPosition}`);\n                        this.padding += element.len;\n                        await this.tokenizer.ignore(element.len);\n                }\n            }\n        }\n        return tree;\n    }\n    async readVintData(maxLength) {\n        const msb = await this.tokenizer.peekNumber(UINT8);\n        let mask = 0x80;\n        let oc = 1;\n        // Calculate VINT_WIDTH\n        while ((msb & mask) === 0) {\n            if (oc > maxLength) {\n                throw new EbmlContentError('VINT value exceeding maximum size');\n            }\n            ++oc;\n            mask >>= 1;\n        }\n        const id = new Uint8Array(oc);\n        await this.tokenizer.readBuffer(id);\n        return id;\n    }\n    async readElement() {\n        const id = await this.readVintData(this.ebmlMaxIDLength);\n        const lenField = await this.readVintData(this.ebmlMaxSizeLength);\n        lenField[0] ^= 0x80 >> (lenField.length - 1);\n        return {\n            id: readUIntBE(id, id.length),\n            len: readUIntBE(lenField, lenField.length)\n        };\n    }\n    async readFloat(e) {\n        switch (e.len) {\n            case 0:\n                return 0.0;\n            case 4:\n                return this.tokenizer.readNumber(Float32_BE);\n            case 8:\n                return this.tokenizer.readNumber(Float64_BE);\n            case 10:\n                return this.tokenizer.readNumber(Float64_BE);\n            default:\n                throw new EbmlContentError(`Invalid IEEE-754 float length: ${e.len}`);\n        }\n    }\n    async readFlag(e) {\n        return (await this.readUint(e)) === 1;\n    }\n    async readUint(e) {\n        const buf = await this.readBuffer(e);\n        return readUIntBE(buf, e.len);\n    }\n    async readString(e) {\n        const rawString = await this.tokenizer.readToken(new StringType(e.len, 'utf-8'));\n        return rawString.replace(/\\x00.*$/g, '');\n    }\n    async readBuffer(e) {\n        const buf = new Uint8Array(e.len);\n        await this.tokenizer.readBuffer(buf);\n        return buf;\n    }\n}\nfunction readUIntBE(buf, len) {\n    return Number(readUIntBeAsBigInt(buf, len));\n}\n/**\n * Reeds an unsigned integer from a big endian buffer of length `len`\n * @param buf Buffer to decode from\n * @param len Number of bytes\n * @private\n */\nfunction readUIntBeAsBigInt(buf, len) {\n    const normalizedNumber = new Uint8Array(8);\n    const cleanNumber = buf.subarray(0, len);\n    try {\n        normalizedNumber.set(cleanNumber, 8 - len);\n        return Token.UINT64_BE.get(normalizedNumber, 0);\n    }\n    catch (error) {\n        return BigInt(-1);\n    }\n}\nfunction linkParents(element) {\n    if (element.container) {\n        Object.keys(element.container)\n            .map(id => {\n            const child = element.container[id];\n            child.id = Number.parseInt(id);\n            return child;\n        }).forEach(child => {\n            child.parent = element;\n            linkParents(child);\n        });\n    }\n    return element;\n}\nexport function getElementPath(element) {\n    let path = '';\n    if (element.parent && element.parent.name !== 'dtd') {\n        path += `${getElementPath(element.parent)}/`;\n    }\n    return path + element.name;\n}\n//# sourceMappingURL=EbmlIterator.js.map"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AACA;AAEA;;;;;;;AACA,MAAM,QAAQ,CAAA,GAAA,uIAAA,CAAA,UAAS,AAAD,EAAE;AACjB,MAAM,yBAAyB,CAAA,GAAA,wJAAA,CAAA,iCAA8B,AAAD,EAAE;AACrE;AACO,MAAM,cAAc;IACvB,UAAU;IACV,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,aAAa,EAAE,wEAAwE;AAC3F;AAQO,MAAM;IACT;;;KAGC,GACD,YAAY,SAAS,CAAE;QACnB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,SAAS,GAAG,IAAI;QACrB,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,IAAI,EAAE,CAAA,IAAK,IAAI,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,MAAM,EAAE,CAAA,IAAK,IAAI,CAAC,UAAU,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,MAAM,EAAE,CAAA,IAAK,IAAI,CAAC,UAAU,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,GAAG,EAAE,OAAO,IAAM,IAAI,CAAC,UAAU,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,IAAI,EAAE,CAAA,IAAK,IAAI,CAAC,QAAQ,CAAC;QACrD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2JAAA,CAAA,WAAQ,CAAC,KAAK,EAAE,CAAA,IAAK,IAAI,CAAC,SAAS,CAAC;IAC3D;IACA,MAAM,QAAQ,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;QACzC,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,aAAa,SAAS;IACjE;IACA,MAAM,eAAe,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;QAChD,MAAM,OAAO,CAAC;QACd,MAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAS;YACtC,IAAI;YACJ,MAAM,kBAAkB,IAAI,CAAC,SAAS,CAAC,QAAQ;YAC/C,IAAI;gBACA,UAAU,MAAM,IAAI,CAAC,WAAW;YACpC,EACA,OAAO,OAAO;gBACV,IAAI,iBAAiB,mJAAA,CAAA,mBAAgB,EAAE;oBACnC;gBACJ;gBACA,MAAM;YACV;YACA,MAAM,QAAQ,WAAW,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC9C,IAAI,OAAO;gBACP,MAAM,SAAS,SAAS,SAAS,CAAC;gBAClC,OAAQ;oBACJ,KAAK,YAAY,QAAQ;wBACrB;4BACI,IAAI,QAAQ,EAAE,KAAK,YAAY;4BAC3B,kEAAkE;4BAClE,kEAAkE;4BAClE,SAAS;4BACb;4BACA,MAAM,CAAC,mBAAmB,EAAE,eAAe,OAAO,MAAM,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC,MAAM,SAAS,CAAC,cAAc,EAAE,iBAAiB;4BACnJ,IAAI,MAAM,SAAS,EAAE;gCACjB,MAAM,MAAM,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG;gCAC5G,IAAI,MAAM,QAAQ,EAAE;oCAChB,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;wCACnB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE;oCACzB;oCACA,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC;gCAC1B,OACK;oCACD,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG;gCACvB;gCACA,MAAM,SAAS,YAAY,CAAC,OAAO,KAAK;4BAC5C,OACK;gCACD,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,KAAK;gCAC7C,IAAI,OAAO,WAAW,YAAY;oCAC9B,MAAM,QAAQ,MAAM,OAAO;oCAC3B,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG;oCACnB,MAAM,SAAS,YAAY,CAAC,OAAO,OAAO;gCAC9C;4BACJ;wBACJ;wBACA;oBACJ,KAAK,YAAY,WAAW;wBACxB,MAAM,CAAC,yBAAyB,EAAE,eAAe,OAAO,eAAe,EAAE,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,SAAS,CAAC,aAAa,EAAE,iBAAiB;wBACpJ;oBACJ,KAAK,YAAY,aAAa;wBAC1B,MAAM,CAAC,qBAAqB,EAAE,eAAe,OAAO,eAAe,EAAE,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,SAAS,CAAC,aAAa,EAAE,iBAAiB;wBAChJ,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG;wBACvC;oBACJ,KAAK,YAAY,YAAY;wBACzB,MAAM,CAAC,qCAAqC,EAAE,eAAe,OAAO,eAAe,EAAE,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,SAAS,CAAC,aAAa,EAAE,iBAAiB;wBAChK,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,QAAQ;wBAC7D;oBACJ,KAAK,YAAY,gBAAgB;wBAC7B,MAAM,CAAC,mCAAmC,EAAE,eAAe,OAAO,eAAe,EAAE,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC,MAAM,SAAS,CAAC,aAAa,EAAE,iBAAiB;wBAC9J,OAAO;gBACf;YACJ,OACK;gBACD,OAAQ,QAAQ,EAAE;oBACd,KAAK;wBACD,IAAI,CAAC,OAAO,IAAI,QAAQ,GAAG;wBAC3B,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG;wBACvC;oBACJ;wBACI,MAAM,CAAC,kBAAkB,EAAE,eAAe,YAAY,oBAAoB,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,aAAa,EAAE,iBAAiB;wBACpI,IAAI,CAAC,OAAO,IAAI,QAAQ,GAAG;wBAC3B,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,GAAG;gBAC/C;YACJ;QACJ;QACA,OAAO;IACX;IACA,MAAM,aAAa,SAAS,EAAE;QAC1B,MAAM,MAAM,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gJAAA,CAAA,QAAK;QACjD,IAAI,OAAO;QACX,IAAI,KAAK;QACT,uBAAuB;QACvB,MAAO,CAAC,MAAM,IAAI,MAAM,EAAG;YACvB,IAAI,KAAK,WAAW;gBAChB,MAAM,IAAI,iBAAiB;YAC/B;YACA,EAAE;YACF,SAAS;QACb;QACA,MAAM,KAAK,IAAI,WAAW;QAC1B,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QAChC,OAAO;IACX;IACA,MAAM,cAAc;QAChB,MAAM,KAAK,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe;QACvD,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB;QAC/D,QAAQ,CAAC,EAAE,IAAI,QAAS,SAAS,MAAM,GAAG;QAC1C,OAAO;YACH,IAAI,WAAW,IAAI,GAAG,MAAM;YAC5B,KAAK,WAAW,UAAU,SAAS,MAAM;QAC7C;IACJ;IACA,MAAM,UAAU,CAAC,EAAE;QACf,OAAQ,EAAE,GAAG;YACT,KAAK;gBACD,OAAO;YACX,KAAK;gBACD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gJAAA,CAAA,aAAU;YAC/C,KAAK;gBACD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gJAAA,CAAA,aAAU;YAC/C,KAAK;gBACD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,gJAAA,CAAA,aAAU;YAC/C;gBACI,MAAM,IAAI,iBAAiB,CAAC,+BAA+B,EAAE,EAAE,GAAG,EAAE;QAC5E;IACJ;IACA,MAAM,SAAS,CAAC,EAAE;QACd,OAAO,AAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAQ;IACxC;IACA,MAAM,SAAS,CAAC,EAAE;QACd,MAAM,MAAM,MAAM,IAAI,CAAC,UAAU,CAAC;QAClC,OAAO,WAAW,KAAK,EAAE,GAAG;IAChC;IACA,MAAM,WAAW,CAAC,EAAE;QAChB,MAAM,YAAY,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,gJAAA,CAAA,aAAU,CAAC,EAAE,GAAG,EAAE;QACvE,OAAO,UAAU,OAAO,CAAC,YAAY;IACzC;IACA,MAAM,WAAW,CAAC,EAAE;QAChB,MAAM,MAAM,IAAI,WAAW,EAAE,GAAG;QAChC,MAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;QAChC,OAAO;IACX;AACJ;AACA,SAAS,WAAW,GAAG,EAAE,GAAG;IACxB,OAAO,OAAO,mBAAmB,KAAK;AAC1C;AACA;;;;;CAKC,GACD,SAAS,mBAAmB,GAAG,EAAE,GAAG;IAChC,MAAM,mBAAmB,IAAI,WAAW;IACxC,MAAM,cAAc,IAAI,QAAQ,CAAC,GAAG;IACpC,IAAI;QACA,iBAAiB,GAAG,CAAC,aAAa,IAAI;QACtC,OAAO,gJAAA,CAAA,YAAe,CAAC,GAAG,CAAC,kBAAkB;IACjD,EACA,OAAO,OAAO;QACV,OAAO,OAAO,CAAC;IACnB;AACJ;AACA,SAAS,YAAY,OAAO;IACxB,IAAI,QAAQ,SAAS,EAAE;QACnB,OAAO,IAAI,CAAC,QAAQ,SAAS,EACxB,GAAG,CAAC,CAAA;YACL,MAAM,QAAQ,QAAQ,SAAS,CAAC,GAAG;YACnC,MAAM,EAAE,GAAG,OAAO,QAAQ,CAAC;YAC3B,OAAO;QACX,GAAG,OAAO,CAAC,CAAA;YACP,MAAM,MAAM,GAAG;YACf,YAAY;QAChB;IACJ;IACA,OAAO;AACX;AACO,SAAS,eAAe,OAAO;IAClC,IAAI,OAAO;IACX,IAAI,QAAQ,MAAM,IAAI,QAAQ,MAAM,CAAC,IAAI,KAAK,OAAO;QACjD,QAAQ,GAAG,eAAe,QAAQ,MAAM,EAAE,CAAC,CAAC;IAChD;IACA,OAAO,OAAO,QAAQ,IAAI;AAC9B,EACA,wCAAwC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/node_modules/music-metadata/lib/matroska/MatroskaParser.js"],"sourcesContent":["import initDebug from 'debug';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { matroskaDtd } from './MatroskaDtd.js';\nimport { TargetType, TrackType } from './types.js';\nimport { EbmlIterator, ParseAction } from '../ebml/EbmlIterator.js';\nconst debug = initDebug('music-metadata:parser:matroska');\n/**\n * Extensible Binary Meta Language (EBML) parser\n * https://en.wikipedia.org/wiki/Extensible_Binary_Meta_Language\n * http://matroska.sourceforge.net/technical/specs/rfc/index.html\n *\n * WEBM VP8 AUDIO FILE\n */\nexport class MatroskaParser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.seekHeadOffset = 0;\n        /**\n         * Use index to skip multiple segment/cluster elements at once.\n         * Significant performance impact\n         */\n        this.flagUseIndexToSkipClusters = this.options.mkvUseIndex ?? false;\n    }\n    async parse() {\n        const containerSize = this.tokenizer.fileInfo.size ?? Number.MAX_SAFE_INTEGER;\n        const matroskaIterator = new EbmlIterator(this.tokenizer);\n        debug('Initializing DTD end MatroskaIterator');\n        await matroskaIterator.iterate(matroskaDtd, containerSize, {\n            startNext: (element) => {\n                switch (element.id) {\n                    // case 0x1f43b675: // cluster\n                    case 0x1c53bb6b: // Cueing Data\n                        debug(`Skip element: name=${element.name}, id=0x${element.id.toString(16)}`);\n                        return ParseAction.IgnoreElement;\n                    case 0x1f43b675: // cluster\n                        if (this.flagUseIndexToSkipClusters && this.seekHead) {\n                            const index = this.seekHead.seek.find(index => index.position + this.seekHeadOffset > this.tokenizer.position);\n                            if (index) {\n                                // Go to next index position\n                                const ignoreSize = index.position + this.seekHeadOffset - this.tokenizer.position;\n                                debug(`Use index to go to next position, ignoring ${ignoreSize} bytes`);\n                                this.tokenizer.ignore(ignoreSize);\n                                return ParseAction.SkipElement;\n                            }\n                        }\n                        return ParseAction.IgnoreElement;\n                    default:\n                        return ParseAction.ReadNext;\n                }\n            },\n            elementValue: async (element, value, offset) => {\n                debug(`Received: name=${element.name}, value=${value}`);\n                switch (element.id) {\n                    case 0x4282: // docType\n                        this.metadata.setFormat('container', `EBML/${value}`);\n                        break;\n                    case 0x114d9b74:\n                        this.seekHead = value;\n                        this.seekHeadOffset = offset;\n                        break;\n                    case 0x1549a966:\n                        { // Info (Segment Information)\n                            const info = value;\n                            const timecodeScale = info.timecodeScale ? info.timecodeScale : 1000000;\n                            if (typeof info.duration === 'number') {\n                                const duration = info.duration * timecodeScale / 1000000000;\n                                await this.addTag('segment:title', info.title);\n                                this.metadata.setFormat('duration', Number(duration));\n                            }\n                        }\n                        break;\n                    case 0x1654ae6b:\n                        { // tracks\n                            const audioTracks = value;\n                            if (audioTracks?.entries) {\n                                audioTracks.entries.forEach(entry => {\n                                    const stream = {\n                                        codecName: entry.codecID.replace('A_', '').replace('V_', ''),\n                                        codecSettings: entry.codecSettings,\n                                        flagDefault: entry.flagDefault,\n                                        flagLacing: entry.flagLacing,\n                                        flagEnabled: entry.flagEnabled,\n                                        language: entry.language,\n                                        name: entry.name,\n                                        type: entry.trackType,\n                                        audio: entry.audio,\n                                        video: entry.video\n                                    };\n                                    this.metadata.addStreamInfo(stream);\n                                });\n                                const audioTrack = audioTracks.entries\n                                    .filter(entry => entry.trackType === TrackType.audio)\n                                    .reduce((acc, cur) => {\n                                    if (!acc)\n                                        return cur;\n                                    if (cur.flagDefault && !acc.flagDefault)\n                                        return cur;\n                                    if (cur.trackNumber < acc.trackNumber)\n                                        return cur;\n                                    return acc;\n                                }, null);\n                                if (audioTrack) {\n                                    this.metadata.setFormat('codec', audioTrack.codecID.replace('A_', ''));\n                                    this.metadata.setFormat('sampleRate', audioTrack.audio.samplingFrequency);\n                                    this.metadata.setFormat('numberOfChannels', audioTrack.audio.channels);\n                                }\n                            }\n                        }\n                        break;\n                    case 0x1254c367:\n                        { // tags\n                            const tags = value;\n                            await Promise.all(tags.tag.map(async (tag) => {\n                                const target = tag.target;\n                                const targetType = target?.targetTypeValue ? TargetType[target.targetTypeValue] : (target?.targetType ? target.targetType : 'track');\n                                await Promise.all(tag.simpleTags.map(async (simpleTag) => {\n                                    const value = simpleTag.string ? simpleTag.string : simpleTag.binary;\n                                    await this.addTag(`${targetType}:${simpleTag.name}`, value);\n                                }));\n                            }));\n                        }\n                        break;\n                    case 0x1941a469:\n                        { // attachments\n                            const attachments = value;\n                            await Promise.all(attachments.attachedFiles\n                                .filter(file => file.mimeType.startsWith('image/'))\n                                .map(file => this.addTag('picture', {\n                                data: file.data,\n                                format: file.mimeType,\n                                description: file.description,\n                                name: file.name\n                            })));\n                        }\n                        break;\n                }\n            }\n        });\n    }\n    async addTag(tagId, value) {\n        await this.metadata.addTag('matroska', tagId, value);\n    }\n}\n//# sourceMappingURL=MatroskaParser.js.map"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;AACA,MAAM,QAAQ,CAAA,GAAA,uIAAA,CAAA,UAAS,AAAD,EAAE;AAQjB,MAAM,uBAAuB,mKAAA,CAAA,cAAW;IAC3C,aAAc;QACV,KAAK,IAAI;QACT,IAAI,CAAC,cAAc,GAAG;QACtB;;;SAGC,GACD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI;IAClE;IACA,MAAM,QAAQ;QACV,MAAM,gBAAgB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,IAAI,OAAO,gBAAgB;QAC7E,MAAM,mBAAmB,IAAI,kKAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS;QACxD,MAAM;QACN,MAAM,iBAAiB,OAAO,CAAC,qKAAA,CAAA,cAAW,EAAE,eAAe;YACvD,WAAW,CAAC;gBACR,OAAQ,QAAQ,EAAE;oBACd,8BAA8B;oBAC9B,KAAK;wBACD,MAAM,CAAC,mBAAmB,EAAE,QAAQ,IAAI,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAK;wBAC3E,OAAO,kKAAA,CAAA,cAAW,CAAC,aAAa;oBACpC,KAAK;wBACD,IAAI,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,QAAQ,EAAE;4BAClD,MAAM,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,QAAS,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ;4BAC7G,IAAI,OAAO;gCACP,4BAA4B;gCAC5B,MAAM,aAAa,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ;gCACjF,MAAM,CAAC,2CAA2C,EAAE,WAAW,MAAM,CAAC;gCACtE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gCACtB,OAAO,kKAAA,CAAA,cAAW,CAAC,WAAW;4BAClC;wBACJ;wBACA,OAAO,kKAAA,CAAA,cAAW,CAAC,aAAa;oBACpC;wBACI,OAAO,kKAAA,CAAA,cAAW,CAAC,QAAQ;gBACnC;YACJ;YACA,cAAc,OAAO,SAAS,OAAO;gBACjC,MAAM,CAAC,eAAe,EAAE,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO;gBACtD,OAAQ,QAAQ,EAAE;oBACd,KAAK;wBACD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO;wBACpD;oBACJ,KAAK;wBACD,IAAI,CAAC,QAAQ,GAAG;wBAChB,IAAI,CAAC,cAAc,GAAG;wBACtB;oBACJ,KAAK;wBACD;4BACI,MAAM,OAAO;4BACb,MAAM,gBAAgB,KAAK,aAAa,GAAG,KAAK,aAAa,GAAG;4BAChE,IAAI,OAAO,KAAK,QAAQ,KAAK,UAAU;gCACnC,MAAM,WAAW,KAAK,QAAQ,GAAG,gBAAgB;gCACjD,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,KAAK,KAAK;gCAC7C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAY,OAAO;4BAC/C;wBACJ;wBACA;oBACJ,KAAK;wBACD;4BACI,MAAM,cAAc;4BACpB,IAAI,aAAa,SAAS;gCACtB,YAAY,OAAO,CAAC,OAAO,CAAC,CAAA;oCACxB,MAAM,SAAS;wCACX,WAAW,MAAM,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM;wCACzD,eAAe,MAAM,aAAa;wCAClC,aAAa,MAAM,WAAW;wCAC9B,YAAY,MAAM,UAAU;wCAC5B,aAAa,MAAM,WAAW;wCAC9B,UAAU,MAAM,QAAQ;wCACxB,MAAM,MAAM,IAAI;wCAChB,MAAM,MAAM,SAAS;wCACrB,OAAO,MAAM,KAAK;wCAClB,OAAO,MAAM,KAAK;oCACtB;oCACA,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;gCAChC;gCACA,MAAM,aAAa,YAAY,OAAO,CACjC,MAAM,CAAC,CAAA,QAAS,MAAM,SAAS,KAAK,+JAAA,CAAA,YAAS,CAAC,KAAK,EACnD,MAAM,CAAC,CAAC,KAAK;oCACd,IAAI,CAAC,KACD,OAAO;oCACX,IAAI,IAAI,WAAW,IAAI,CAAC,IAAI,WAAW,EACnC,OAAO;oCACX,IAAI,IAAI,WAAW,GAAG,IAAI,WAAW,EACjC,OAAO;oCACX,OAAO;gCACX,GAAG;gCACH,IAAI,YAAY;oCACZ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,WAAW,OAAO,CAAC,OAAO,CAAC,MAAM;oCAClE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,WAAW,KAAK,CAAC,iBAAiB;oCACxE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,oBAAoB,WAAW,KAAK,CAAC,QAAQ;gCACzE;4BACJ;wBACJ;wBACA;oBACJ,KAAK;wBACD;4BACI,MAAM,OAAO;4BACb,MAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,OAAO;gCAClC,MAAM,SAAS,IAAI,MAAM;gCACzB,MAAM,aAAa,QAAQ,kBAAkB,+JAAA,CAAA,aAAU,CAAC,OAAO,eAAe,CAAC,GAAI,QAAQ,aAAa,OAAO,UAAU,GAAG;gCAC5H,MAAM,QAAQ,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,OAAO;oCACxC,MAAM,QAAQ,UAAU,MAAM,GAAG,UAAU,MAAM,GAAG,UAAU,MAAM;oCACpE,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,CAAC,EAAE,UAAU,IAAI,EAAE,EAAE;gCACzD;4BACJ;wBACJ;wBACA;oBACJ,KAAK;wBACD;4BACI,MAAM,cAAc;4BACpB,MAAM,QAAQ,GAAG,CAAC,YAAY,aAAa,CACtC,MAAM,CAAC,CAAA,OAAQ,KAAK,QAAQ,CAAC,UAAU,CAAC,WACxC,GAAG,CAAC,CAAA,OAAQ,IAAI,CAAC,MAAM,CAAC,WAAW;oCACpC,MAAM,KAAK,IAAI;oCACf,QAAQ,KAAK,QAAQ;oCACrB,aAAa,KAAK,WAAW;oCAC7B,MAAM,KAAK,IAAI;gCACnB;wBACJ;wBACA;gBACR;YACJ;QACJ;IACJ;IACA,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE;QACvB,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,OAAO;IAClD;AACJ,EACA,0CAA0C","ignoreList":[0],"debugId":null}}]
}