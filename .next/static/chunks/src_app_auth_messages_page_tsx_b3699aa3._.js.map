{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/app/auth/messages/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\ninterface Message {\r\n  id: string;\r\n  sender_id: string;\r\n  receiver_id: string;\r\n  text: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface PostResponse {\r\n  status: number | \"Error\";\r\n  data: {\r\n    id?: string;\r\n    sender_id?: string;\r\n    receiver_id?: string;\r\n    text?: string;\r\n    created_at?: string;\r\n    message?: string;\r\n    error?: string;\r\n    [key: string]: unknown;\r\n  } | string;\r\n}\r\n\r\ninterface GetResponse {\r\n  status: number | \"Error\";\r\n  data: Message[] | { message: string } | string;\r\n}\r\n\r\ninterface DeleteResponse {\r\n  status: number | \"Error\";\r\n  data: { message: string } | string;\r\n}\r\n\r\ninterface PatchResponse {\r\n  status: number | \"Error\";\r\n  data: Message | { message: string } | string;\r\n}\r\n\r\nexport default function TestChatPage() {\r\n  // POST form states\r\n  const [senderId, setSenderId] = useState<string>(\"\");\r\n  const [receiverId, setReceiverId] = useState<string>(\"\");\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [postResponse, setPostResponse] = useState<PostResponse | null>(null);\r\n  const [postLoading, setPostLoading] = useState<boolean>(false);\r\n\r\n  // GET form states\r\n  const [authUserId, setAuthUserId] = useState<string>(\"\");\r\n  const [chatWithId, setChatWithId] = useState<string>(\"\");\r\n  const [getResponse, setGetResponse] = useState<GetResponse | null>(null);\r\n  const [getLoading, setGetLoading] = useState<boolean>(false);\r\n\r\n  // DELETE form states\r\n  const [deleteMessageId, setDeleteMessageId] = useState<string>(\"\");\r\n  const [deleteResponse, setDeleteResponse] = useState<DeleteResponse | null>(null);\r\n  const [deleteLoading, setDeleteLoading] = useState<boolean>(false);\r\n\r\n  // PATCH (update) form states\r\n  const [updateMessageId, setUpdateMessageId] = useState<string>(\"\");\r\n  const [updateText, setUpdateText] = useState<string>(\"\");\r\n  const [patchResponse, setPatchResponse] = useState<PatchResponse | null>(null);\r\n  const [patchLoading, setPatchLoading] = useState<boolean>(false);\r\n\r\n  async function handlePostSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setPostLoading(true);\r\n    setPostResponse(null);\r\n\r\n    try {\r\n      const res = await fetch(\"/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ sender_id: senderId, receiver_id: receiverId, text }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setPostResponse({ status: res.status, data });\r\n    } catch (error) {\r\n      setPostResponse({\r\n        status: \"Error\",\r\n        data: error instanceof Error ? error.message : String(error),\r\n      });\r\n    } finally {\r\n      setPostLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleGetSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setGetLoading(true);\r\n    setGetResponse(null);\r\n\r\n    try {\r\n      const res = await fetch(`/api/chat/${chatWithId}`, {\r\n        method: \"GET\",\r\n        headers: { \"x-user-id\": authUserId },\r\n      });\r\n\r\n      const data = await res.json();\r\n      setGetResponse({ status: res.status, data });\r\n    } catch (error) {\r\n      setGetResponse({\r\n        status: \"Error\",\r\n        data: error instanceof Error ? error.message : String(error),\r\n      });\r\n    } finally {\r\n      setGetLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handleDeleteSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setDeleteLoading(true);\r\n    setDeleteResponse(null);\r\n\r\n    try {\r\n      const res = await fetch(`/api/chat/${deleteMessageId}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      const data = await res.json();\r\n      setDeleteResponse({ status: res.status, data });\r\n    } catch (error) {\r\n      setDeleteResponse({\r\n        status: \"Error\",\r\n        data: error instanceof Error ? error.message : String(error),\r\n      });\r\n    } finally {\r\n      setDeleteLoading(false);\r\n    }\r\n  }\r\n\r\n  async function handlePatchSubmit(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    setPatchLoading(true);\r\n    setPatchResponse(null);\r\n\r\n    try {\r\n      const res = await fetch(`/api/chat/${updateMessageId}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: updateText }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setPatchResponse({ status: res.status, data });\r\n    } catch (error) {\r\n      setPatchResponse({\r\n        status: \"Error\",\r\n        data: error instanceof Error ? error.message : String(error),\r\n      });\r\n    } finally {\r\n      setPatchLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main style={{ maxWidth: 600, margin: \"2rem auto\", fontFamily: \"system-ui, sans-serif\" }}>\r\n      <h1>Test Chat API</h1>\r\n\r\n      {/* POST form */}\r\n      <form onSubmit={handlePostSubmit} style={{ display: \"grid\", gap: \"1rem\", marginBottom: \"3rem\" }}>\r\n        <h2>Send a Message</h2>\r\n        <label>\r\n          Sender ID:\r\n          <input\r\n            type=\"text\"\r\n            value={senderId}\r\n            onChange={(e) => setSenderId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <label>\r\n          Receiver ID:\r\n          <input\r\n            type=\"text\"\r\n            value={receiverId}\r\n            onChange={(e) => setReceiverId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <label>\r\n          Text:\r\n          <textarea\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            required\r\n            rows={4}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={postLoading}>\r\n          {postLoading ? \"Sending...\" : \"Send Message\"}\r\n        </button>\r\n      </form>\r\n\r\n      {postResponse && (\r\n        <section style={{ marginBottom: \"3rem\", whiteSpace: \"pre-wrap\", background: \"#f4f4f4\", padding: \"1rem\" }}>\r\n          <h3>Send Message Response (Status: {postResponse.status})</h3>\r\n          <code>{typeof postResponse.data === \"string\" ? postResponse.data : JSON.stringify(postResponse.data, null, 2)}</code>\r\n        </section>\r\n      )}\r\n\r\n      {/* GET form */}\r\n      <form onSubmit={handleGetSubmit} style={{ display: \"grid\", gap: \"1rem\", marginBottom: \"3rem\" }}>\r\n        <h2>Get Conversation</h2>\r\n        <label>\r\n          Your User ID (x-user-id header):\r\n          <input\r\n            type=\"text\"\r\n            value={authUserId}\r\n            onChange={(e) => setAuthUserId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <label>\r\n          Chat with User ID (in URL param):\r\n          <input\r\n            type=\"text\"\r\n            value={chatWithId}\r\n            onChange={(e) => setChatWithId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={getLoading}>\r\n          {getLoading ? \"Loading...\" : \"Get Conversation\"}\r\n        </button>\r\n      </form>\r\n\r\n      {getResponse && (\r\n        <section style={{ marginBottom: \"3rem\", whiteSpace: \"pre-wrap\", background: \"#e9f7ff\", padding: \"1rem\" }}>\r\n          <h3>Get Conversation Response (Status: {getResponse.status})</h3>\r\n          <code>{typeof getResponse.data === \"string\" ? getResponse.data : JSON.stringify(getResponse.data, null, 2)}</code>\r\n        </section>\r\n      )}\r\n\r\n      {/* DELETE form */}\r\n      <form onSubmit={handleDeleteSubmit} style={{ display: \"grid\", gap: \"1rem\", marginBottom: \"3rem\" }}>\r\n        <h2>Delete Message</h2>\r\n        <label>\r\n          Message ID to delete:\r\n          <input\r\n            type=\"text\"\r\n            value={deleteMessageId}\r\n            onChange={(e) => setDeleteMessageId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={deleteLoading}>\r\n          {deleteLoading ? \"Deleting...\" : \"Delete Message\"}\r\n        </button>\r\n      </form>\r\n\r\n      {deleteResponse && (\r\n        <section style={{ marginBottom: \"3rem\", whiteSpace: \"pre-wrap\", background: \"#ffe6e6\", padding: \"1rem\" }}>\r\n          <h3>Delete Message Response (Status: {deleteResponse.status})</h3>\r\n          <code>{typeof deleteResponse.data === \"string\" ? deleteResponse.data : JSON.stringify(deleteResponse.data, null, 2)}</code>\r\n        </section>\r\n      )}\r\n\r\n      {/* PATCH form */}\r\n      <form onSubmit={handlePatchSubmit} style={{ display: \"grid\", gap: \"1rem\" }}>\r\n        <h2>Update Message Text</h2>\r\n        <label>\r\n          Message ID to update:\r\n          <input\r\n            type=\"text\"\r\n            value={updateMessageId}\r\n            onChange={(e) => setUpdateMessageId(e.target.value)}\r\n            required\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <label>\r\n          New Text:\r\n          <textarea\r\n            value={updateText}\r\n            onChange={(e) => setUpdateText(e.target.value)}\r\n            required\r\n            rows={3}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={patchLoading}>\r\n          {patchLoading ? \"Updating...\" : \"Update Message\"}\r\n        </button>\r\n      </form>\r\n\r\n      {patchResponse && (\r\n        <section style={{ marginTop: \"2rem\", whiteSpace: \"pre-wrap\", background: \"#e6ffe6\", padding: \"1rem\" }}>\r\n          <h3>Update Message Response (Status: {patchResponse.status})</h3>\r\n          <code>{typeof patchResponse.data === \"string\" ? patchResponse.data : JSON.stringify(patchResponse.data, null, 2)}</code>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}