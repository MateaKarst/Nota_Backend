{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/components/Navbar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport { useAppHook } from \"@/context/AppUtils\";\r\nimport { useState } from \"react\";\r\n\r\nconst Navbar = () => {\r\n    const { isLoggedIn, setIsLoggedIn, refreshUser } = useAppHook(); // ✅\r\n    const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n\r\n    const handleLogout = async () => {\r\n        setIsLoggingOut(true);\r\n        await fetch(\"/api/auth/logout\", { method: \"POST\" });\r\n        await refreshUser(); // update context after logout\r\n        setIsLoggedIn(false);\r\n        setIsLoggingOut(false);\r\n        window.location.href = \"/\"; // force nav\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg px-4\" style={{ backgroundColor: \"#343a40\" }}>\r\n            <Link className=\"navbar-brand fw-bold text-white\" href=\"/\">SupaNext</Link>\r\n\r\n            {isLoggedIn ? (\r\n                <div className=\"ms-auto\">\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/dashboard\">Dashboard</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/profile\">Profile</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/editor\">Editor</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/connections\">Connections</Link>\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/auth/messages\">Messages</Link>\r\n                    <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick={handleLogout}\r\n                        disabled={isLoggingOut}\r\n                    >\r\n                        {isLoggingOut ? \"Logging out...\" : \"Logout\"}\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"ms-auto\">\r\n                    <Link className=\"me-3 text-white text-decoration-none\" href=\"/\">Home</Link>\r\n                    <Link className=\"text-white text-decoration-none\" href=\"/auth/login\">Login</Link>\r\n                </div>\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,SAAS;;IACX,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,KAAK,IAAI;IACrE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,eAAe;QACjB,gBAAgB;QAChB,MAAM,MAAM,oBAAoB;YAAE,QAAQ;QAAO;QACjD,MAAM,eAAe,8BAA8B;QACnD,cAAc;QACd,gBAAgB;QAChB,OAAO,QAAQ,CAAC,IAAI,GAAG,KAAK,YAAY;IAC5C;IAEA,qBACI,6LAAC;QAAI,WAAU;QAA+B,OAAO;YAAE,iBAAiB;QAAU;;0BAC9E,6LAAC,+JAAA,CAAA,UAAI;gBAAC,WAAU;gBAAkC,MAAK;0BAAI;;;;;;YAE1D,2BACG,6LAAC;gBAAI,WAAU;;kCACX,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAkB;;;;;;kCAC9E,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAgB;;;;;;kCAC5E,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAe;;;;;;kCAC3E,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAoB;;;;;;kCAChF,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAiB;;;;;;kCAC7E,6LAAC;wBACG,WAAU;wBACV,SAAS;wBACT,UAAU;kCAET,eAAe,mBAAmB;;;;;;;;;;;qCAI3C,6LAAC;gBAAI,WAAU;;kCACX,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAuC,MAAK;kCAAI;;;;;;kCAChE,6LAAC,+JAAA,CAAA,UAAI;wBAAC,WAAU;wBAAkC,MAAK;kCAAc;;;;;;;;;;;;;;;;;;AAKzF;GAxCM;;QACiD,8HAAA,CAAA,aAAU;;;KAD3D;uCA0CS","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/components/Footer.tsx"],"sourcesContent":["const Footer = () => {\r\n\r\n    return <>\r\n        <footer className=\"text-center py-3 mt-5\" style={ { backgroundColor: \"#343a40\",color: \"white\" } }>\r\n            <p className=\"mb-0\">&copy; { new Date().getFullYear() } Admin Panel. All Rights Reserved.</p>\r\n        </footer>\r\n    </>\r\n}\r\n\r\nexport default Footer;"],"names":[],"mappings":";;;;;AAAA,MAAM,SAAS;IAEX,qBAAO;kBACH,cAAA,6LAAC;YAAO,WAAU;YAAwB,OAAQ;gBAAE,iBAAiB;gBAAU,OAAO;YAAQ;sBAC1F,cAAA,6LAAC;gBAAE,WAAU;;oBAAO;oBAAS,IAAI,OAAO,WAAW;oBAAI;;;;;;;;;;;;;AAGnE;KAPM;uCASS","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///D:/C/TM2024-25/Nota/Frontend/Nota_Backend/src/app/auth/login/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport Navbar from \"@/components/Navbar\";\r\nimport Footer from \"@/components/Footer\";\r\nimport { useAppHook } from \"@/context/AppUtils\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport * as yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport toast from \"react-hot-toast\";\r\n\r\ntype LoginFormData = {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nconst formSchema = yup.object().shape({\r\n    email: yup.string().required(\"Email is required\").email(\"Invalid Email value\"),\r\n    password: yup.string().required(\"Password is required\")\r\n});\r\n\r\nconst Login = () => {\r\n    const { isLoggedIn, setIsLoggedIn, refreshUser } = useAppHook(); // ✅ use refreshUser\r\n    const router = useRouter();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors }\r\n    } = useForm<LoginFormData>({\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            router.push(\"/auth/dashboard\");\r\n        }\r\n    }, [isLoggedIn, router]);\r\n\r\n    const onSubmit = async (formdata: LoginFormData) => {\r\n        const { email, password } = formdata;\r\n        const response = await fetch('/api/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email, password })\r\n        });\r\n\r\n        const result = await response.json();\r\n\r\n        if (!response.ok) {\r\n            toast.error(result.message || \"Invalid login details\");\r\n        } else {\r\n            await refreshUser(); // ✅ update context after login\r\n            setIsLoggedIn(true);\r\n            toast.success(\"User logged in successfully\");\r\n            router.push(\"/auth/dashboard\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"container mt-5\">\r\n                <h2 className=\"text-center\">Login</h2>\r\n                <form onSubmit={handleSubmit(onSubmit)} className=\"w-50 mx-auto mt-3\">\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\" {...register(\"email\")} />\r\n                        <p className=\"text-danger\">{errors.email?.message}</p>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" {...register(\"password\")} />\r\n                        <p className=\"text-danger\">{errors.password?.message}</p>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100\">\r\n                        Login\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;AAiBA,MAAM,aAAa,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,KAAK,CAAC;IAClC,OAAO,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC,qBAAqB,KAAK,CAAC;IACxD,UAAU,CAAA,GAAA,sIAAA,CAAA,SAAU,AAAD,IAAI,QAAQ,CAAC;AACpC;AAEA,MAAM,QAAQ;;IACV,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,aAAU,AAAD,KAAK,oBAAoB;IACrF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,EACF,QAAQ,EACR,YAAY,EACZ,WAAW,EAAE,MAAM,EAAE,EACxB,GAAG,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAiB;QACvB,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;IAC1B;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACN,IAAI,YAAY;gBACZ,OAAO,IAAI,CAAC;YAChB;QACJ;0BAAG;QAAC;QAAY;KAAO;IAEvB,MAAM,WAAW,OAAO;QACpB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;QAC5B,MAAM,WAAW,MAAM,MAAM,mBAAmB;YAC5C,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QAC3C;QAEA,MAAM,SAAS,MAAM,SAAS,IAAI;QAElC,IAAI,CAAC,SAAS,EAAE,EAAE;YACd,0JAAA,CAAA,UAAK,CAAC,KAAK,CAAC,OAAO,OAAO,IAAI;QAClC,OAAO;YACH,MAAM,eAAe,+BAA+B;YACpD,cAAc;YACd,0JAAA,CAAA,UAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC;QAChB;IACJ;IAEA,qBACI;;0BACI,6LAAC,+HAAA,CAAA,UAAM;;;;;0BACP,6LAAC;gBAAI,WAAU;;kCACX,6LAAC;wBAAG,WAAU;kCAAc;;;;;;kCAC5B,6LAAC;wBAAK,UAAU,aAAa;wBAAW,WAAU;;0CAC9C,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAM,WAAU;kDAAa;;;;;;kDAC9B,6LAAC;wCAAM,MAAK;wCAAQ,WAAU;wCAAgB,GAAG,SAAS,QAAQ;;;;;;kDAClE,6LAAC;wCAAE,WAAU;kDAAe,OAAO,KAAK,EAAE;;;;;;;;;;;;0CAE9C,6LAAC;gCAAI,WAAU;;kDACX,6LAAC;wCAAM,WAAU;kDAAa;;;;;;kDAC9B,6LAAC;wCAAM,MAAK;wCAAW,WAAU;wCAAgB,GAAG,SAAS,WAAW;;;;;;kDACxE,6LAAC;wCAAE,WAAU;kDAAe,OAAO,QAAQ,EAAE;;;;;;;;;;;;0CAEjD,6LAAC;gCAAO,MAAK;gCAAS,WAAU;0CAAwB;;;;;;;;;;;;;;;;;;0BAKhE,6LAAC,+HAAA,CAAA,UAAM;;;;;;;AAGnB;GAhEM;;QACiD,8HAAA,CAAA,aAAU;QAC9C,qIAAA,CAAA,YAAS;QAMpB,iKAAA,CAAA,UAAO;;;KART;uCAkES","debugId":null}}]
}